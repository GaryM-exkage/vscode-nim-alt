{"version":3,"sources":["../webpack/bootstrap","../external \"vscode\"",".././src/nimUtils.ts",".././src/nimSuggestExec.ts","../external \"fs\"","../external \"path\"","../external \"child_process\"","../external \"util\"",".././node_modules/underscore/underscore.js",".././node_modules/nedb/lib/model.js",".././node_modules/async/lib/async.js",".././src/nimMode.ts","../external \"os\"",".././src/nimImports.ts",".././src/nimIndexer.ts",".././node_modules/nedb/lib/customUtils.js",".././node_modules/nedb/lib/indexes.js",".././node_modules/binary-search-tree/lib/bst.js",".././node_modules/binary-search-tree/lib/customUtils.js",".././src/nimStatus.ts",".././src/nimMain.ts",".././src/elrpc/elrpc.ts","../external \"net\"",".././src/elrpc/sexp.ts",".././src/nimSuggest.ts",".././src/nimDeclaration.ts",".././src/nimReferences.ts",".././src/nimHover.ts",".././src/nimRename.ts",".././src/nimOutline.ts",".././node_modules/nedb/index.js",".././node_modules/nedb/lib/datastore.js","../external \"crypto\"",".././node_modules/nedb/lib/executor.js",".././node_modules/binary-search-tree/index.js",".././node_modules/binary-search-tree/lib/avltree.js",".././node_modules/nedb/lib/persistence.js",".././node_modules/nedb/lib/storage.js",".././node_modules/mkdirp/index.js",".././node_modules/nedb/lib/cursor.js","../external \"events\"",".././src/nimSignature.ts",".././src/nimFormatting.ts",".././src/nimBuild.ts"],"names":[],"mappings":"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;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,sCAAsC,mBAAmB,EAAE;AAC3D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA,gDAAgD,mCAAmC;AACnF,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA,+CAA+C,mCAAmC;AAClF,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,uDAAuD,mBAAmB;AAC1E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,2CAA2C,iCAAiC,EAAE;AAC9E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,OAAO;AAC3C;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,UAAU,OAAO;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,6BAA6B,8BAA8B,EAAE;AAC7D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iCAAiC,+BAA+B,EAAE;AAClE;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,QAAQ;AAC5C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,qDAAqD;AACrD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM,IAA2B;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB,gBAAgB;AAChB,gBAAgB;AAChB,kBAAkB;AAClB,kBAAkB;AAClB,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,4BAA4B;;AAE5B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,2CAA2C,8BAA8B,EAAE;;AAE3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,KAAK;AACL,iBAAiB;;AAEjB;AACA,kDAAkD,EAAE,iBAAiB;;AAErE;AACA,wBAAwB,8BAA8B;AACtD,2BAA2B;;AAE3B;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,sEAAsE,iBAAiB;;AAEvF;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;ACzsCD;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAW,mBAAO,CAAC,CAAM;AACzB,QAAQ,mBAAO,CAAC,CAAY;AAC5B;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,wEAAwE,iBAAiB,KAAK;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,0BAA0B,kBAAkB;AAC5C,qBAAqB,aAAa;;AAElC;AACA;AACA,gDAAgD,SAAS,6BAA6B;;AAEtF;AACA,GAAG;;AAEH;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,oBAAoB;AAC7C,iGAAiG,UAAU;AAC3G,wBAAwB,iBAAiB;;AAEzC;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,8BAA8B,mCAAmC,EAAE;AACnE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA,mBAAmB;AACnB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,WAAW;AACzB,cAAc,UAAU;AACxB;AACA;;AAEA;AACA;;AAEA,aAAa,kCAAkC;AAC/C;;AAEA,qBAAqB,aAAa;AAClC;;AAEA;AACA;AACA;;;AAGA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,iCAAiC;AACzD,wBAAwB,gCAAgC;;AAExD;AACA,mBAAmB,4BAA4B;AAC/C,mBAAmB,2BAA2B;;AAE9C;AACA,8BAA8B,sDAAsD;AACpF,8BAA8B,qDAAqD;;AAEnF;AACA,8BAA8B,0DAA0D;AACxF,8BAA8B,yDAAyD;;AAEvF;AACA,+BAA+B,uDAAuD;AACtF,+BAA+B,sDAAsD;;AAErF;AACA,uBAAuB,mEAAmE;AAC1F,uBAAuB,kEAAkE;;AAEzF;AACA,wBAAwB,mDAAmD;AAC3E,wBAAwB,kDAAkD;;AAE1E;AACA;AACA;;AAEA,aAAa,0CAA0C;AACvD;;AAEA,qBAAqB,aAAa;AAClC;;AAEA;AACA;;;;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iBAAiB;;AAEpD,kCAAkC,+DAA+D;;AAEjG;AACA;AACA;;AAEA;AACA,4GAA4G,sFAAsF;AAClM,qCAAqC,kDAAkD;;AAEvF;AACA;AACA,KAAK;;AAEL,yEAAyE,QAAQ;;AAEjF;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mCAAmC,iBAAiB;;AAEpD,kCAAkC,mEAAmE;;AAErG;AACA,wCAAwC,sEAAsE;AAC9G,qCAAqC,kDAAkD;;AAEvF;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA,0CAA0C,kBAAkB;AAC5D,KAAK;AACL,mBAAmB,wBAAwB;AAC3C;AACA;;;AAGA;AACA;AACA;AACA;AACA,kCAAkC,gEAAgE;AAClG,kCAAkC,sEAAsE;AACxG,oBAAoB,QAAQ;;AAE5B;AACA;AACA,GAAG;AACH;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA,kCAAkC,iEAAiE;;AAEnG;AACA,0BAA0B,QAAQ;AAClC;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,kCAAkC,8CAA8C;;AAEhF;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0C;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,oCAAoC,QAAQ,EAAE;AAC9C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;;AAGD;AACA;AACA;AACA;AACA;AACA,gDAAgD,gBAAgB,EAAE;AAClE,4DAA4D,kBAAkB,EAAE;AAChF;AACA;;AAEA,kEAAkE,uDAAuD;;AAEzH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA,kCAAkC,0CAA0C;;AAE5E;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;;AAEA,+BAA+B,sDAAsD;AACrF;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;;AAEA,aAAa,kBAAkB,EAAE;;AAEjC,gCAAgC,YAAY;;AAE5C,gCAAgC,2BAA2B;;AAE3D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,+BAA+B;AAC9C;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,+FAA+F,gBAAgB;;AAE/G;AACA,yCAAyC,wEAAwE;;AAEjH;AACA;AACA,8HAA8H,cAAc;;AAE5I;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA,sCAAsC,cAAc;AACpD,aAAa,kBAAkB;AAC/B,yCAAyC,cAAc;AACvD,oDAAoD,cAAc;AAClE;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,8BAA8B,cAAc;;AAE5C;AACA;;;AAGA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,aAAa;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,wBAAwB,aAAa;AACrC;AACA;;AAEA;AACA;;AAEA,yBAAyB,yDAAyD;;AAElF,aAAa,cAAc;AAC3B,kCAAkC,aAAa;AAC/C;;AAEA;AACA;;AAEA;AACA,yBAAyB,0DAA0D;;AAEnF;AACA;;AAEA;AACA,0BAA0B,uEAAuE;;AAEjG;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA,gCAAgC;AAChC,kBAAkB;AAClB,GAAG;AACH;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,6BAA6B,cAAc;AAC3C,0BAA0B,6DAA6D;;AAEvF;AACA;AACA;AACA,2BAA2B,cAAc;AACzC;AACA,qBAAqB;AACrB;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,iBAAiB;AAC5B;AACA;AACA;;AAEA,6BAA6B,uDAAuD;;AAEpF,aAAa,kBAAkB;AAC/B,+BAA+B,aAAa;AAC5C;;AAEA;AACA;;;AAGA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,iBAAiB;AAC5B;AACA;AACA;;AAEA,6BAA6B,wDAAwD;;AAErF,aAAa,kBAAkB;AAC/B,gCAAgC,cAAc;AAC9C;;AAEA;AACA;;;AAGA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB;AACA;AACA;AACA;;;AAGA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB;AACA;AACA;;AAEA,0BAA0B,4DAA4D;;AAEtF;AACA,6BAA6B,wDAAwD;;AAErF;AACA;;;AAGA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2BAA2B,gBAAgB;AAC3C;;AAEA;AACA;AACA,aAAa,sBAAsB;AACnC;AACA;;AAEA;AACA,wCAAwC,yDAAyD;AACjG,yDAAyD,cAAc;AACvE,KAAK;AACL,uDAAuD,cAAc;AACrE;AACA;;AAEA;AACA;;;AAGA;AACA,uCAAuC,aAAa;AACpD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,iBAAiB;AAClC,gDAAgD,wDAAwD;AACxG;AACA;;AAEA,wCAAwC,aAAa;AACrD,eAAe,qBAAqB;AACpC,0BAA0B,iBAAiB,qBAAqB,aAAa,EAAE;AAC/E;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,8CAA8C,gBAAgB,EAAE;AAChE,0DAA0D,kBAAkB,EAAE;;AAE9E;AACA;AACA;;AAEA,8CAA8C;AAC9C;AACA,iBAAiB,iBAAiB;AAClC,4CAA4C,2DAA2D;;AAEvG,2EAA2E,cAAc;AACzF;AACA;AACA;AACA;;AAEA;AACA,kCAAkC,yDAAyD;;AAE3F;AACA;AACA,8CAA8C,cAAc;;AAE5D;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACl0BA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,oBAAoB;AACpB,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB;AACpB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB;AACpB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,6BAA6B;AACjE;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,2BAA2B,sBAAsB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,aAAa;AACb;AACA;;AAEA;AACA,mBAAmB,mCAAmC;AACtD;;AAEA;AACA,mBAAmB,iDAAiD;AACpE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe;AACf;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB;;AAErB;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,aAAa;AACb;AAC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;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,mBAAmB,2CAA2C;AAC9D,KAAK;AACL;AACA;AACA;;;AAGA;AACA;AACA,WAAW,MAAM;AACjB,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH,iBAAiB;;AAEjB;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,MAAM;AACjB,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;;AAEA,eAAe,sBAAsB;AACrC;AACA;AACA,GAAG;;AAEH;AACA;;;;;AAKA;AACA;;;;;;;ACrSA;AACA;AACA;AACA,kBAAkB,mBAAO,CAAC,EAAe;;;AAGzC;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,IAAI;AACf,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA,sCAAsC,wBAAwB;AAC9D;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,oCAAoC,QAAQ;;AAE5C;AACA,kBAAkB,gDAAgD;AAClE,mBAAmB,iDAAiD;AACpE;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA,oCAAoC,QAAQ;;AAE5C;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,oCAAoC,8DAA8D;AAClG;AACA;;AAEA;AACA,qCAAqC,8DAA8D;AACnG;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,qDAAqD;AACzE;;;AAGA;AACA;AACA;AACA;AACA;;AAEA,oCAAoC,UAAU;;AAE9C;AACA,kBAAkB,oCAAoC;AACtD,mBAAmB,qCAAqC;;AAExD;AACA;;;;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL,4BAA4B,yBAAyB;AACrD;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL,6BAA6B,yBAAyB;AACtD;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,oCAAoC,WAAW;;AAE/C,8CAA8C,kBAAkB;;AAEhE;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAwB,aAAa;AACrC;;AAEA;AACA;AACA,6BAA6B,6CAA6C;AAC1E;;AAEA;AACA,6BAA6B,+CAA+C;AAC5E,KAAK;AACL,6BAA6B,6CAA6C;AAC1E;AACA;;AAEA;AACA,2BAA2B,6CAA6C;AACxE,GAAG;AACH,2BAA2B,+CAA+C;AAC1E;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAwB,aAAa;AACrC;;AAEA;AACA;AACA,6BAA6B,6CAA6C;AAC1E;;AAEA;AACA,6BAA6B,+CAA+C;AAC5E,KAAK;AACL,6BAA6B,6CAA6C;AAC1E;AACA;;AAEA;AACA,2BAA2B,6CAA6C;AACxE,GAAG;AACH,2BAA2B,+CAA+C;AAC1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CA,GAAG;AACH;;;AAGA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,wCAAwC,uBAAuB;;AAE/D;AACA,iDAAiD,iEAAiE,EAAE;;AAEpH;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA,qCAAqC,0BAA0B;AAC/D,cAAc,sBAAsB;AACpC;AACA,GAAG;AACH;;;AAGA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB;AACA;AACA;;AAEA;;AAEA,qCAAqC,4BAA4B;AACjE,cAAc,sBAAsB;AACpC;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,iBAAiB;AAC9B;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,kBAAkB;AACjC;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA,6DAA6D,iBAAiB;AAC9E;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,iBAAiB;AAC9B;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,kBAAkB;AACjC;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,8BAA8B,6BAA6B;;AAE3D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,kBAAkB,qBAAqB,EAAE,OAAO,8BAA8B;AAC9E,KAAK;;AAEL;AACA,oBAAoB,WAAW,IAAI;AACnC,kBAAkB,sBAAsB;AACxC;AACA,OAAO;AACP,KAAK;AACL;AACA,KAAK;AACL,GAAG;AACH;;;AAGA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA,cAAc,sBAAsB;AACpC;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mCAAmC,yDAAyD,EAAE;AAC9F,GAAG;AACH;AACA,wCAAwC,sCAAsC;AAC9E;AACA,oEAAoE,6BAA6B;AACjG,oEAAoE,6BAA6B;AACjG;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,yBAAyB;AACtC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,cAAc;AAC7B;AACA;;AAEA;AACA;AACA;;AAEA;AACA,sBAAsB,qDAAqD;AAC3E;;;AAGA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA,cAAc,sBAAsB;AACpC;AACA,GAAG;;AAEH;AACA;AACA,GAAG;AACH;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA,cAAc,sBAAsB;;AAEpC,eAAe,iBAAiB;AAChC;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;AAGA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,cAAc,sBAAsB;AACpC;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;AAGA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sCAAsC,cAAc,cAAc;AAClE;AACA;AACA;;AAEA;AACA,iBAAiB;AACjB,kBAAkB,aAAa;;AAE/B;AACA;AACA;AACA,gBAAgB,sBAAsB;AACtC;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA,oBAAoB,sBAAsB;AAC1C;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA,iBAAiB;AACjB;;AAEA;AACA,gBAAgB,sBAAsB;;AAEtC;AACA;AACA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA,qCAAqC,qCAAqC;AAC1E;AACA;AACA;AACA;AACA;AACA,gCAAgC,6CAA6C;AAC7E;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,sBAAsB;AACxC;AACA;AACA,SAAS;AACT;AACA,8CAA8C,yCAAyC,EAAE;AACzF,wBAAwB,kCAAkC;AAC1D;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;AACH;;AAEA;AACA,sBAAsB,qDAAqD;AAC3E;;;AAGA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sCAAsC,cAAc,cAAc;AAClE;AACA;;AAEA;AACA,cAAc,sBAAsB;;AAEpC;AACA;AACA;AACA;AACA,4BAA4B,8BAA8B;AAC1D;AACA;AACA,OAAO;AACP,KAAK,cAAc,sBAAsB;;AAEzC;AACA,gBAAgB,sBAAsB;AACtC;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA,sBAAsB,qDAAqD;AAC3E;;;;AAIA;;;;;;;AC/rBA,mC;;;;;;ACAA;AACA;AACA;;AAEA,YAAY,mBAAO,CAAC,CAAO;AAC3B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,2BAA2B,UAAU,sCAAsC;AAC9F;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,2DAA2D,MAAM;AACjE,KAAK;AACL;AACA,qCAAqC,MAAM,EAAE;AAC7C;;;AAGA;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,wBAAwB,UAAU,iCAAiC;AAChF;AACA;;;;AAIA;AACA;;;;;;;AC7EA,kCAAkC,mBAAO,CAAC,EAAW;AACrD,yBAAyB,mBAAO,CAAC,EAAe;;;;;;;ACDhD;AACA;AACA;AACA,uBAAuB,mBAAO,CAAC,EAAO;AACtC,kBAAkB,mBAAO,CAAC,EAAe;AACzC,WAAW,mBAAO,CAAC,CAAM;AACzB,QAAQ,mBAAO,CAAC,CAAY;AAC5B;;;AAGA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB;AACA;AACA;AACA;;;AAGA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,IAAI;AACf,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA,sCAAsC,wBAAwB;AAC9D;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA,oCAAoC,QAAQ,EAAE;;AAE9C,oDAAoD,+DAA+D;AACnH,sDAAsD,gEAAgE;AACtH,kCAAkC,0DAA0D;;AAE5F;AACA;;AAEA,oDAAoD,kEAAkE;AACtH,kBAAkB,gCAAgC;AAClD,mBAAmB,iCAAiC;AACpD;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,2CAA2C,2DAA2D;;AAEtG,kBAAkB,iCAAiC;AACnD,mBAAmB,kCAAkC;AACrD;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,yBAAyB;;;AAGtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAW,aAAa,EAAE;;AAE1B;;AAEA;AACA;AACA;AACA,8BAA8B,mBAAmB,EAAE,OAAO,oBAAoB;AAC9E,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,UAAU,cAAc;;AAExB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAW,aAAa,EAAE;;AAE1B;;AAEA;AACA;AACA;AACA,8BAA8B,mBAAmB,EAAE,OAAO,oBAAoB;AAC9E,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,UAAU,cAAc;;AAExB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,kCAAkC,aAAa,EAAE;;AAEjD;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,mCAAmC,aAAa,EAAE;;AAElD;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oCAAoC,oBAAoB,aAAa,EAAE;;AAEvE;AACA,2BAA2B,QAAQ;AACnC;;AAEA;AACA;AACA,oBAAoB,mBAAmB;AACvC;;AAEA;AACA;AACA,oBAAoB,mBAAmB;AACvC;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,qDAAqD,yBAAyB;AAC9E;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA,sDAAsD,yBAAyB;AAC/E;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gBAAgB,qBAAqB;AACrC;;;AAGA;AACA;AACA,WAAW,IAAI;AACf,WAAW,MAAM;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oCAAoC,aAAa,EAAE;;AAEnD;AACA;AACA;AACA,8DAA8D,OAAO;;AAErE;;AAEA;AACA;AACA;AACA,OAAO;AACP,oBAAoB;AACpB;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP,oBAAoB;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA,sDAAsD,iBAAiB;AACvE,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA,+BAA+B;AAC/B;AACA,yBAAyB;AACzB,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,2BAA2B,uCAAuC;AAClE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA,yBAAyB,8CAA8C;;AAEvE;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gBAAgB,qBAAqB;AACrC;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;AAGD;AACA;;;;;;;ACtcA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,EAAW;AACjC,WAAW,mBAAO,CAAC,CAAM;AACzB,YAAY,mBAAO,CAAC,CAAS;AAC7B,YAAY,mBAAO,CAAC,CAAO;AAC3B,kBAAkB,mBAAO,CAAC,EAAe;AACzC,YAAY,mBAAO,CAAC,EAAW;AAC/B;;;AAGA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE,UAAU;AAClF,8EAA8E,UAAU;AACxF,aAAa,QAAQ;AACrB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sCAAsC,sBAAsB,EAAE;AAC9D;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,mEAAmE;AACrF;AACA;AACA;AACA;AACA,kBAAkB,sEAAsE;AACxF;AACA;AACA;AACA;AACA,kBAAkB,sEAAsE;AACxF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA,0BAA0B,uBAAuB;;AAEjD;AACA;AACA,GAAG;AACH;AACA,6BAA6B;AAC7B,4DAA4D,kBAAkB,8GAA8G;AAC5L;AACA,GAAG;;AAEH;AACA,cAAc,sBAAsB;AACpC;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA;AACA,yBAAyB,4DAA4D;AACrF;;;AAGA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA;AACA,sCAAsC,8CAA8C;AACpF;;;AAGA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,uBAAuB;;AAEjD;AACA;AACA,GAAG;;AAEH,+BAA+B,uBAAuB;;AAEtD;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,iBAAiB;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH,UAAU;AACV;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,0BAA0B,uBAAuB;;AAEjD;AACA;AACA;AACA;AACA;AACA,sBAAsB,gBAAgB;;AAEtC;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA,aAAa;AACb,qCAAqC;AACrC;AACA;;AAEA;AACA,WAAW;AACX,SAAS;AACT,OAAO;AACP;AACA;AACA,iBAAiB,sBAAsB;;AAEvC;AACA;AACA,MAAM;AACN;;;AAGA;AACA;;;;;;;ACzTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAS,mBAAO,CAAC,CAAI;AACrB,aAAa,mBAAO,CAAC,EAAQ;AAC7B,YAAY,mBAAO,CAAC,CAAO;AAC3B,WAAW,mBAAO,CAAC,CAAM;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,kBAAkB,uBAAuB;;AAEzC,yCAAyC,sBAAsB,EAAE;AACjE,GAAG;AACH;;;AAGA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,wFAAwF,uBAAuB;;AAE/G;AACA,cAAc,sBAAsB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;AACH;;;AAGA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB;AACA;AACA;AACA;;AAEA;AACA,yCAAyC,gDAAgD;AACzF;AACA;AACA;AACA,2DAA2D,gBAAgB,EAAE;AAC7E,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA,4DAA4D,gBAAgB,EAAE;AAC9E;AACA;AACA;AACA,6DAA6D,gBAAgB,EAAE;AAC/E;AACA,yCAAyC,gDAAgD;AACzF,qBAAqB,sBAAsB,EAAE;AAC7C;;;AAGA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB;AACA;AACA;;AAEA;AACA;AACA,yBAAyB,uBAAuB;;AAEhD;AACA;AACA;AACA,uEAAuE,eAAe,EAAE;AACxF;;AAEA;AACA,6DAA6D,sBAAsB,EAAE;AACrF,KAAK;AACL,GAAG;AACH;;;;AAIA;AACA;;;;;;;ACvIA,WAAW,mBAAO,CAAC,CAAM;AACzB,SAAS,mBAAO,CAAC,CAAI;AACrB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,gBAAgB;AAChB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;AClGA;AACA;AACA;AACA,YAAY,mBAAO,CAAC,CAAS;AAC7B,QAAQ,mBAAO,CAAC,CAAY;AAC5B;;;;AAIA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA,eAAe,sBAAsB;AACrC;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,WAAW,UAAU,2BAA2B,eAAe;AAC/D;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,WAAW,OAAO,0CAA0C,mCAAmC,mBAAmB;AAClH,iCAAiC,mBAAmB;AACpD;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iEAAiE,mEAAmE;AACpI;AACA,GAAG;;AAEH;AACA;AACA;AACA,uBAAuB;AACvB,gBAAgB,SAAS;AACzB;AACA;AACA,2CAA2C,uBAAuB;AAClE,OAAO;AACP,8BAA8B;AAC9B,KAAK,OAAO;AACZ,gBAAgB,WAAW;AAC3B,iCAAiC,0BAA0B;AAC3D;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;;AAEH;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,cAAc,sBAAsB;;AAEpC;AACA,iBAAiB,uBAAuB;AACxC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,wDAAwD,OAAO;AAC/D;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,iBAAiB;AAClC;AACA,uBAAuB,uCAAuC;AAC9D;AACA;AACA;AACA,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,GAAG;AACH;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","file":"nimMain.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 19);\n","module.exports = require(\"vscode\");","/*---------------------------------------------------------\r\n * Copyright (C) Xored Software Inc. All rights reserved.\r\n * Licensed under the MIT License. See LICENSE in the project root for license information.\r\n *--------------------------------------------------------*/\r\n\r\n'use strict';\r\n\r\nimport fs = require('fs');\r\nimport path = require('path');\r\nimport os = require('os');\r\nimport cp = require('child_process');\r\nimport vscode = require('vscode');\r\n\r\nexport interface ProjectFileInfo {\r\n    wsFolder: vscode.WorkspaceFolder;\r\n    filePath: string;\r\n}\r\n\r\nexport interface ProjectMappingInfo {\r\n    fileRegex: RegExp;\r\n    projectPath: string;\r\n}\r\n\r\nlet _pathesCache: { [tool: string]: string; } = {};\r\nvar _projects: ProjectFileInfo[] = [];\r\nvar _projectMapping: ProjectMappingInfo[] = [];\r\n\r\nexport function getNimExecPath(): string {\r\n    let path = getBinPath('nim');\r\n    if (!path) {\r\n        vscode.window.showInformationMessage('No \\'nim\\' binary could be found in PATH environment variable');\r\n    }\r\n    return path;\r\n}\r\n\r\n/**\r\n * Returns true if path related to any workspace folders,\r\n *\r\n * @param filePath absolute file path\r\n */\r\nexport function isWorkspaceFile(filePath: string): boolean {\r\n    if (vscode.workspace.workspaceFolders) {\r\n        for (const wsFolder of vscode.workspace.workspaceFolders) {\r\n            if (wsFolder.uri.scheme === 'file' &&\r\n                filePath.toLowerCase().startsWith(wsFolder.uri.fsPath.toLowerCase())) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\n/**\r\n * Return project info from file path.\r\n *\r\n * @param filePath relative or absolite file path\r\n */\r\nexport function toProjectInfo(filePath: string): ProjectFileInfo {\r\n    if (path.isAbsolute(filePath)) {\r\n        let workspaceFolder = vscode.workspace.getWorkspaceFolder(vscode.Uri.file(filePath));\r\n        if (workspaceFolder) {\r\n            return { wsFolder: workspaceFolder, filePath: vscode.workspace.asRelativePath(filePath, false) };\r\n        }\r\n    } else {\r\n        if (vscode.workspace.workspaceFolders && vscode.workspace.workspaceFolders.length > 0) {\r\n            if (vscode.workspace.workspaceFolders.length === 1) {\r\n                return { wsFolder: vscode.workspace.workspaceFolders[0], filePath: filePath };\r\n            } else {\r\n                let parsedPath = filePath.split('/');\r\n                if (parsedPath.length > 1) {\r\n                    for (const folder of vscode.workspace.workspaceFolders) {\r\n                        if (parsedPath[0] === folder.name) {\r\n                            return { wsFolder: folder, filePath: filePath.substr(parsedPath[0].length + 1) };\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    let parsedPath = path.parse(filePath);\r\n    return {\r\n        wsFolder: {\r\n            uri: vscode.Uri.file(parsedPath.dir),\r\n            name: 'root',\r\n            index: 0\r\n        },\r\n        filePath: parsedPath.base\r\n    };\r\n}\r\n\r\n/**\r\n * Return project file in filesystem.\r\n *\r\n * @param project project file info\r\n */\r\nexport function toLocalFile(project: ProjectFileInfo): string {\r\n    return project.wsFolder.uri.with({path: project.wsFolder.uri.path + '/' + project.filePath}).fsPath;\r\n}\r\n\r\n/**\r\n * Returns full path to nimpretty executables or '' if file not found.\r\n */\r\nexport function getNimPrettyExecPath(): string {\r\n    let toolname = 'nimpretty';\r\n    if (!_pathesCache[toolname]) {\r\n        let nimPrettyPath = path.resolve(path.dirname(getNimExecPath()), correctBinname(toolname));\r\n        if (fs.existsSync(nimPrettyPath)) {\r\n            _pathesCache[toolname] = nimPrettyPath;\r\n        } else {\r\n            _pathesCache[toolname] = '';\r\n        }\r\n    }\r\n    return _pathesCache[toolname];\r\n}\r\n\r\n/**\r\n * Returns full path to nimble executables or '' if file not found.\r\n */\r\nexport function getNimbleExecPath(): string {\r\n    let toolname = 'nimble';\r\n    if (!_pathesCache[toolname]) {\r\n        let nimblePath = path.resolve(path.dirname(getNimExecPath()), correctBinname(toolname));\r\n        if (fs.existsSync(nimblePath)) {\r\n            _pathesCache[toolname] = nimblePath;\r\n        } else {\r\n            _pathesCache[toolname] = '';\r\n        }\r\n    }\r\n    return _pathesCache[toolname];\r\n}\r\n\r\nexport function getProjectFileInfo(filename: string): ProjectFileInfo {\r\n    if (!isProjectMode()) {\r\n        if (_projectMapping.length > 0) {\r\n            var projectInfo: ProjectFileInfo | undefined;\r\n            let uriPath = vscode.Uri.file(filename).path;\r\n            _projectMapping.forEach(mapping => {\r\n                if (mapping.fileRegex.test(uriPath)) {\r\n                    projectInfo = toProjectInfo(uriPath.replace(mapping.fileRegex, mapping.projectPath));\r\n                    return;\r\n                }\r\n            });\r\n            if (!projectInfo) {\r\n                projectInfo = toProjectInfo(filename);\r\n            }\r\n            return projectInfo;\r\n        } else {\r\n            return toProjectInfo(filename);\r\n        }\r\n    }\r\n    for (const project of _projects) {\r\n        if (filename.startsWith(path.dirname(toLocalFile(project)))) {\r\n            return project;\r\n        }\r\n    }\r\n    return _projects[0];\r\n}\r\n\r\n/**\r\n * Returns temporary file path of edited document.\r\n */\r\nexport function getDirtyFile(document: vscode.TextDocument): string {\r\n    var dirtyFilePath = path.normalize(path.join(os.tmpdir(), 'vscodenimdirty.nim'));\r\n    fs.writeFileSync(dirtyFilePath, document.getText());\r\n    return dirtyFilePath;\r\n}\r\n\r\nexport function isProjectMode(): boolean {\r\n    return _projects.length > 0;\r\n}\r\n\r\nexport function getProjects(): ProjectFileInfo[] {\r\n    return _projects;\r\n}\r\n\r\nexport function prepareConfig(): void {\r\n    let config = vscode.workspace.getConfiguration('nim');\r\n    let projects = config['project'];\r\n    _projects = [];\r\n    if (projects) {\r\n        if (projects instanceof Array) {\r\n            projects.forEach((project) => {\r\n                _projects.push(toProjectInfo(project));\r\n            });\r\n        } else {\r\n            vscode.workspace.findFiles(projects).then(result => {\r\n                if (result && result.length > 0) {\r\n                    _projects.push(toProjectInfo(result[0].fsPath));\r\n                }\r\n            });\r\n        }\r\n    }\r\n    let projectMapping = config['projectMapping'];\r\n    _projectMapping = [];\r\n    if (projectMapping) {\r\n        if (projectMapping instanceof Object) {\r\n            for (const key in projectMapping) {\r\n                if (projectMapping.hasOwnProperty(key)) {\r\n                    const path = <string> projectMapping[key];\r\n                    _projectMapping.push({ fileRegex: new RegExp(key), projectPath: path });\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function getBinPath(tool: string): string {\r\n    if (_pathesCache[tool]) return _pathesCache[tool];\r\n    if (process.env['PATH']) {\r\n        // add support for choosenim\r\n        process.env['PATH'] = process.env['PATH'] + (<any>path).delimiter + process.env['HOME'] + '/.nimble/bin';\r\n        var pathparts = (<string>process.env.PATH).split((<any>path).delimiter);\r\n        _pathesCache[tool] = pathparts.map(dir => path.join(dir, correctBinname(tool))).filter(candidate => fs.existsSync(candidate))[0];\r\n        if (process.platform !== 'win32') {\r\n            try {\r\n                let nimPath;\r\n                if (process.platform === 'darwin') {\r\n                    nimPath = cp.execFileSync('readlink', [_pathesCache[tool]]).toString().trim();\r\n                    if (nimPath.length > 0 && !path.isAbsolute(nimPath)) {\r\n                        nimPath = path.normalize(path.join(path.dirname(_pathesCache[tool]), nimPath));\r\n                    }\r\n                } else if (process.platform === 'linux') {\r\n                    nimPath = cp.execFileSync('readlink', ['-f', _pathesCache[tool]]).toString().trim();\r\n                } else {\r\n                    nimPath = cp.execFileSync('readlink', [_pathesCache[tool]]).toString().trim();\r\n                }\r\n\r\n                if (nimPath.length > 0) {\r\n                    _pathesCache[tool] = nimPath;\r\n                }\r\n            } catch (e) {\r\n                // ignore exception\r\n            }\r\n        }\r\n    }\r\n    return _pathesCache[tool];\r\n}\r\n\r\nexport function correctBinname(binname: string): string {\r\n    if (process.platform === 'win32') {\r\n        return binname + '.exe';\r\n    } else {\r\n        return binname;\r\n    }\r\n}\r\n\r\nexport function removeDirSync(p: string): void {\r\n    if (fs.existsSync(p)) {\r\n        fs.readdirSync(p).forEach((file, index) => {\r\n            var curPath = path.resolve(p, file);\r\n            if (fs.lstatSync(curPath).isDirectory()) {\r\n                removeDirSync(curPath);\r\n            } else {\r\n                fs.unlinkSync(curPath);\r\n            }\r\n        });\r\n        fs.rmdirSync(p);\r\n    }\r\n}\r\n\r\n\r\nlet _channel: vscode.OutputChannel;\r\nexport function getOutputChannel() {\r\n    if (!_channel) {\r\n        _channel = vscode.window.createOutputChannel('Nim');\r\n    }\r\n    return _channel;\r\n}\r\nfunction padStart(len: number, input: string): string {\r\n    let out = '';\r\n    for (let i = input.length; i < len; i++) {\r\n        out += '0';\r\n    }\r\n    return out + input;\r\n}\r\nfunction cleanDateString(date: Date): string {\r\n    let year = date.getFullYear();\r\n    let month = padStart(2, date.getMonth().toString());\r\n    let dd = padStart(2, date.getDate().toString());\r\n    let hour = padStart(2, date.getHours().toString());\r\n    let minute = padStart(2, date.getMinutes().toString());\r\n    let second = padStart(2, date.getSeconds().toString());\r\n    let millisecond = padStart(3, date.getMilliseconds().toString());\r\n    return `${year}-${month}-${dd} ${hour}:${minute}:${second}.${millisecond}`;\r\n}\r\n\r\n/**\r\n * Prints message in Nim's output channel\r\n */\r\nexport function outputLine(message: string) {\r\n    let channel = getOutputChannel();\r\n    let timeNow = new Date();\r\n    channel.appendLine(`${cleanDateString(timeNow)} - ${message}`);\r\n}","/*---------------------------------------------------------\r\n * Copyright (C) Xored Software Inc. All rights reserved.\r\n * Licensed under the MIT License. See LICENSE in the project root for license information.\r\n *--------------------------------------------------------*/\r\n\r\n'use strict';\r\n\r\nimport vscode = require('vscode');\r\nimport cp = require('child_process');\r\nimport path = require('path');\r\nimport fs = require('fs');\r\nimport elrpc = require('./elrpc/elrpc');\r\nimport { prepareConfig, getProjectFileInfo, isProjectMode, getNimExecPath, correctBinname, ProjectFileInfo, toLocalFile } from './nimUtils';\r\n\r\nclass NimSuggestProcessDescription {\r\n    process?: cp.ChildProcess;\r\n    rpc?: elrpc.EPCPeer;\r\n}\r\n\r\nlet nimSuggestProcessCache: { [project: string]: PromiseLike<NimSuggestProcessDescription> | undefined } = {};\r\nvar _nimSuggestPath: string = '';\r\nvar _nimSuggestVersion: string = '';\r\n\r\nexport enum NimSuggestType {\r\n    /** Suggest from position */\r\n    sug,\r\n    /** Get context from position */\r\n    con,\r\n    /** Get symbol definition from position */\r\n    def,\r\n    /** Get references of symbol from position */\r\n    use,\r\n    /** Get usage of symbol from position in project */\r\n    dus,\r\n    /** Ivoke nim check on file */\r\n    chk,\r\n    /** Returns all tokens in file (symbolType, line, pos, lenght) */\r\n    highlight,\r\n    /** Get outline symbols for file */\r\n    outline,\r\n    /** Returns 'true' if given file is related to the project, otherwise 'false'  */\r\n    known\r\n}\r\n/**\r\n * Parsed string line from nimsuggest utility.\r\n */\r\nexport class NimSuggestResult {\r\n\r\n    /** Three characters indicating the type of returned answer\r\n     * (e.g. def for definition, sug for suggestion, etc). */\r\n    answerType: string = '';\r\n\r\n    /** Type of the symbol. This can be skProc, skLet, and just\r\n     *  about any of the enums defined in the module compiler/ast.nim. */\r\n    suggest: string = '';\r\n\r\n    /** Full qualitifed path of the symbol.If you are querying a symbol\r\n     * defined in the proj.nim file, this would have the form [proj, symbolName]. */\r\n    names: string[] = [];\r\n\r\n    /** Type / signature.For variables and enums this will contain the type\r\n     * of the symbol, for procs, methods and templates this will contain the\r\n     * full unique signature (e.g.proc(File)). */\r\n    type: string = '';\r\n\r\n    /** Full path to the file containing the symbol. */\r\n    path: string = '';\r\n\r\n    /** Line where the symbol is located in the file.Lines start to count at 1. */\r\n    line: number = 1;\r\n\r\n    /** Column where the symbol is located in the file.Columns start to count at 0. */\r\n    column: number = 0;\r\n\r\n    /** Docstring for the symbol if available or the empty string.\r\n     * To differentiate the docstring from end of answer in server mode,\r\n     * the docstring is always provided enclosed in double quotes, and if\r\n     * the docstring spans multiple lines, all following lines of the docstring\r\n     * will start with a blank space to align visually with the starting quote.\r\n     * //\r\n     * Also, you won't find raw \\n characters breaking the one answer per line format.\r\n     * Instead you will need to parse sequences in the form \\xHH, where HH\r\n     * is a hexadecimal value (e.g. newlines generate the sequence \\x0A). */\r\n    documentation: string = '';\r\n\r\n    get range(): vscode.Range {\r\n        return new vscode.Range(this.line - 1, this.column, this.line - 1, this.column);\r\n    }\r\n\r\n    get position(): vscode.Position {\r\n        return new vscode.Position(this.line - 1, this.column);\r\n    }\r\n\r\n    get uri(): vscode.Uri {\r\n        return vscode.Uri.file(this.path);\r\n    }\r\n\r\n    get location(): vscode.Location {\r\n        return new vscode.Location(this.uri, this.position);\r\n    }\r\n\r\n    get fullName(): string {\r\n        return this.names ? this.names.join('.') : '';\r\n    }\r\n\r\n    get symbolName(): string {\r\n        return this.names ? this.names[this.names.length - 1] : '';\r\n    }\r\n\r\n    get moduleName(): string {\r\n        return this.names ? this.names[0] : '';\r\n    }\r\n\r\n    get containerName(): string {\r\n        return this.names ? this.names.slice(0, this.names.length - 1).join('.') : '';\r\n    }\r\n}\r\n\r\nexport function getNimSuggestPath(): string {\r\n    return _nimSuggestPath;\r\n}\r\n\r\nexport function getNimSuggestVersion(): string {\r\n    return _nimSuggestVersion;\r\n}\r\n\r\n/**\r\n * Returns true if nimsuggest version is great or equals to given.\r\n * @param version version to match\r\n */\r\nexport function isNimSuggestVersion(version: string): boolean {\r\n    if (!_nimSuggestVersion) {\r\n        return false;\r\n    }\r\n    let nimVersionParts = _nimSuggestVersion.split('.');\r\n    let versionParts = version.split('.');\r\n    for (var i = 0; i < Math.min(nimVersionParts.length, versionParts.length); i++) {\r\n        let diff = parseInt(nimVersionParts[i]) - parseInt(versionParts[i]);\r\n        if (diff === 0) {\r\n            continue;\r\n        }\r\n        return diff > 0;\r\n    }\r\n    return true;\r\n}\r\n\r\nexport function initNimSuggest() {\r\n    prepareConfig();\r\n    // let check nimsuggest related nim executable\r\n    let nimSuggestNewPath = path.resolve(path.dirname(getNimExecPath()), correctBinname('nimsuggest'));\r\n    if (fs.existsSync(nimSuggestNewPath)) {\r\n        _nimSuggestPath = nimSuggestNewPath;\r\n        let versionOutput = cp.spawnSync(getNimSuggestPath(), ['--version'], { cwd: vscode.workspace.rootPath }).output.toString();\r\n        let versionArgs = /.+Version\\s([\\d|\\.]+)\\s\\(.+/g.exec(versionOutput);\r\n        if (versionArgs && versionArgs.length === 2) {\r\n            _nimSuggestVersion = versionArgs[1];\r\n        }\r\n\r\n        console.log(versionOutput);\r\n        console.log('Nimsuggest version: ' + _nimSuggestVersion);\r\n    }\r\n    vscode.workspace.onDidChangeConfiguration(prepareConfig);\r\n}\r\n\r\nfunction trace(pid: number, projectFile: ProjectFileInfo | string, msg: any): void {\r\n    if (!!vscode.workspace.getConfiguration('nim').get('logNimsuggest')) {\r\n        if (typeof projectFile === 'string') {\r\n            console.log('[' + pid + ':' + projectFile + ']');\r\n        } else {\r\n            console.log('[' + pid + ':' + projectFile.wsFolder.name + ':' + projectFile.wsFolder.uri.fsPath + ':' + projectFile.filePath + ']');\r\n        }\r\n        console.log(msg);\r\n    }\r\n}\r\n\r\nexport async function execNimSuggest(suggestType: NimSuggestType, filename: string,\r\n    line: number, column: number, dirtyFile?: string): Promise<NimSuggestResult[] | undefined> {\r\n    var nimSuggestExec = getNimSuggestPath();\r\n    // if nimsuggest not found just ignore\r\n    if (!nimSuggestExec) {\r\n        return [];\r\n    }\r\n\r\n    // Dont run nimsuggest for nims files and cfg\r\n    // See https://github.com/pragmagic/vscode-nim/issues/84\r\n    if (path.extname(filename).toLowerCase() === '.nims' || path.extname(filename).toLowerCase() === '.cfg') {\r\n        return [];\r\n    }\r\n\r\n    let projectFile = getProjectFileInfo(filename);\r\n    try {\r\n        let normalizedFilename = filename.replace(/\\\\+/g, '/');\r\n        let desc = await getNimSuggestProcess(projectFile);\r\n        let suggestCmd = NimSuggestType[suggestType];\r\n        if (desc && desc.process) {\r\n            trace(desc.process.pid, projectFile, suggestCmd + ' ' + normalizedFilename + ':' + line + ':' + column);\r\n        }\r\n        var result: NimSuggestResult[] = [];\r\n        if (desc && desc.rpc) {\r\n            let ret = await desc.rpc.callMethod(suggestCmd, { kind: 'string', str: normalizedFilename }, { kind: 'number', n: line }, { kind: 'number', n: column }, { kind: 'string', str: dirtyFile as string });\r\n\r\n            if (desc.process) {\r\n                trace(desc.process.pid, toLocalFile(projectFile) + '=' + suggestCmd + ' ' + normalizedFilename, ret);\r\n            }\r\n\r\n            if (ret != null) {\r\n                if (ret instanceof Array) {\r\n                    for (var i = 0; i < ret.length; i++) {\r\n                        var parts = ret[i];\r\n                        if (parts.length >= 8) {\r\n                            var item = new NimSuggestResult();\r\n                            item.answerType = parts[0];\r\n                            item.suggest = parts[1];\r\n                            item.names = parts[2];\r\n                            item.path = parts[3].replace(/\\\\,\\\\/g, '\\\\');\r\n                            item.type = parts[4];\r\n                            item.line = parts[5];\r\n                            item.column = parts[6];\r\n                            var doc = parts[7];\r\n                            if (doc !== '') {\r\n                                doc = doc.replace(/\\`\\`/g, '`');\r\n                                doc = doc.replace(/\\.\\. code-block:: (\\w+)\\r?\\n(( .*\\r?\\n?)+)/g, '```$1\\n$2\\n```\\n');\r\n                                doc = doc.replace(/\\`([^\\<\\`]+)\\<([^\\>]+)\\>\\`\\_/g, '\\[$1\\]\\($2\\)');\r\n                            }\r\n                            item.documentation = doc;\r\n                            result.push(item);\r\n                        }\r\n                    }\r\n                } else if (ret === 'EPC Connection closed') {\r\n                    console.error(ret);\r\n                    await closeNimSuggestProcess(projectFile);\r\n                } else {\r\n                    var res = new NimSuggestResult();\r\n                    res.suggest = '' + ret;\r\n                    result.push(res);\r\n                }\r\n            }\r\n        }\r\n        if (!isProjectMode() &&\r\n            vscode.window.visibleTextEditors.every((value, index, array) => { return value.document.uri.fsPath !== filename; })) {\r\n            await closeNimSuggestProcess(projectFile);\r\n        }\r\n        return result;\r\n    } catch (e) {\r\n        console.error(e);\r\n        await closeNimSuggestProcess(projectFile);\r\n    }\r\n}\r\n\r\nexport async function closeAllNimSuggestProcesses(): Promise<void> {\r\n    console.log('Close all nimsuggest processes');\r\n    for (var project in nimSuggestProcessCache) {\r\n        let desc = await nimSuggestProcessCache[project];\r\n        if (desc) {\r\n            if (desc.rpc) {\r\n                desc.rpc.stop();\r\n            }\r\n            if (desc.process) {\r\n                desc.process.kill();\r\n            }\r\n        }\r\n    }\r\n    nimSuggestProcessCache = {};\r\n}\r\n\r\nexport async function closeNimSuggestProcess(project: ProjectFileInfo): Promise<void> {\r\n    var file = toLocalFile(project);\r\n    if (nimSuggestProcessCache[file]) {\r\n        try {\r\n            let desc = await nimSuggestProcessCache[file];\r\n            if (desc) {\r\n                if (desc.rpc) {\r\n                    desc.rpc.stop();\r\n                }\r\n                if (desc.process) {\r\n                    desc.process.kill();\r\n                }\r\n            }\r\n            nimSuggestProcessCache[file] = undefined;\r\n        } catch {\r\n            nimSuggestProcessCache[file] = undefined;\r\n        }\r\n    }\r\n}\r\n\r\nasync function getNimSuggestProcess(nimProject: ProjectFileInfo): Promise<NimSuggestProcessDescription | undefined> {\r\n    let projectPath = toLocalFile(nimProject);\r\n    if (!nimSuggestProcessCache[projectPath]) {\r\n        nimSuggestProcessCache[projectPath] = new Promise<NimSuggestProcessDescription>((resolve, reject) => {\r\n            let nimConfig = vscode.workspace.getConfiguration('nim');\r\n            var args = ['--epc', '--v2'];\r\n            if (!!nimConfig['logNimsuggest']) {\r\n                args.push('--log');\r\n            }\r\n            if (!!nimConfig['useNimsuggestCheck']) {\r\n                args.push('--refresh:on');\r\n            }\r\n\r\n            args.push(nimProject.filePath);\r\n            let process = cp.spawn(getNimSuggestPath(), args, { cwd: nimProject.wsFolder.uri.fsPath });\r\n            process.stdout.once('data', (data) => {\r\n                let dataStr = data.toString();\r\n                let portNumber = parseInt(dataStr);\r\n                if (isNaN(portNumber)) {\r\n                    reject('Nimsuggest returns unknown port number: ' + dataStr);\r\n                } else {\r\n                    elrpc.startClient(portNumber).then((peer) => {\r\n                        resolve({ process: process, rpc: peer });\r\n                    });\r\n                }\r\n            });\r\n            process.stdout.once('data', (data) => {\r\n                console.log(data.toString());\r\n            });\r\n            process.stderr.once('data', (data) => {\r\n                console.log(data.toString());\r\n            });\r\n            process.on('close', (code: number, signal: string) => {\r\n                if (code !== 0) {\r\n                    console.error('nimsuggest closed with code: ' + code + ', signal: ' + signal);\r\n                }\r\n                if (nimSuggestProcessCache[projectPath]) {\r\n                    (<Promise<NimSuggestProcessDescription>> nimSuggestProcessCache[projectPath]).then((desc) => {\r\n                        if (desc && desc.rpc) {\r\n                            desc.rpc.stop();\r\n                        }\r\n                    });\r\n                }\r\n                reject();\r\n            });\r\n        });\r\n    }\r\n    return nimSuggestProcessCache[projectPath];\r\n}\r\n","module.exports = require(\"fs\");","module.exports = require(\"path\");","module.exports = require(\"child_process\");","module.exports = require(\"util\");","//     Underscore.js 1.4.4\n//     http://underscorejs.org\n//     (c) 2009-2013 Jeremy Ashkenas, DocumentCloud Inc.\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` in the browser, or `global` on the server.\n  var root = this;\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Establish the object that gets returned to break out of a loop iteration.\n  var breaker = {};\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var push             = ArrayProto.push,\n      slice            = ArrayProto.slice,\n      concat           = ArrayProto.concat,\n      toString         = ObjProto.toString,\n      hasOwnProperty   = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var\n    nativeForEach      = ArrayProto.forEach,\n    nativeMap          = ArrayProto.map,\n    nativeReduce       = ArrayProto.reduce,\n    nativeReduceRight  = ArrayProto.reduceRight,\n    nativeFilter       = ArrayProto.filter,\n    nativeEvery        = ArrayProto.every,\n    nativeSome         = ArrayProto.some,\n    nativeIndexOf      = ArrayProto.indexOf,\n    nativeLastIndexOf  = ArrayProto.lastIndexOf,\n    nativeIsArray      = Array.isArray,\n    nativeKeys         = Object.keys,\n    nativeBind         = FuncProto.bind;\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for the old `require()` API. If we're in\n  // the browser, add `_` as a global object via a string identifier,\n  // for Closure Compiler \"advanced\" mode.\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.4.4';\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles objects with the built-in `forEach`, arrays, and raw objects.\n  // Delegates to **ECMAScript 5**'s native `forEach` if available.\n  var each = _.each = _.forEach = function(obj, iterator, context) {\n    if (obj == null) return;\n    if (nativeForEach && obj.forEach === nativeForEach) {\n      obj.forEach(iterator, context);\n    } else if (obj.length === +obj.length) {\n      for (var i = 0, l = obj.length; i < l; i++) {\n        if (iterator.call(context, obj[i], i, obj) === breaker) return;\n      }\n    } else {\n      for (var key in obj) {\n        if (_.has(obj, key)) {\n          if (iterator.call(context, obj[key], key, obj) === breaker) return;\n        }\n      }\n    }\n  };\n\n  // Return the results of applying the iterator to each element.\n  // Delegates to **ECMAScript 5**'s native `map` if available.\n  _.map = _.collect = function(obj, iterator, context) {\n    var results = [];\n    if (obj == null) return results;\n    if (nativeMap && obj.map === nativeMap) return obj.map(iterator, context);\n    each(obj, function(value, index, list) {\n      results[results.length] = iterator.call(context, value, index, list);\n    });\n    return results;\n  };\n\n  var reduceError = 'Reduce of empty array with no initial value';\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`. Delegates to **ECMAScript 5**'s native `reduce` if available.\n  _.reduce = _.foldl = _.inject = function(obj, iterator, memo, context) {\n    var initial = arguments.length > 2;\n    if (obj == null) obj = [];\n    if (nativeReduce && obj.reduce === nativeReduce) {\n      if (context) iterator = _.bind(iterator, context);\n      return initial ? obj.reduce(iterator, memo) : obj.reduce(iterator);\n    }\n    each(obj, function(value, index, list) {\n      if (!initial) {\n        memo = value;\n        initial = true;\n      } else {\n        memo = iterator.call(context, memo, value, index, list);\n      }\n    });\n    if (!initial) throw new TypeError(reduceError);\n    return memo;\n  };\n\n  // The right-associative version of reduce, also known as `foldr`.\n  // Delegates to **ECMAScript 5**'s native `reduceRight` if available.\n  _.reduceRight = _.foldr = function(obj, iterator, memo, context) {\n    var initial = arguments.length > 2;\n    if (obj == null) obj = [];\n    if (nativeReduceRight && obj.reduceRight === nativeReduceRight) {\n      if (context) iterator = _.bind(iterator, context);\n      return initial ? obj.reduceRight(iterator, memo) : obj.reduceRight(iterator);\n    }\n    var length = obj.length;\n    if (length !== +length) {\n      var keys = _.keys(obj);\n      length = keys.length;\n    }\n    each(obj, function(value, index, list) {\n      index = keys ? keys[--length] : --length;\n      if (!initial) {\n        memo = obj[index];\n        initial = true;\n      } else {\n        memo = iterator.call(context, memo, obj[index], index, list);\n      }\n    });\n    if (!initial) throw new TypeError(reduceError);\n    return memo;\n  };\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, iterator, context) {\n    var result;\n    any(obj, function(value, index, list) {\n      if (iterator.call(context, value, index, list)) {\n        result = value;\n        return true;\n      }\n    });\n    return result;\n  };\n\n  // Return all the elements that pass a truth test.\n  // Delegates to **ECMAScript 5**'s native `filter` if available.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, iterator, context) {\n    var results = [];\n    if (obj == null) return results;\n    if (nativeFilter && obj.filter === nativeFilter) return obj.filter(iterator, context);\n    each(obj, function(value, index, list) {\n      if (iterator.call(context, value, index, list)) results[results.length] = value;\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, iterator, context) {\n    return _.filter(obj, function(value, index, list) {\n      return !iterator.call(context, value, index, list);\n    }, context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Delegates to **ECMAScript 5**'s native `every` if available.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, iterator, context) {\n    iterator || (iterator = _.identity);\n    var result = true;\n    if (obj == null) return result;\n    if (nativeEvery && obj.every === nativeEvery) return obj.every(iterator, context);\n    each(obj, function(value, index, list) {\n      if (!(result = result && iterator.call(context, value, index, list))) return breaker;\n    });\n    return !!result;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Delegates to **ECMAScript 5**'s native `some` if available.\n  // Aliased as `any`.\n  var any = _.some = _.any = function(obj, iterator, context) {\n    iterator || (iterator = _.identity);\n    var result = false;\n    if (obj == null) return result;\n    if (nativeSome && obj.some === nativeSome) return obj.some(iterator, context);\n    each(obj, function(value, index, list) {\n      if (result || (result = iterator.call(context, value, index, list))) return breaker;\n    });\n    return !!result;\n  };\n\n  // Determine if the array or object contains a given value (using `===`).\n  // Aliased as `include`.\n  _.contains = _.include = function(obj, target) {\n    if (obj == null) return false;\n    if (nativeIndexOf && obj.indexOf === nativeIndexOf) return obj.indexOf(target) != -1;\n    return any(obj, function(value) {\n      return value === target;\n    });\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = function(obj, method) {\n    var args = slice.call(arguments, 2);\n    var isFunc = _.isFunction(method);\n    return _.map(obj, function(value) {\n      return (isFunc ? method : value[method]).apply(value, args);\n    });\n  };\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, function(value){ return value[key]; });\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs, first) {\n    if (_.isEmpty(attrs)) return first ? null : [];\n    return _[first ? 'find' : 'filter'](obj, function(value) {\n      for (var key in attrs) {\n        if (attrs[key] !== value[key]) return false;\n      }\n      return true;\n    });\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.where(obj, attrs, true);\n  };\n\n  // Return the maximum element or (element-based computation).\n  // Can't optimize arrays of integers longer than 65,535 elements.\n  // See: https://bugs.webkit.org/show_bug.cgi?id=80797\n  _.max = function(obj, iterator, context) {\n    if (!iterator && _.isArray(obj) && obj[0] === +obj[0] && obj.length < 65535) {\n      return Math.max.apply(Math, obj);\n    }\n    if (!iterator && _.isEmpty(obj)) return -Infinity;\n    var result = {computed : -Infinity, value: -Infinity};\n    each(obj, function(value, index, list) {\n      var computed = iterator ? iterator.call(context, value, index, list) : value;\n      computed >= result.computed && (result = {value : value, computed : computed});\n    });\n    return result.value;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iterator, context) {\n    if (!iterator && _.isArray(obj) && obj[0] === +obj[0] && obj.length < 65535) {\n      return Math.min.apply(Math, obj);\n    }\n    if (!iterator && _.isEmpty(obj)) return Infinity;\n    var result = {computed : Infinity, value: Infinity};\n    each(obj, function(value, index, list) {\n      var computed = iterator ? iterator.call(context, value, index, list) : value;\n      computed < result.computed && (result = {value : value, computed : computed});\n    });\n    return result.value;\n  };\n\n  // Shuffle an array.\n  _.shuffle = function(obj) {\n    var rand;\n    var index = 0;\n    var shuffled = [];\n    each(obj, function(value) {\n      rand = _.random(index++);\n      shuffled[index - 1] = shuffled[rand];\n      shuffled[rand] = value;\n    });\n    return shuffled;\n  };\n\n  // An internal function to generate lookup iterators.\n  var lookupIterator = function(value) {\n    return _.isFunction(value) ? value : function(obj){ return obj[value]; };\n  };\n\n  // Sort the object's values by a criterion produced by an iterator.\n  _.sortBy = function(obj, value, context) {\n    var iterator = lookupIterator(value);\n    return _.pluck(_.map(obj, function(value, index, list) {\n      return {\n        value : value,\n        index : index,\n        criteria : iterator.call(context, value, index, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index < right.index ? -1 : 1;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(obj, value, context, behavior) {\n    var result = {};\n    var iterator = lookupIterator(value || _.identity);\n    each(obj, function(value, index) {\n      var key = iterator.call(context, value, index, obj);\n      behavior(result, key, value);\n    });\n    return result;\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = function(obj, value, context) {\n    return group(obj, value, context, function(result, key, value) {\n      (_.has(result, key) ? result[key] : (result[key] = [])).push(value);\n    });\n  };\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = function(obj, value, context) {\n    return group(obj, value, context, function(result, key) {\n      if (!_.has(result, key)) result[key] = 0;\n      result[key]++;\n    });\n  };\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iterator, context) {\n    iterator = iterator == null ? _.identity : lookupIterator(iterator);\n    var value = iterator.call(context, obj);\n    var low = 0, high = array.length;\n    while (low < high) {\n      var mid = (low + high) >>> 1;\n      iterator.call(context, array[mid]) < value ? low = mid + 1 : high = mid;\n    }\n    return low;\n  };\n\n  // Safely convert anything iterable into a real, live array.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (obj.length === +obj.length) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return (obj.length === +obj.length) ? obj.length : _.keys(obj).length;\n  };\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null) return void 0;\n    return (n != null) && !guard ? slice.call(array, 0, n) : array[0];\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N. The **guard** check allows it to work with\n  // `_.map`.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, array.length - ((n == null) || guard ? 1 : n));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array. The **guard** check allows it to work with `_.map`.\n  _.last = function(array, n, guard) {\n    if (array == null) return void 0;\n    if ((n != null) && !guard) {\n      return slice.call(array, Math.max(array.length - n, 0));\n    } else {\n      return array[array.length - 1];\n    }\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array. The **guard**\n  // check allows it to work with `_.map`.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, (n == null) || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, _.identity);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, output) {\n    each(input, function(value) {\n      if (_.isArray(value)) {\n        shallow ? push.apply(output, value) : flatten(value, shallow, output);\n      } else {\n        output.push(value);\n      }\n    });\n    return output;\n  };\n\n  // Return a completely flattened version of an array.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, []);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = function(array) {\n    return _.difference(array, slice.call(arguments, 1));\n  };\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iterator, context) {\n    if (_.isFunction(isSorted)) {\n      context = iterator;\n      iterator = isSorted;\n      isSorted = false;\n    }\n    var initial = iterator ? _.map(array, iterator, context) : array;\n    var results = [];\n    var seen = [];\n    each(initial, function(value, index) {\n      if (isSorted ? (!index || seen[seen.length - 1] !== value) : !_.contains(seen, value)) {\n        seen.push(value);\n        results.push(array[index]);\n      }\n    });\n    return results;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = function() {\n    return _.uniq(concat.apply(ArrayProto, arguments));\n  };\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    var rest = slice.call(arguments, 1);\n    return _.filter(_.uniq(array), function(item) {\n      return _.every(rest, function(other) {\n        return _.indexOf(other, item) >= 0;\n      });\n    });\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = function(array) {\n    var rest = concat.apply(ArrayProto, slice.call(arguments, 1));\n    return _.filter(array, function(value){ return !_.contains(rest, value); });\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = function() {\n    var args = slice.call(arguments);\n    var length = _.max(_.pluck(args, 'length'));\n    var results = new Array(length);\n    for (var i = 0; i < length; i++) {\n      results[i] = _.pluck(args, \"\" + i);\n    }\n    return results;\n  };\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values.\n  _.object = function(list, values) {\n    if (list == null) return {};\n    var result = {};\n    for (var i = 0, l = list.length; i < l; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // If the browser doesn't supply us with indexOf (I'm looking at you, **MSIE**),\n  // we need this function. Return the position of the first occurrence of an\n  // item in an array, or -1 if the item is not included in the array.\n  // Delegates to **ECMAScript 5**'s native `indexOf` if available.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = function(array, item, isSorted) {\n    if (array == null) return -1;\n    var i = 0, l = array.length;\n    if (isSorted) {\n      if (typeof isSorted == 'number') {\n        i = (isSorted < 0 ? Math.max(0, l + isSorted) : isSorted);\n      } else {\n        i = _.sortedIndex(array, item);\n        return array[i] === item ? i : -1;\n      }\n    }\n    if (nativeIndexOf && array.indexOf === nativeIndexOf) return array.indexOf(item, isSorted);\n    for (; i < l; i++) if (array[i] === item) return i;\n    return -1;\n  };\n\n  // Delegates to **ECMAScript 5**'s native `lastIndexOf` if available.\n  _.lastIndexOf = function(array, item, from) {\n    if (array == null) return -1;\n    var hasIndex = from != null;\n    if (nativeLastIndexOf && array.lastIndexOf === nativeLastIndexOf) {\n      return hasIndex ? array.lastIndexOf(item, from) : array.lastIndexOf(item);\n    }\n    var i = (hasIndex ? from : array.length);\n    while (i--) if (array[i] === item) return i;\n    return -1;\n  };\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (arguments.length <= 1) {\n      stop = start || 0;\n      start = 0;\n    }\n    step = arguments[2] || 1;\n\n    var len = Math.max(Math.ceil((stop - start) / step), 0);\n    var idx = 0;\n    var range = new Array(len);\n\n    while(idx < len) {\n      range[idx++] = start;\n      start += step;\n    }\n\n    return range;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = function(func, context) {\n    if (func.bind === nativeBind && nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n    var args = slice.call(arguments, 2);\n    return function() {\n      return func.apply(context, args.concat(slice.call(arguments)));\n    };\n  };\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context.\n  _.partial = function(func) {\n    var args = slice.call(arguments, 1);\n    return function() {\n      return func.apply(this, args.concat(slice.call(arguments)));\n    };\n  };\n\n  // Bind all of an object's methods to that object. Useful for ensuring that\n  // all callbacks defined on an object belong to it.\n  _.bindAll = function(obj) {\n    var funcs = slice.call(arguments, 1);\n    if (funcs.length === 0) funcs = _.functions(obj);\n    each(funcs, function(f) { obj[f] = _.bind(obj[f], obj); });\n    return obj;\n  };\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memo = {};\n    hasher || (hasher = _.identity);\n    return function() {\n      var key = hasher.apply(this, arguments);\n      return _.has(memo, key) ? memo[key] : (memo[key] = func.apply(this, arguments));\n    };\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = function(func, wait) {\n    var args = slice.call(arguments, 2);\n    return setTimeout(function(){ return func.apply(null, args); }, wait);\n  };\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = function(func) {\n    return _.delay.apply(_, [func, 1].concat(slice.call(arguments, 1)));\n  };\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time.\n  _.throttle = function(func, wait) {\n    var context, args, timeout, result;\n    var previous = 0;\n    var later = function() {\n      previous = new Date;\n      timeout = null;\n      result = func.apply(context, args);\n    };\n    return function() {\n      var now = new Date;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0) {\n        clearTimeout(timeout);\n        timeout = null;\n        previous = now;\n        result = func.apply(context, args);\n      } else if (!timeout) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, result;\n    return function() {\n      var context = this, args = arguments;\n      var later = function() {\n        timeout = null;\n        if (!immediate) result = func.apply(context, args);\n      };\n      var callNow = immediate && !timeout;\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n      if (callNow) result = func.apply(context, args);\n      return result;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = function(func) {\n    var ran = false, memo;\n    return function() {\n      if (ran) return memo;\n      ran = true;\n      memo = func.apply(this, arguments);\n      func = null;\n      return memo;\n    };\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return function() {\n      var args = [func];\n      push.apply(args, arguments);\n      return wrapper.apply(this, args);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var funcs = arguments;\n    return function() {\n      var args = arguments;\n      for (var i = funcs.length - 1; i >= 0; i--) {\n        args = [funcs[i].apply(this, args)];\n      }\n      return args[0];\n    };\n  };\n\n  // Returns a function that will only be executed after being called N times.\n  _.after = function(times, func) {\n    if (times <= 0) return func();\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Object Functions\n  // ----------------\n\n  // Retrieve the names of an object's properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`\n  _.keys = nativeKeys || function(obj) {\n    if (obj !== Object(obj)) throw new TypeError('Invalid object');\n    var keys = [];\n    for (var key in obj) if (_.has(obj, key)) keys[keys.length] = key;\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var values = [];\n    for (var key in obj) if (_.has(obj, key)) values.push(obj[key]);\n    return values;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  _.pairs = function(obj) {\n    var pairs = [];\n    for (var key in obj) if (_.has(obj, key)) pairs.push([key, obj[key]]);\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    for (var key in obj) if (_.has(obj, key)) result[obj[key]] = key;\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = function(obj) {\n    each(slice.call(arguments, 1), function(source) {\n      if (source) {\n        for (var prop in source) {\n          obj[prop] = source[prop];\n        }\n      }\n    });\n    return obj;\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = function(obj) {\n    var copy = {};\n    var keys = concat.apply(ArrayProto, slice.call(arguments, 1));\n    each(keys, function(key) {\n      if (key in obj) copy[key] = obj[key];\n    });\n    return copy;\n  };\n\n   // Return a copy of the object without the blacklisted properties.\n  _.omit = function(obj) {\n    var copy = {};\n    var keys = concat.apply(ArrayProto, slice.call(arguments, 1));\n    for (var key in obj) {\n      if (!_.contains(keys, key)) copy[key] = obj[key];\n    }\n    return copy;\n  };\n\n  // Fill in a given object with default properties.\n  _.defaults = function(obj) {\n    each(slice.call(arguments, 1), function(source) {\n      if (source) {\n        for (var prop in source) {\n          if (obj[prop] == null) obj[prop] = source[prop];\n        }\n      }\n    });\n    return obj;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the Harmony `egal` proposal: http://wiki.ecmascript.org/doku.php?id=harmony:egal.\n    if (a === b) return a !== 0 || 1 / a == 1 / b;\n    // A strict comparison is necessary because `null == undefined`.\n    if (a == null || b == null) return a === b;\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className != toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, dates, and booleans are compared by value.\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return a == String(b);\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive. An `egal` comparison is performed for\n        // other numeric values.\n        return a != +a ? b != +b : (a == 0 ? 1 / a == 1 / b : a == +b);\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a == +b;\n      // RegExps are compared by their source patterns and flags.\n      case '[object RegExp]':\n        return a.source == b.source &&\n               a.global == b.global &&\n               a.multiline == b.multiline &&\n               a.ignoreCase == b.ignoreCase;\n    }\n    if (typeof a != 'object' || typeof b != 'object') return false;\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] == a) return bStack[length] == b;\n    }\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n    var size = 0, result = true;\n    // Recursively compare objects and arrays.\n    if (className == '[object Array]') {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      size = a.length;\n      result = size == b.length;\n      if (result) {\n        // Deep compare the contents, ignoring non-numeric properties.\n        while (size--) {\n          if (!(result = eq(a[size], b[size], aStack, bStack))) break;\n        }\n      }\n    } else {\n      // Objects with different constructors are not equivalent, but `Object`s\n      // from different frames are.\n      var aCtor = a.constructor, bCtor = b.constructor;\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && (aCtor instanceof aCtor) &&\n                               _.isFunction(bCtor) && (bCtor instanceof bCtor))) {\n        return false;\n      }\n      // Deep compare objects.\n      for (var key in a) {\n        if (_.has(a, key)) {\n          // Count the expected number of properties.\n          size++;\n          // Deep compare each member.\n          if (!(result = _.has(b, key) && eq(a[key], b[key], aStack, bStack))) break;\n        }\n      }\n      // Ensure that both objects contain the same number of properties.\n      if (result) {\n        for (key in b) {\n          if (_.has(b, key) && !(size--)) break;\n        }\n        result = !size;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return result;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b, [], []);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (_.isArray(obj) || _.isString(obj)) return obj.length === 0;\n    for (var key in obj) if (_.has(obj, key)) return false;\n    return true;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) == '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    return obj === Object(obj);\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp.\n  each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) == '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return !!(obj && _.has(obj, 'callee'));\n    };\n  }\n\n  // Optimize `isFunction` if appropriate.\n  if (typeof (/./) !== 'function') {\n    _.isFunction = function(obj) {\n      return typeof obj === 'function';\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && obj != +obj;\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) == '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, key) {\n    return hasOwnProperty.call(obj, key);\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iterators.\n  _.identity = function(value) {\n    return value;\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iterator, context) {\n    var accum = Array(n);\n    for (var i = 0; i < n; i++) accum[i] = iterator.call(context, i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // List of HTML entities for escaping.\n  var entityMap = {\n    escape: {\n      '&': '&amp;',\n      '<': '&lt;',\n      '>': '&gt;',\n      '\"': '&quot;',\n      \"'\": '&#x27;',\n      '/': '&#x2F;'\n    }\n  };\n  entityMap.unescape = _.invert(entityMap.escape);\n\n  // Regexes containing the keys and values listed immediately above.\n  var entityRegexes = {\n    escape:   new RegExp('[' + _.keys(entityMap.escape).join('') + ']', 'g'),\n    unescape: new RegExp('(' + _.keys(entityMap.unescape).join('|') + ')', 'g')\n  };\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  _.each(['escape', 'unescape'], function(method) {\n    _[method] = function(string) {\n      if (string == null) return '';\n      return ('' + string).replace(entityRegexes[method], function(match) {\n        return entityMap[method][match];\n      });\n    };\n  });\n\n  // If the value of the named property is a function then invoke it;\n  // otherwise, return it.\n  _.result = function(object, property) {\n    if (object == null) return null;\n    var value = object[property];\n    return _.isFunction(value) ? value.call(object) : value;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    each(_.functions(obj), function(name){\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return result.call(this, func.apply(_, args));\n      };\n    });\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate    : /<%([\\s\\S]+?)%>/g,\n    interpolate : /<%=([\\s\\S]+?)%>/g,\n    escape      : /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\":      \"'\",\n    '\\\\':     '\\\\',\n    '\\r':     'r',\n    '\\n':     'n',\n    '\\t':     't',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escaper = /\\\\|'|\\r|\\n|\\t|\\u2028|\\u2029/g;\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  _.template = function(text, data, settings) {\n    var render;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = new RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset)\n        .replace(escaper, function(match) { return '\\\\' + escapes[match]; });\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      }\n      if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      }\n      if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n      index = offset + match.length;\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + \"return __p;\\n\";\n\n    try {\n      render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    if (data) return render(data, _);\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled function source as a convenience for precompilation.\n    template.source = 'function(' + (settings.variable || 'obj') + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function, which will delegate to the wrapper.\n  _.chain = function(obj) {\n    return _(obj).chain();\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var result = function(obj) {\n    return this._chain ? _(obj).chain() : obj;\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name == 'shift' || name == 'splice') && obj.length === 0) delete obj[0];\n      return result.call(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return result.call(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  _.extend(_.prototype, {\n\n    // Start chaining a wrapped Underscore object.\n    chain: function() {\n      this._chain = true;\n      return this;\n    },\n\n    // Extracts the result from a wrapped and chained object.\n    value: function() {\n      return this._wrapped;\n    }\n\n  });\n\n}).call(this);\n","/**\n * Handle models (i.e. docs)\n * Serialization/deserialization\n * Copying\n * Querying, update\n */\n\nvar util = require('util')\n  , _ = require('underscore')\n  , modifierFunctions = {}\n  , lastStepModifierFunctions = {}\n  , comparisonFunctions = {}\n  , logicalOperators = {}\n  , arrayComparisonFunctions = {}\n  ;\n\n\n/**\n * Check a key, throw an error if the key is non valid\n * @param {String} k key\n * @param {Model} v value, needed to treat the Date edge case\n * Non-treatable edge cases here: if part of the object if of the form { $$date: number } or { $$deleted: true }\n * Its serialized-then-deserialized version it will transformed into a Date object\n * But you really need to want it to trigger such behaviour, even when warned not to use '$' at the beginning of the field names...\n */\nfunction checkKey (k, v) {\n  if (typeof k === 'number') {\n    k = k.toString();\n  }\n\n  if (k[0] === '$' && !(k === '$$date' && typeof v === 'number') && !(k === '$$deleted' && v === true) && !(k === '$$indexCreated') && !(k === '$$indexRemoved')) {\n    throw new Error('Field names cannot begin with the $ character');\n  }\n\n  if (k.indexOf('.') !== -1) {\n    throw new Error('Field names cannot contain a .');\n  }\n}\n\n\n/**\n * Check a DB object and throw an error if it's not valid\n * Works by applying the above checkKey function to all fields recursively\n */\nfunction checkObject (obj) {\n  if (util.isArray(obj)) {\n    obj.forEach(function (o) {\n      checkObject(o);\n    });\n  }\n\n  if (typeof obj === 'object' && obj !== null) {\n    Object.keys(obj).forEach(function (k) {\n      checkKey(k, obj[k]);\n      checkObject(obj[k]);\n    });\n  }\n}\n\n\n/**\n * Serialize an object to be persisted to a one-line string\n * For serialization/deserialization, we use the native JSON parser and not eval or Function\n * That gives us less freedom but data entered in the database may come from users\n * so eval and the like are not safe\n * Accepted primitive types: Number, String, Boolean, Date, null\n * Accepted secondary types: Objects, Arrays\n */\nfunction serialize (obj) {\n  var res;\n\n  res = JSON.stringify(obj, function (k, v) {\n    checkKey(k, v);\n\n    if (v === undefined) { return undefined; }\n    if (v === null) { return null; }\n\n    // Hackish way of checking if object is Date (this way it works between execution contexts in node-webkit).\n    // We can't use value directly because for dates it is already string in this function (date.toJSON was already called), so we use this\n    if (typeof this[k].getTime === 'function') { return { $$date: this[k].getTime() }; }\n\n    return v;\n  });\n\n  return res;\n}\n\n\n/**\n * From a one-line representation of an object generate by the serialize function\n * Return the object itself\n */\nfunction deserialize (rawData) {\n  return JSON.parse(rawData, function (k, v) {\n    if (k === '$$date') { return new Date(v); }\n    if (typeof v === 'string' || typeof v === 'number' || typeof v === 'boolean' || v === null) { return v; }\n    if (v && v.$$date) { return v.$$date; }\n\n    return v;\n  });\n}\n\n\n/**\n * Deep copy a DB object\n * The optional strictKeys flag (defaulting to false) indicates whether to copy everything or only fields\n * where the keys are valid, i.e. don't begin with $ and don't contain a .\n */\nfunction deepCopy (obj, strictKeys) {\n  var res;\n\n  if ( typeof obj === 'boolean' ||\n       typeof obj === 'number' ||\n       typeof obj === 'string' ||\n       obj === null ||\n       (util.isDate(obj)) ) {\n    return obj;\n  }\n\n  if (util.isArray(obj)) {\n    res = [];\n    obj.forEach(function (o) { res.push(deepCopy(o, strictKeys)); });\n    return res;\n  }\n\n  if (typeof obj === 'object') {\n    res = {};\n    Object.keys(obj).forEach(function (k) {\n      if (!strictKeys || (k[0] !== '$' && k.indexOf('.') === -1)) {\n        res[k] = deepCopy(obj[k], strictKeys);\n      }\n    });\n    return res;\n  }\n\n  return undefined;   // For now everything else is undefined. We should probably throw an error instead\n}\n\n\n/**\n * Tells if an object is a primitive type or a \"real\" object\n * Arrays are considered primitive\n */\nfunction isPrimitiveType (obj) {\n  return ( typeof obj === 'boolean' ||\n       typeof obj === 'number' ||\n       typeof obj === 'string' ||\n       obj === null ||\n       util.isDate(obj) ||\n       util.isArray(obj));\n}\n\n\n/**\n * Utility functions for comparing things\n * Assumes type checking was already done (a and b already have the same type)\n * compareNSB works for numbers, strings and booleans\n */\nfunction compareNSB (a, b) {\n  if (a < b) { return -1; }\n  if (a > b) { return 1; }\n  return 0;\n}\n\nfunction compareArrays (a, b) {\n  var i, comp;\n\n  for (i = 0; i < Math.min(a.length, b.length); i += 1) {\n    comp = compareThings(a[i], b[i]);\n\n    if (comp !== 0) { return comp; }\n  }\n\n  // Common section was identical, longest one wins\n  return compareNSB(a.length, b.length);\n}\n\n\n/**\n * Compare { things U undefined }\n * Things are defined as any native types (string, number, boolean, null, date) and objects\n * We need to compare with undefined as it will be used in indexes\n * In the case of objects and arrays, we deep-compare\n * If two objects dont have the same type, the (arbitrary) type hierarchy is: undefined, null, number, strings, boolean, dates, arrays, objects\n * Return -1 if a < b, 1 if a > b and 0 if a = b (note that equality here is NOT the same as defined in areThingsEqual!)\n *\n * @param {Function} _compareStrings String comparing function, returning -1, 0 or 1, overriding default string comparison (useful for languages with accented letters)\n */\nfunction compareThings (a, b, _compareStrings) {\n  var aKeys, bKeys, comp, i\n    , compareStrings = _compareStrings || compareNSB;\n\n  // undefined\n  if (a === undefined) { return b === undefined ? 0 : -1; }\n  if (b === undefined) { return a === undefined ? 0 : 1; }\n\n  // null\n  if (a === null) { return b === null ? 0 : -1; }\n  if (b === null) { return a === null ? 0 : 1; }\n\n  // Numbers\n  if (typeof a === 'number') { return typeof b === 'number' ? compareNSB(a, b) : -1; }\n  if (typeof b === 'number') { return typeof a === 'number' ? compareNSB(a, b) : 1; }\n\n  // Strings\n  if (typeof a === 'string') { return typeof b === 'string' ? compareStrings(a, b) : -1; }\n  if (typeof b === 'string') { return typeof a === 'string' ? compareStrings(a, b) : 1; }\n\n  // Booleans\n  if (typeof a === 'boolean') { return typeof b === 'boolean' ? compareNSB(a, b) : -1; }\n  if (typeof b === 'boolean') { return typeof a === 'boolean' ? compareNSB(a, b) : 1; }\n\n  // Dates\n  if (util.isDate(a)) { return util.isDate(b) ? compareNSB(a.getTime(), b.getTime()) : -1; }\n  if (util.isDate(b)) { return util.isDate(a) ? compareNSB(a.getTime(), b.getTime()) : 1; }\n\n  // Arrays (first element is most significant and so on)\n  if (util.isArray(a)) { return util.isArray(b) ? compareArrays(a, b) : -1; }\n  if (util.isArray(b)) { return util.isArray(a) ? compareArrays(a, b) : 1; }\n\n  // Objects\n  aKeys = Object.keys(a).sort();\n  bKeys = Object.keys(b).sort();\n\n  for (i = 0; i < Math.min(aKeys.length, bKeys.length); i += 1) {\n    comp = compareThings(a[aKeys[i]], b[bKeys[i]]);\n\n    if (comp !== 0) { return comp; }\n  }\n\n  return compareNSB(aKeys.length, bKeys.length);\n}\n\n\n\n// ==============================================================\n// Updating documents\n// ==============================================================\n\n/**\n * The signature of modifier functions is as follows\n * Their structure is always the same: recursively follow the dot notation while creating\n * the nested documents if needed, then apply the \"last step modifier\"\n * @param {Object} obj The model to modify\n * @param {String} field Can contain dots, in that case that means we will set a subfield recursively\n * @param {Model} value\n */\n\n/**\n * Set a field to a new value\n */\nlastStepModifierFunctions.$set = function (obj, field, value) {\n  obj[field] = value;\n};\n\n\n/**\n * Unset a field\n */\nlastStepModifierFunctions.$unset = function (obj, field, value) {\n  delete obj[field];\n};\n\n\n/**\n * Push an element to the end of an array field\n * Optional modifier $each instead of value to push several values\n * Optional modifier $slice to slice the resulting array, see https://docs.mongodb.org/manual/reference/operator/update/slice/\n * Différeence with MongoDB: if $slice is specified and not $each, we act as if value is an empty array\n */\nlastStepModifierFunctions.$push = function (obj, field, value) {\n  // Create the array if it doesn't exist\n  if (!obj.hasOwnProperty(field)) { obj[field] = []; }\n\n  if (!util.isArray(obj[field])) { throw new Error(\"Can't $push an element on non-array values\"); }\n\n  if (value !== null && typeof value === 'object' && value.$slice && value.$each === undefined) {\n    value.$each = [];\n  }\n\n  if (value !== null && typeof value === 'object' && value.$each) {\n    if (Object.keys(value).length >= 3 || (Object.keys(value).length === 2 && value.$slice === undefined)) { throw new Error(\"Can only use $slice in cunjunction with $each when $push to array\"); }\n    if (!util.isArray(value.$each)) { throw new Error(\"$each requires an array value\"); }\n\n    value.$each.forEach(function (v) {\n      obj[field].push(v);\n    });\n\n    if (value.$slice === undefined || typeof value.$slice !== 'number') { return; }\n\n    if (value.$slice === 0) {\n      obj[field] = [];\n    } else {\n      var start, end, n = obj[field].length;\n      if (value.$slice < 0) {\n        start = Math.max(0, n + value.$slice);\n        end = n;\n      } else if (value.$slice > 0) {\n        start = 0;\n        end = Math.min(n, value.$slice);\n      }\n      obj[field] = obj[field].slice(start, end);\n    }\n  } else {\n    obj[field].push(value);\n  }\n};\n\n\n/**\n * Add an element to an array field only if it is not already in it\n * No modification if the element is already in the array\n * Note that it doesn't check whether the original array contains duplicates\n */\nlastStepModifierFunctions.$addToSet = function (obj, field, value) {\n  var addToSet = true;\n\n  // Create the array if it doesn't exist\n  if (!obj.hasOwnProperty(field)) { obj[field] = []; }\n\n  if (!util.isArray(obj[field])) { throw new Error(\"Can't $addToSet an element on non-array values\"); }\n\n  if (value !== null && typeof value === 'object' && value.$each) {\n    if (Object.keys(value).length > 1) { throw new Error(\"Can't use another field in conjunction with $each\"); }\n    if (!util.isArray(value.$each)) { throw new Error(\"$each requires an array value\"); }\n\n    value.$each.forEach(function (v) {\n      lastStepModifierFunctions.$addToSet(obj, field, v);\n    });\n  } else {\n    obj[field].forEach(function (v) {\n      if (compareThings(v, value) === 0) { addToSet = false; }\n    });\n    if (addToSet) { obj[field].push(value); }\n  }\n};\n\n\n/**\n * Remove the first or last element of an array\n */\nlastStepModifierFunctions.$pop = function (obj, field, value) {\n  if (!util.isArray(obj[field])) { throw new Error(\"Can't $pop an element from non-array values\"); }\n  if (typeof value !== 'number') { throw new Error(value + \" isn't an integer, can't use it with $pop\"); }\n  if (value === 0) { return; }\n\n  if (value > 0) {\n    obj[field] = obj[field].slice(0, obj[field].length - 1);\n  } else {\n    obj[field] = obj[field].slice(1);\n  }\n};\n\n\n/**\n * Removes all instances of a value from an existing array\n */\nlastStepModifierFunctions.$pull = function (obj, field, value) {\n  var arr, i;\n\n  if (!util.isArray(obj[field])) { throw new Error(\"Can't $pull an element from non-array values\"); }\n\n  arr = obj[field];\n  for (i = arr.length - 1; i >= 0; i -= 1) {\n    if (match(arr[i], value)) {\n      arr.splice(i, 1);\n    }\n  }\n};\n\n\n/**\n * Increment a numeric field's value\n */\nlastStepModifierFunctions.$inc = function (obj, field, value) {\n  if (typeof value !== 'number') { throw new Error(value + \" must be a number\"); }\n\n  if (typeof obj[field] !== 'number') {\n    if (!_.has(obj, field)) {\n      obj[field] = value;\n    } else {\n      throw new Error(\"Don't use the $inc modifier on non-number fields\");\n    }\n  } else {\n    obj[field] += value;\n  }\n};\n\n/**\n * Updates the value of the field, only if specified field is greater than the current value of the field\n */\nlastStepModifierFunctions.$max = function (obj, field, value) {\n  if (typeof obj[field] === 'undefined') {\n    obj[field] = value;\n  } else if (value > obj[field]) {\n    obj[field] = value;\n  }\n};\n\n/**\n * Updates the value of the field, only if specified field is smaller than the current value of the field\n */\nlastStepModifierFunctions.$min = function (obj, field, value) {\n  if (typeof obj[field] === 'undefined') { \n    obj[field] = value;\n  } else if (value < obj[field]) {\n    obj[field] = value;\n  }\n};\n\n// Given its name, create the complete modifier function\nfunction createModifierFunction (modifier) {\n  return function (obj, field, value) {\n    var fieldParts = typeof field === 'string' ? field.split('.') : field;\n\n    if (fieldParts.length === 1) {\n      lastStepModifierFunctions[modifier](obj, field, value);\n    } else {\n      if (obj[fieldParts[0]] === undefined) {\n        if (modifier === '$unset') { return; }   // Bad looking specific fix, needs to be generalized modifiers that behave like $unset are implemented\n        obj[fieldParts[0]] = {};\n      }\n      modifierFunctions[modifier](obj[fieldParts[0]], fieldParts.slice(1), value);\n    }\n  };\n}\n\n// Actually create all modifier functions\nObject.keys(lastStepModifierFunctions).forEach(function (modifier) {\n  modifierFunctions[modifier] = createModifierFunction(modifier);\n});\n\n\n/**\n * Modify a DB object according to an update query\n */\nfunction modify (obj, updateQuery) {\n  var keys = Object.keys(updateQuery)\n    , firstChars = _.map(keys, function (item) { return item[0]; })\n    , dollarFirstChars = _.filter(firstChars, function (c) { return c === '$'; })\n    , newDoc, modifiers\n    ;\n\n  if (keys.indexOf('_id') !== -1 && updateQuery._id !== obj._id) { throw new Error(\"You cannot change a document's _id\"); }\n\n  if (dollarFirstChars.length !== 0 && dollarFirstChars.length !== firstChars.length) {\n    throw new Error(\"You cannot mix modifiers and normal fields\");\n  }\n\n  if (dollarFirstChars.length === 0) {\n    // Simply replace the object with the update query contents\n    newDoc = deepCopy(updateQuery);\n    newDoc._id = obj._id;\n  } else {\n    // Apply modifiers\n    modifiers = _.uniq(keys);\n    newDoc = deepCopy(obj);\n    modifiers.forEach(function (m) {\n      var keys;\n\n      if (!modifierFunctions[m]) { throw new Error(\"Unknown modifier \" + m); }\n\n      // Can't rely on Object.keys throwing on non objects since ES6\n      // Not 100% satisfying as non objects can be interpreted as objects but no false negatives so we can live with it\n      if (typeof updateQuery[m] !== 'object') {\n        throw new Error(\"Modifier \" + m + \"'s argument must be an object\");\n      }\n\n      keys = Object.keys(updateQuery[m]);\n      keys.forEach(function (k) {\n        modifierFunctions[m](newDoc, k, updateQuery[m][k]);\n      });\n    });\n  }\n\n  // Check result is valid and return it\n  checkObject(newDoc);\n\n  if (obj._id !== newDoc._id) { throw new Error(\"You can't change a document's _id\"); }\n  return newDoc;\n};\n\n\n// ==============================================================\n// Finding documents\n// ==============================================================\n\n/**\n * Get a value from object with dot notation\n * @param {Object} obj\n * @param {String} field\n */\nfunction getDotValue (obj, field) {\n  var fieldParts = typeof field === 'string' ? field.split('.') : field\n    , i, objs;\n\n  if (!obj) { return undefined; }   // field cannot be empty so that means we should return undefined so that nothing can match\n\n  if (fieldParts.length === 0) { return obj; }\n\n  if (fieldParts.length === 1) { return obj[fieldParts[0]]; }\n\n  if (util.isArray(obj[fieldParts[0]])) {\n    // If the next field is an integer, return only this item of the array\n    i = parseInt(fieldParts[1], 10);\n    if (typeof i === 'number' && !isNaN(i)) {\n      return getDotValue(obj[fieldParts[0]][i], fieldParts.slice(2))\n    }\n\n    // Return the array of values\n    objs = new Array();\n    for (i = 0; i < obj[fieldParts[0]].length; i += 1) {\n       objs.push(getDotValue(obj[fieldParts[0]][i], fieldParts.slice(1)));\n    }\n    return objs;\n  } else {\n    return getDotValue(obj[fieldParts[0]], fieldParts.slice(1));\n  }\n}\n\n\n/**\n * Check whether 'things' are equal\n * Things are defined as any native types (string, number, boolean, null, date) and objects\n * In the case of object, we check deep equality\n * Returns true if they are, false otherwise\n */\nfunction areThingsEqual (a, b) {\n  var aKeys , bKeys , i;\n\n  // Strings, booleans, numbers, null\n  if (a === null || typeof a === 'string' || typeof a === 'boolean' || typeof a === 'number' ||\n      b === null || typeof b === 'string' || typeof b === 'boolean' || typeof b === 'number') { return a === b; }\n\n  // Dates\n  if (util.isDate(a) || util.isDate(b)) { return util.isDate(a) && util.isDate(b) && a.getTime() === b.getTime(); }\n\n  // Arrays (no match since arrays are used as a $in)\n  // undefined (no match since they mean field doesn't exist and can't be serialized)\n  if ((!(util.isArray(a) && util.isArray(b)) && (util.isArray(a) || util.isArray(b))) || a === undefined || b === undefined) { return false; }\n\n  // General objects (check for deep equality)\n  // a and b should be objects at this point\n  try {\n    aKeys = Object.keys(a);\n    bKeys = Object.keys(b);\n  } catch (e) {\n    return false;\n  }\n\n  if (aKeys.length !== bKeys.length) { return false; }\n  for (i = 0; i < aKeys.length; i += 1) {\n    if (bKeys.indexOf(aKeys[i]) === -1) { return false; }\n    if (!areThingsEqual(a[aKeys[i]], b[aKeys[i]])) { return false; }\n  }\n  return true;\n}\n\n\n/**\n * Check that two values are comparable\n */\nfunction areComparable (a, b) {\n  if (typeof a !== 'string' && typeof a !== 'number' && !util.isDate(a) &&\n      typeof b !== 'string' && typeof b !== 'number' && !util.isDate(b)) {\n    return false;\n  }\n\n  if (typeof a !== typeof b) { return false; }\n\n  return true;\n}\n\n\n/**\n * Arithmetic and comparison operators\n * @param {Native value} a Value in the object\n * @param {Native value} b Value in the query\n */\ncomparisonFunctions.$lt = function (a, b) {\n  return areComparable(a, b) && a < b;\n};\n\ncomparisonFunctions.$lte = function (a, b) {\n  return areComparable(a, b) && a <= b;\n};\n\ncomparisonFunctions.$gt = function (a, b) {\n  return areComparable(a, b) && a > b;\n};\n\ncomparisonFunctions.$gte = function (a, b) {\n  return areComparable(a, b) && a >= b;\n};\n\ncomparisonFunctions.$ne = function (a, b) {\n  if (a === undefined) { return true; }\n  return !areThingsEqual(a, b);\n};\n\ncomparisonFunctions.$in = function (a, b) {\n  var i;\n\n  if (!util.isArray(b)) { throw new Error(\"$in operator called with a non-array\"); }\n\n  for (i = 0; i < b.length; i += 1) {\n    if (areThingsEqual(a, b[i])) { return true; }\n  }\n\n  return false;\n};\n\ncomparisonFunctions.$nin = function (a, b) {\n  if (!util.isArray(b)) { throw new Error(\"$nin operator called with a non-array\"); }\n\n  return !comparisonFunctions.$in(a, b);\n};\n\ncomparisonFunctions.$regex = function (a, b) {\n  if (!util.isRegExp(b)) { throw new Error(\"$regex operator called with non regular expression\"); }\n\n  if (typeof a !== 'string') {\n    return false\n  } else {\n    return b.test(a);\n  }\n};\n\ncomparisonFunctions.$exists = function (value, exists) {\n  if (exists || exists === '') {   // This will be true for all values of exists except false, null, undefined and 0\n    exists = true;                 // That's strange behaviour (we should only use true/false) but that's the way Mongo does it...\n  } else {\n    exists = false;\n  }\n\n  if (value === undefined) {\n    return !exists\n  } else {\n    return exists;\n  }\n};\n\n// Specific to arrays\ncomparisonFunctions.$size = function (obj, value) {\n    if (!util.isArray(obj)) { return false; }\n    if (value % 1 !== 0) { throw new Error(\"$size operator called without an integer\"); }\n\n    return (obj.length == value);\n};\ncomparisonFunctions.$elemMatch = function (obj, value) {\n  if (!util.isArray(obj)) { return false; }\n  var i = obj.length;\n  var result = false;   // Initialize result\n  while (i--) {\n    if (match(obj[i], value)) {   // If match for array element, return true\n      result = true;\n      break;\n    }\n  }\n  return result;\n};\narrayComparisonFunctions.$size = true;\narrayComparisonFunctions.$elemMatch = true;\n\n\n/**\n * Match any of the subqueries\n * @param {Model} obj\n * @param {Array of Queries} query\n */\nlogicalOperators.$or = function (obj, query) {\n  var i;\n\n  if (!util.isArray(query)) { throw new Error(\"$or operator used without an array\"); }\n\n  for (i = 0; i < query.length; i += 1) {\n    if (match(obj, query[i])) { return true; }\n  }\n\n  return false;\n};\n\n\n/**\n * Match all of the subqueries\n * @param {Model} obj\n * @param {Array of Queries} query\n */\nlogicalOperators.$and = function (obj, query) {\n  var i;\n\n  if (!util.isArray(query)) { throw new Error(\"$and operator used without an array\"); }\n\n  for (i = 0; i < query.length; i += 1) {\n    if (!match(obj, query[i])) { return false; }\n  }\n\n  return true;\n};\n\n\n/**\n * Inverted match of the query\n * @param {Model} obj\n * @param {Query} query\n */\nlogicalOperators.$not = function (obj, query) {\n  return !match(obj, query);\n};\n\n\n/**\n * Use a function to match\n * @param {Model} obj\n * @param {Query} query\n */\nlogicalOperators.$where = function (obj, fn) {\n  var result;\n\n  if (!_.isFunction(fn)) { throw new Error(\"$where operator used without a function\"); }\n\n  result = fn.call(obj);\n  if (!_.isBoolean(result)) { throw new Error(\"$where function must return boolean\"); }\n\n  return result;\n};\n\n\n/**\n * Tell if a given document matches a query\n * @param {Object} obj Document to check\n * @param {Object} query\n */\nfunction match (obj, query) {\n  var queryKeys, queryKey, queryValue, i;\n\n  // Primitive query against a primitive type\n  // This is a bit of a hack since we construct an object with an arbitrary key only to dereference it later\n  // But I don't have time for a cleaner implementation now\n  if (isPrimitiveType(obj) || isPrimitiveType(query)) {\n    return matchQueryPart({ needAKey: obj }, 'needAKey', query);\n  }\n\n  // Normal query\n  queryKeys = Object.keys(query);\n  for (i = 0; i < queryKeys.length; i += 1) {\n    queryKey = queryKeys[i];\n    queryValue = query[queryKey];\n\n    if (queryKey[0] === '$') {\n      if (!logicalOperators[queryKey]) { throw new Error(\"Unknown logical operator \" + queryKey); }\n      if (!logicalOperators[queryKey](obj, queryValue)) { return false; }\n    } else {\n      if (!matchQueryPart(obj, queryKey, queryValue)) { return false; }\n    }\n  }\n\n  return true;\n};\n\n\n/**\n * Match an object against a specific { key: value } part of a query\n * if the treatObjAsValue flag is set, don't try to match every part separately, but the array as a whole\n */\nfunction matchQueryPart (obj, queryKey, queryValue, treatObjAsValue) {\n  var objValue = getDotValue(obj, queryKey)\n    , i, keys, firstChars, dollarFirstChars;\n\n  // Check if the value is an array if we don't force a treatment as value\n  if (util.isArray(objValue) && !treatObjAsValue) {\n    // If the queryValue is an array, try to perform an exact match\n    if (util.isArray(queryValue)) {\n      return matchQueryPart(obj, queryKey, queryValue, true);\n    }\n\n    // Check if we are using an array-specific comparison function\n    if (queryValue !== null && typeof queryValue === 'object' && !util.isRegExp(queryValue)) {\n      keys = Object.keys(queryValue);\n      for (i = 0; i < keys.length; i += 1) {\n        if (arrayComparisonFunctions[keys[i]]) { return matchQueryPart(obj, queryKey, queryValue, true); }\n      }\n    }\n\n    // If not, treat it as an array of { obj, query } where there needs to be at least one match\n    for (i = 0; i < objValue.length; i += 1) {\n      if (matchQueryPart({ k: objValue[i] }, 'k', queryValue)) { return true; }   // k here could be any string\n    }\n    return false;\n  }\n\n  // queryValue is an actual object. Determine whether it contains comparison operators\n  // or only normal fields. Mixed objects are not allowed\n  if (queryValue !== null && typeof queryValue === 'object' && !util.isRegExp(queryValue) && !util.isArray(queryValue)) {\n    keys = Object.keys(queryValue);\n    firstChars = _.map(keys, function (item) { return item[0]; });\n    dollarFirstChars = _.filter(firstChars, function (c) { return c === '$'; });\n\n    if (dollarFirstChars.length !== 0 && dollarFirstChars.length !== firstChars.length) {\n      throw new Error(\"You cannot mix operators and normal fields\");\n    }\n\n    // queryValue is an object of this form: { $comparisonOperator1: value1, ... }\n    if (dollarFirstChars.length > 0) {\n      for (i = 0; i < keys.length; i += 1) {\n        if (!comparisonFunctions[keys[i]]) { throw new Error(\"Unknown comparison function \" + keys[i]); }\n\n        if (!comparisonFunctions[keys[i]](objValue, queryValue[keys[i]])) { return false; }\n      }\n      return true;\n    }\n  }\n\n  // Using regular expressions with basic querying\n  if (util.isRegExp(queryValue)) { return comparisonFunctions.$regex(objValue, queryValue); }\n\n  // queryValue is either a native value or a normal object\n  // Basic matching is possible\n  if (!areThingsEqual(objValue, queryValue)) { return false; }\n\n  return true;\n}\n\n\n// Interface\nmodule.exports.serialize = serialize;\nmodule.exports.deserialize = deserialize;\nmodule.exports.deepCopy = deepCopy;\nmodule.exports.checkObject = checkObject;\nmodule.exports.isPrimitiveType = isPrimitiveType;\nmodule.exports.modify = modify;\nmodule.exports.getDotValue = getDotValue;\nmodule.exports.match = match;\nmodule.exports.areThingsEqual = areThingsEqual;\nmodule.exports.compareThings = compareThings;\n","/*global setImmediate: false, setTimeout: false, console: false */\n(function () {\n\n    var async = {};\n\n    // global on the server, window in the browser\n    var root, previous_async;\n\n    root = this;\n    if (root != null) {\n      previous_async = root.async;\n    }\n\n    async.noConflict = function () {\n        root.async = previous_async;\n        return async;\n    };\n\n    function only_once(fn) {\n        var called = false;\n        return function() {\n            if (called) throw new Error(\"Callback was already called.\");\n            called = true;\n            fn.apply(root, arguments);\n        }\n    }\n\n    //// cross-browser compatiblity functions ////\n\n    var _each = function (arr, iterator) {\n        if (arr.forEach) {\n            return arr.forEach(iterator);\n        }\n        for (var i = 0; i < arr.length; i += 1) {\n            iterator(arr[i], i, arr);\n        }\n    };\n\n    var _map = function (arr, iterator) {\n        if (arr.map) {\n            return arr.map(iterator);\n        }\n        var results = [];\n        _each(arr, function (x, i, a) {\n            results.push(iterator(x, i, a));\n        });\n        return results;\n    };\n\n    var _reduce = function (arr, iterator, memo) {\n        if (arr.reduce) {\n            return arr.reduce(iterator, memo);\n        }\n        _each(arr, function (x, i, a) {\n            memo = iterator(memo, x, i, a);\n        });\n        return memo;\n    };\n\n    var _keys = function (obj) {\n        if (Object.keys) {\n            return Object.keys(obj);\n        }\n        var keys = [];\n        for (var k in obj) {\n            if (obj.hasOwnProperty(k)) {\n                keys.push(k);\n            }\n        }\n        return keys;\n    };\n\n    //// exported async module functions ////\n\n    //// nextTick implementation with browser-compatible fallback ////\n    if (typeof process === 'undefined' || !(process.nextTick)) {\n        if (typeof setImmediate === 'function') {\n            async.nextTick = function (fn) {\n                // not a direct alias for IE10 compatibility\n                setImmediate(fn);\n            };\n            async.setImmediate = async.nextTick;\n        }\n        else {\n            async.nextTick = function (fn) {\n                setTimeout(fn, 0);\n            };\n            async.setImmediate = async.nextTick;\n        }\n    }\n    else {\n        async.nextTick = process.nextTick;\n        if (typeof setImmediate !== 'undefined') {\n            async.setImmediate = function (fn) {\n              // not a direct alias for IE10 compatibility\n              setImmediate(fn);\n            };\n        }\n        else {\n            async.setImmediate = async.nextTick;\n        }\n    }\n\n    async.each = function (arr, iterator, callback) {\n        callback = callback || function () {};\n        if (!arr.length) {\n            return callback();\n        }\n        var completed = 0;\n        _each(arr, function (x) {\n            iterator(x, only_once(function (err) {\n                if (err) {\n                    callback(err);\n                    callback = function () {};\n                }\n                else {\n                    completed += 1;\n                    if (completed >= arr.length) {\n                        callback(null);\n                    }\n                }\n            }));\n        });\n    };\n    async.forEach = async.each;\n\n    async.eachSeries = function (arr, iterator, callback) {\n        callback = callback || function () {};\n        if (!arr.length) {\n            return callback();\n        }\n        var completed = 0;\n        var iterate = function () {\n            iterator(arr[completed], function (err) {\n                if (err) {\n                    callback(err);\n                    callback = function () {};\n                }\n                else {\n                    completed += 1;\n                    if (completed >= arr.length) {\n                        callback(null);\n                    }\n                    else {\n                        iterate();\n                    }\n                }\n            });\n        };\n        iterate();\n    };\n    async.forEachSeries = async.eachSeries;\n\n    async.eachLimit = function (arr, limit, iterator, callback) {\n        var fn = _eachLimit(limit);\n        fn.apply(null, [arr, iterator, callback]);\n    };\n    async.forEachLimit = async.eachLimit;\n\n    var _eachLimit = function (limit) {\n\n        return function (arr, iterator, callback) {\n            callback = callback || function () {};\n            if (!arr.length || limit <= 0) {\n                return callback();\n            }\n            var completed = 0;\n            var started = 0;\n            var running = 0;\n\n            (function replenish () {\n                if (completed >= arr.length) {\n                    return callback();\n                }\n\n                while (running < limit && started < arr.length) {\n                    started += 1;\n                    running += 1;\n                    iterator(arr[started - 1], function (err) {\n                        if (err) {\n                            callback(err);\n                            callback = function () {};\n                        }\n                        else {\n                            completed += 1;\n                            running -= 1;\n                            if (completed >= arr.length) {\n                                callback();\n                            }\n                            else {\n                                replenish();\n                            }\n                        }\n                    });\n                }\n            })();\n        };\n    };\n\n\n    var doParallel = function (fn) {\n        return function () {\n            var args = Array.prototype.slice.call(arguments);\n            return fn.apply(null, [async.each].concat(args));\n        };\n    };\n    var doParallelLimit = function(limit, fn) {\n        return function () {\n            var args = Array.prototype.slice.call(arguments);\n            return fn.apply(null, [_eachLimit(limit)].concat(args));\n        };\n    };\n    var doSeries = function (fn) {\n        return function () {\n            var args = Array.prototype.slice.call(arguments);\n            return fn.apply(null, [async.eachSeries].concat(args));\n        };\n    };\n\n\n    var _asyncMap = function (eachfn, arr, iterator, callback) {\n        var results = [];\n        arr = _map(arr, function (x, i) {\n            return {index: i, value: x};\n        });\n        eachfn(arr, function (x, callback) {\n            iterator(x.value, function (err, v) {\n                results[x.index] = v;\n                callback(err);\n            });\n        }, function (err) {\n            callback(err, results);\n        });\n    };\n    async.map = doParallel(_asyncMap);\n    async.mapSeries = doSeries(_asyncMap);\n    async.mapLimit = function (arr, limit, iterator, callback) {\n        return _mapLimit(limit)(arr, iterator, callback);\n    };\n\n    var _mapLimit = function(limit) {\n        return doParallelLimit(limit, _asyncMap);\n    };\n\n    // reduce only has a series version, as doing reduce in parallel won't\n    // work in many situations.\n    async.reduce = function (arr, memo, iterator, callback) {\n        async.eachSeries(arr, function (x, callback) {\n            iterator(memo, x, function (err, v) {\n                memo = v;\n                callback(err);\n            });\n        }, function (err) {\n            callback(err, memo);\n        });\n    };\n    // inject alias\n    async.inject = async.reduce;\n    // foldl alias\n    async.foldl = async.reduce;\n\n    async.reduceRight = function (arr, memo, iterator, callback) {\n        var reversed = _map(arr, function (x) {\n            return x;\n        }).reverse();\n        async.reduce(reversed, memo, iterator, callback);\n    };\n    // foldr alias\n    async.foldr = async.reduceRight;\n\n    var _filter = function (eachfn, arr, iterator, callback) {\n        var results = [];\n        arr = _map(arr, function (x, i) {\n            return {index: i, value: x};\n        });\n        eachfn(arr, function (x, callback) {\n            iterator(x.value, function (v) {\n                if (v) {\n                    results.push(x);\n                }\n                callback();\n            });\n        }, function (err) {\n            callback(_map(results.sort(function (a, b) {\n                return a.index - b.index;\n            }), function (x) {\n                return x.value;\n            }));\n        });\n    };\n    async.filter = doParallel(_filter);\n    async.filterSeries = doSeries(_filter);\n    // select alias\n    async.select = async.filter;\n    async.selectSeries = async.filterSeries;\n\n    var _reject = function (eachfn, arr, iterator, callback) {\n        var results = [];\n        arr = _map(arr, function (x, i) {\n            return {index: i, value: x};\n        });\n        eachfn(arr, function (x, callback) {\n            iterator(x.value, function (v) {\n                if (!v) {\n                    results.push(x);\n                }\n                callback();\n            });\n        }, function (err) {\n            callback(_map(results.sort(function (a, b) {\n                return a.index - b.index;\n            }), function (x) {\n                return x.value;\n            }));\n        });\n    };\n    async.reject = doParallel(_reject);\n    async.rejectSeries = doSeries(_reject);\n\n    var _detect = function (eachfn, arr, iterator, main_callback) {\n        eachfn(arr, function (x, callback) {\n            iterator(x, function (result) {\n                if (result) {\n                    main_callback(x);\n                    main_callback = function () {};\n                }\n                else {\n                    callback();\n                }\n            });\n        }, function (err) {\n            main_callback();\n        });\n    };\n    async.detect = doParallel(_detect);\n    async.detectSeries = doSeries(_detect);\n\n    async.some = function (arr, iterator, main_callback) {\n        async.each(arr, function (x, callback) {\n            iterator(x, function (v) {\n                if (v) {\n                    main_callback(true);\n                    main_callback = function () {};\n                }\n                callback();\n            });\n        }, function (err) {\n            main_callback(false);\n        });\n    };\n    // any alias\n    async.any = async.some;\n\n    async.every = function (arr, iterator, main_callback) {\n        async.each(arr, function (x, callback) {\n            iterator(x, function (v) {\n                if (!v) {\n                    main_callback(false);\n                    main_callback = function () {};\n                }\n                callback();\n            });\n        }, function (err) {\n            main_callback(true);\n        });\n    };\n    // all alias\n    async.all = async.every;\n\n    async.sortBy = function (arr, iterator, callback) {\n        async.map(arr, function (x, callback) {\n            iterator(x, function (err, criteria) {\n                if (err) {\n                    callback(err);\n                }\n                else {\n                    callback(null, {value: x, criteria: criteria});\n                }\n            });\n        }, function (err, results) {\n            if (err) {\n                return callback(err);\n            }\n            else {\n                var fn = function (left, right) {\n                    var a = left.criteria, b = right.criteria;\n                    return a < b ? -1 : a > b ? 1 : 0;\n                };\n                callback(null, _map(results.sort(fn), function (x) {\n                    return x.value;\n                }));\n            }\n        });\n    };\n\n    async.auto = function (tasks, callback) {\n        callback = callback || function () {};\n        var keys = _keys(tasks);\n        if (!keys.length) {\n            return callback(null);\n        }\n\n        var results = {};\n\n        var listeners = [];\n        var addListener = function (fn) {\n            listeners.unshift(fn);\n        };\n        var removeListener = function (fn) {\n            for (var i = 0; i < listeners.length; i += 1) {\n                if (listeners[i] === fn) {\n                    listeners.splice(i, 1);\n                    return;\n                }\n            }\n        };\n        var taskComplete = function () {\n            _each(listeners.slice(0), function (fn) {\n                fn();\n            });\n        };\n\n        addListener(function () {\n            if (_keys(results).length === keys.length) {\n                callback(null, results);\n                callback = function () {};\n            }\n        });\n\n        _each(keys, function (k) {\n            var task = (tasks[k] instanceof Function) ? [tasks[k]]: tasks[k];\n            var taskCallback = function (err) {\n                var args = Array.prototype.slice.call(arguments, 1);\n                if (args.length <= 1) {\n                    args = args[0];\n                }\n                if (err) {\n                    var safeResults = {};\n                    _each(_keys(results), function(rkey) {\n                        safeResults[rkey] = results[rkey];\n                    });\n                    safeResults[k] = args;\n                    callback(err, safeResults);\n                    // stop subsequent errors hitting callback multiple times\n                    callback = function () {};\n                }\n                else {\n                    results[k] = args;\n                    async.setImmediate(taskComplete);\n                }\n            };\n            var requires = task.slice(0, Math.abs(task.length - 1)) || [];\n            var ready = function () {\n                return _reduce(requires, function (a, x) {\n                    return (a && results.hasOwnProperty(x));\n                }, true) && !results.hasOwnProperty(k);\n            };\n            if (ready()) {\n                task[task.length - 1](taskCallback, results);\n            }\n            else {\n                var listener = function () {\n                    if (ready()) {\n                        removeListener(listener);\n                        task[task.length - 1](taskCallback, results);\n                    }\n                };\n                addListener(listener);\n            }\n        });\n    };\n\n    async.waterfall = function (tasks, callback) {\n        callback = callback || function () {};\n        if (tasks.constructor !== Array) {\n          var err = new Error('First argument to waterfall must be an array of functions');\n          return callback(err);\n        }\n        if (!tasks.length) {\n            return callback();\n        }\n        var wrapIterator = function (iterator) {\n            return function (err) {\n                if (err) {\n                    callback.apply(null, arguments);\n                    callback = function () {};\n                }\n                else {\n                    var args = Array.prototype.slice.call(arguments, 1);\n                    var next = iterator.next();\n                    if (next) {\n                        args.push(wrapIterator(next));\n                    }\n                    else {\n                        args.push(callback);\n                    }\n                    async.setImmediate(function () {\n                        iterator.apply(null, args);\n                    });\n                }\n            };\n        };\n        wrapIterator(async.iterator(tasks))();\n    };\n\n    var _parallel = function(eachfn, tasks, callback) {\n        callback = callback || function () {};\n        if (tasks.constructor === Array) {\n            eachfn.map(tasks, function (fn, callback) {\n                if (fn) {\n                    fn(function (err) {\n                        var args = Array.prototype.slice.call(arguments, 1);\n                        if (args.length <= 1) {\n                            args = args[0];\n                        }\n                        callback.call(null, err, args);\n                    });\n                }\n            }, callback);\n        }\n        else {\n            var results = {};\n            eachfn.each(_keys(tasks), function (k, callback) {\n                tasks[k](function (err) {\n                    var args = Array.prototype.slice.call(arguments, 1);\n                    if (args.length <= 1) {\n                        args = args[0];\n                    }\n                    results[k] = args;\n                    callback(err);\n                });\n            }, function (err) {\n                callback(err, results);\n            });\n        }\n    };\n\n    async.parallel = function (tasks, callback) {\n        _parallel({ map: async.map, each: async.each }, tasks, callback);\n    };\n\n    async.parallelLimit = function(tasks, limit, callback) {\n        _parallel({ map: _mapLimit(limit), each: _eachLimit(limit) }, tasks, callback);\n    };\n\n    async.series = function (tasks, callback) {\n        callback = callback || function () {};\n        if (tasks.constructor === Array) {\n            async.mapSeries(tasks, function (fn, callback) {\n                if (fn) {\n                    fn(function (err) {\n                        var args = Array.prototype.slice.call(arguments, 1);\n                        if (args.length <= 1) {\n                            args = args[0];\n                        }\n                        callback.call(null, err, args);\n                    });\n                }\n            }, callback);\n        }\n        else {\n            var results = {};\n            async.eachSeries(_keys(tasks), function (k, callback) {\n                tasks[k](function (err) {\n                    var args = Array.prototype.slice.call(arguments, 1);\n                    if (args.length <= 1) {\n                        args = args[0];\n                    }\n                    results[k] = args;\n                    callback(err);\n                });\n            }, function (err) {\n                callback(err, results);\n            });\n        }\n    };\n\n    async.iterator = function (tasks) {\n        var makeCallback = function (index) {\n            var fn = function () {\n                if (tasks.length) {\n                    tasks[index].apply(null, arguments);\n                }\n                return fn.next();\n            };\n            fn.next = function () {\n                return (index < tasks.length - 1) ? makeCallback(index + 1): null;\n            };\n            return fn;\n        };\n        return makeCallback(0);\n    };\n\n    async.apply = function (fn) {\n        var args = Array.prototype.slice.call(arguments, 1);\n        return function () {\n            return fn.apply(\n                null, args.concat(Array.prototype.slice.call(arguments))\n            );\n        };\n    };\n\n    var _concat = function (eachfn, arr, fn, callback) {\n        var r = [];\n        eachfn(arr, function (x, cb) {\n            fn(x, function (err, y) {\n                r = r.concat(y || []);\n                cb(err);\n            });\n        }, function (err) {\n            callback(err, r);\n        });\n    };\n    async.concat = doParallel(_concat);\n    async.concatSeries = doSeries(_concat);\n\n    async.whilst = function (test, iterator, callback) {\n        if (test()) {\n            iterator(function (err) {\n                if (err) {\n                    return callback(err);\n                }\n                async.whilst(test, iterator, callback);\n            });\n        }\n        else {\n            callback();\n        }\n    };\n\n    async.doWhilst = function (iterator, test, callback) {\n        iterator(function (err) {\n            if (err) {\n                return callback(err);\n            }\n            if (test()) {\n                async.doWhilst(iterator, test, callback);\n            }\n            else {\n                callback();\n            }\n        });\n    };\n\n    async.until = function (test, iterator, callback) {\n        if (!test()) {\n            iterator(function (err) {\n                if (err) {\n                    return callback(err);\n                }\n                async.until(test, iterator, callback);\n            });\n        }\n        else {\n            callback();\n        }\n    };\n\n    async.doUntil = function (iterator, test, callback) {\n        iterator(function (err) {\n            if (err) {\n                return callback(err);\n            }\n            if (!test()) {\n                async.doUntil(iterator, test, callback);\n            }\n            else {\n                callback();\n            }\n        });\n    };\n\n    async.queue = function (worker, concurrency) {\n        if (concurrency === undefined) {\n            concurrency = 1;\n        }\n        function _insert(q, data, pos, callback) {\n          if(data.constructor !== Array) {\n              data = [data];\n          }\n          _each(data, function(task) {\n              var item = {\n                  data: task,\n                  callback: typeof callback === 'function' ? callback : null\n              };\n\n              if (pos) {\n                q.tasks.unshift(item);\n              } else {\n                q.tasks.push(item);\n              }\n\n              if (q.saturated && q.tasks.length === concurrency) {\n                  q.saturated();\n              }\n              async.setImmediate(q.process);\n          });\n        }\n\n        var workers = 0;\n        var q = {\n            tasks: [],\n            concurrency: concurrency,\n            saturated: null,\n            empty: null,\n            drain: null,\n            push: function (data, callback) {\n              _insert(q, data, false, callback);\n            },\n            unshift: function (data, callback) {\n              _insert(q, data, true, callback);\n            },\n            process: function () {\n                if (workers < q.concurrency && q.tasks.length) {\n                    var task = q.tasks.shift();\n                    if (q.empty && q.tasks.length === 0) {\n                        q.empty();\n                    }\n                    workers += 1;\n                    var next = function () {\n                        workers -= 1;\n                        if (task.callback) {\n                            task.callback.apply(task, arguments);\n                        }\n                        if (q.drain && q.tasks.length + workers === 0) {\n                            q.drain();\n                        }\n                        q.process();\n                    };\n                    var cb = only_once(next);\n                    worker(task.data, cb);\n                }\n            },\n            length: function () {\n                return q.tasks.length;\n            },\n            running: function () {\n                return workers;\n            }\n        };\n        return q;\n    };\n\n    async.cargo = function (worker, payload) {\n        var working     = false,\n            tasks       = [];\n\n        var cargo = {\n            tasks: tasks,\n            payload: payload,\n            saturated: null,\n            empty: null,\n            drain: null,\n            push: function (data, callback) {\n                if(data.constructor !== Array) {\n                    data = [data];\n                }\n                _each(data, function(task) {\n                    tasks.push({\n                        data: task,\n                        callback: typeof callback === 'function' ? callback : null\n                    });\n                    if (cargo.saturated && tasks.length === payload) {\n                        cargo.saturated();\n                    }\n                });\n                async.setImmediate(cargo.process);\n            },\n            process: function process() {\n                if (working) return;\n                if (tasks.length === 0) {\n                    if(cargo.drain) cargo.drain();\n                    return;\n                }\n\n                var ts = typeof payload === 'number'\n                            ? tasks.splice(0, payload)\n                            : tasks.splice(0);\n\n                var ds = _map(ts, function (task) {\n                    return task.data;\n                });\n\n                if(cargo.empty) cargo.empty();\n                working = true;\n                worker(ds, function () {\n                    working = false;\n\n                    var args = arguments;\n                    _each(ts, function (data) {\n                        if (data.callback) {\n                            data.callback.apply(null, args);\n                        }\n                    });\n\n                    process();\n                });\n            },\n            length: function () {\n                return tasks.length;\n            },\n            running: function () {\n                return working;\n            }\n        };\n        return cargo;\n    };\n\n    var _console_fn = function (name) {\n        return function (fn) {\n            var args = Array.prototype.slice.call(arguments, 1);\n            fn.apply(null, args.concat([function (err) {\n                var args = Array.prototype.slice.call(arguments, 1);\n                if (typeof console !== 'undefined') {\n                    if (err) {\n                        if (console.error) {\n                            console.error(err);\n                        }\n                    }\n                    else if (console[name]) {\n                        _each(args, function (x) {\n                            console[name](x);\n                        });\n                    }\n                }\n            }]));\n        };\n    };\n    async.log = _console_fn('log');\n    async.dir = _console_fn('dir');\n    /*async.info = _console_fn('info');\n    async.warn = _console_fn('warn');\n    async.error = _console_fn('error');*/\n\n    async.memoize = function (fn, hasher) {\n        var memo = {};\n        var queues = {};\n        hasher = hasher || function (x) {\n            return x;\n        };\n        var memoized = function () {\n            var args = Array.prototype.slice.call(arguments);\n            var callback = args.pop();\n            var key = hasher.apply(null, args);\n            if (key in memo) {\n                callback.apply(null, memo[key]);\n            }\n            else if (key in queues) {\n                queues[key].push(callback);\n            }\n            else {\n                queues[key] = [callback];\n                fn.apply(null, args.concat([function () {\n                    memo[key] = arguments;\n                    var q = queues[key];\n                    delete queues[key];\n                    for (var i = 0, l = q.length; i < l; i++) {\n                      q[i].apply(null, arguments);\n                    }\n                }]));\n            }\n        };\n        memoized.memo = memo;\n        memoized.unmemoized = fn;\n        return memoized;\n    };\n\n    async.unmemoize = function (fn) {\n      return function () {\n        return (fn.unmemoized || fn).apply(null, arguments);\n      };\n    };\n\n    async.times = function (count, iterator, callback) {\n        var counter = [];\n        for (var i = 0; i < count; i++) {\n            counter.push(i);\n        }\n        return async.map(counter, iterator, callback);\n    };\n\n    async.timesSeries = function (count, iterator, callback) {\n        var counter = [];\n        for (var i = 0; i < count; i++) {\n            counter.push(i);\n        }\n        return async.mapSeries(counter, iterator, callback);\n    };\n\n    async.compose = function (/* functions... */) {\n        var fns = Array.prototype.reverse.call(arguments);\n        return function () {\n            var that = this;\n            var args = Array.prototype.slice.call(arguments);\n            var callback = args.pop();\n            async.reduce(fns, args, function (newargs, fn, cb) {\n                fn.apply(that, newargs.concat([function () {\n                    var err = arguments[0];\n                    var nextargs = Array.prototype.slice.call(arguments, 1);\n                    cb(err, nextargs);\n                }]))\n            },\n            function (err, results) {\n                callback.apply(that, [err].concat(results));\n            });\n        };\n    };\n\n    var _applyEach = function (eachfn, fns /*args...*/) {\n        var go = function () {\n            var that = this;\n            var args = Array.prototype.slice.call(arguments);\n            var callback = args.pop();\n            return eachfn(fns, function (fn, cb) {\n                fn.apply(that, args.concat([cb]));\n            },\n            callback);\n        };\n        if (arguments.length > 2) {\n            var args = Array.prototype.slice.call(arguments, 2);\n            return go.apply(this, args);\n        }\n        else {\n            return go;\n        }\n    };\n    async.applyEach = doParallel(_applyEach);\n    async.applyEachSeries = doSeries(_applyEach);\n\n    async.forever = function (fn, callback) {\n        function next(err) {\n            if (err) {\n                if (callback) {\n                    return callback(err);\n                }\n                throw err;\n            }\n            fn(next);\n        }\n        next();\n    };\n\n    // AMD / RequireJS\n    if (typeof define !== 'undefined' && define.amd) {\n        define([], function () {\n            return async;\n        });\n    }\n    // Node.js\n    else if (typeof module !== 'undefined' && module.exports) {\n        module.exports = async;\n    }\n    // included directly via <script> tag\n    else {\n        root.async = async;\n    }\n\n}());\n","/*---------------------------------------------------------\r\n * Copyright (C) Xored Software Inc. All rights reserved.\r\n * Licensed under the MIT License. See LICENSE in the project root for license information.\r\n *--------------------------------------------------------*/\r\n\r\n'use strict';\r\n\r\nimport vscode = require('vscode');\r\n\r\nexport const NIM_MODE: vscode.DocumentFilter = { language: 'nim', scheme: 'file' };","module.exports = require(\"os\");","/*---------------------------------------------------------\r\n * Copyright (C) Xored Software Inc. All rights reserved.\r\n * Licensed under the MIT License. See LICENSE in the project root for license information.\r\n *--------------------------------------------------------*/\r\n\r\n'use strict';\r\n\r\nimport vscode = require('vscode');\r\nimport cp = require('child_process');\r\nimport fs = require('fs');\r\nimport path = require('path');\r\nimport { getNimExecPath, getProjects, isProjectMode, getNimbleExecPath } from './nimUtils';\r\n\r\nclass NimbleModuleInfo {\r\n    name!: string;\r\n    author?: string;\r\n    description?: string;\r\n    version?: string;\r\n}\r\n\r\nclass NimModuleInfo {\r\n    name!: string;\r\n    fullName!: string;\r\n    path!: string;\r\n}\r\n\r\nvar nimbleModules: NimbleModuleInfo[] = [];\r\nvar nimModules: { [project: string]: NimModuleInfo[] } = {};\r\n\r\nfunction getNimDirectories(projectDir: string, projectFile: string): Promise<string[]> {\r\n    return new Promise<string[]>((resolve, reject) => {\r\n        cp.exec(getNimExecPath() + ' dump ' + projectFile, { cwd: projectDir },\r\n            (error, stdout: string, stderr: string) => {\r\n                var res: string[] = [];\r\n                let parts = stderr.split('\\n');\r\n                for (const part of parts) {\r\n                    let p = part.trim();\r\n                    if (p.indexOf('Hint: ') !== 0 && p.length > 0) {\r\n                        res.push(p);\r\n                    }\r\n                }\r\n                resolve(res);\r\n            }\r\n        );\r\n    });\r\n}\r\n\r\nfunction createNimModule(projectDir: string, rootDir: string, dir: string, file: string): NimModuleInfo {\r\n    let fullPath = path.join(dir, file);\r\n    var nimModule = new NimModuleInfo();\r\n    nimModule.name = file.substr(0, file.length - 4);\r\n    if (dir.length > rootDir.length) {\r\n        let moduleDir = dir.substr(rootDir.length + 1).replace(path.sep, '.');\r\n        nimModule.fullName = moduleDir + '.' + nimModule.name;\r\n    } else {\r\n        nimModule.fullName = nimModule.name;\r\n    }\r\n    nimModule.path = fullPath;\r\n    return nimModule;\r\n}\r\n\r\nfunction walkDir(projectDir: string, rootDir: string, dir: string, singlePass: boolean) {\r\n    fs.readdir(dir, (err, files) => {\r\n        if (files) {\r\n            for (const file of files) {\r\n                let fullPath = path.join(dir, file);\r\n                if (fs.statSync(fullPath).isDirectory()) {\r\n                    if (!singlePass) {\r\n                        walkDir(projectDir, rootDir, fullPath, false);\r\n                    }\r\n                } else if (file.toLowerCase().endsWith('.nim')) {\r\n                    nimModules[projectDir].push(createNimModule(projectDir, rootDir, dir, file));\r\n                }\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nasync function initNimDirectories(projectDir: string, projectFile: string) {\r\n    if (!nimModules[projectDir]) {\r\n        nimModules[projectDir] = [];\r\n        let nimDirectories = await getNimDirectories(projectDir, projectFile);\r\n        let nimRoot = path.dirname(path.dirname(getNimExecPath()));\r\n        for (const dirPath of nimDirectories) {\r\n            walkDir(projectDir, dirPath, dirPath, dirPath.startsWith(nimRoot));\r\n        }\r\n    }\r\n}\r\n\r\nfunction getNimbleModules(rootDir: string): Promise<string[]> {\r\n    return new Promise<string[]>((resolve, reject) => {\r\n        cp.exec(getNimbleExecPath() + ' list -i', { cwd: rootDir },\r\n            (error, stdout: string, stderr: string) => {\r\n                var res: string[] = [];\r\n                let parts = stdout.split('\\n');\r\n                for (const part of parts) {\r\n                    let p = part.split('[')[0].trim();\r\n                    if (p.length > 0 && p !== 'compiler') {\r\n                        res.push(p);\r\n                    }\r\n                }\r\n                resolve(res);\r\n            }\r\n        );\r\n    });\r\n}\r\n\r\nasync function initNimbleModules(rootDir: string) {\r\n    let nimbleModuleNames = await getNimbleModules(rootDir);\r\n    for (const moduleName of nimbleModuleNames) {\r\n        try {\r\n            let out = cp.execSync(getNimbleExecPath() + ' --y dump ' + moduleName, { cwd: rootDir }).toString();\r\n            var nimbleModule = new NimbleModuleInfo();\r\n            nimbleModule.name = moduleName;\r\n            for (const line of out.split(/\\n/)) {\r\n                let pairs = line.trim().split(': \"');\r\n                if (pairs.length === 2) {\r\n                    let value = pairs[1].substring(0, pairs[1].length - 1);\r\n                    if (pairs[0] === 'author') {\r\n                        nimbleModule.author = value;\r\n                    } else if (pairs[0] === 'version') {\r\n                        nimbleModule.version = value;\r\n                    } else if (pairs[0] === 'desc') {\r\n                        nimbleModule.description = value;\r\n                    }\r\n                }\r\n            }\r\n            nimbleModules.push(nimbleModule);\r\n        } catch {\r\n            console.log('Module incorrect ' + moduleName);\r\n        }\r\n    }\r\n}\r\n\r\nexport function getImports(prefix: string | undefined, projectDir: string): vscode.CompletionItem[] {\r\n    var suggestions: vscode.CompletionItem[] = [];\r\n    for (const nimbleModule of nimbleModules) {\r\n        if (!prefix || nimbleModule.name.startsWith(prefix)) {\r\n            var suggestion = new vscode.CompletionItem(nimbleModule.name);\r\n            suggestion.kind = vscode.CompletionItemKind.Module;\r\n            if (nimbleModule.version) {\r\n                suggestion.detail = nimbleModule.name + ' [' + nimbleModule.version + ']';\r\n            } else {\r\n                suggestion.detail = nimbleModule.name;\r\n            }\r\n            suggestion.detail += ' (Nimble)';\r\n            var doc = '**Name**: ' + nimbleModule.name;\r\n            if (nimbleModule.version) {\r\n                doc += '\\n\\n**Version**: ' + nimbleModule.version;\r\n            }\r\n            if (nimbleModule.author) {\r\n                doc += '\\n\\n**Author**: ' + nimbleModule.author;\r\n            }\r\n            if (nimbleModule.description) {\r\n                doc += '\\n\\n**Description**: ' + nimbleModule.description;\r\n            }\r\n            suggestion.documentation = new vscode.MarkdownString(doc);\r\n            suggestions.push(suggestion);\r\n        }\r\n        if (suggestions.length >= 20) {\r\n            return suggestions;\r\n        }\r\n    }\r\n    if (nimModules[projectDir]) {\r\n        for (const nimModule of nimModules[projectDir]) {\r\n            if (!prefix || nimModule.name.startsWith(prefix)) {\r\n                var suggest = new vscode.CompletionItem(nimModule.name);\r\n                suggest.kind = vscode.CompletionItemKind.Module;\r\n                suggest.insertText = nimModule.fullName;\r\n                suggest.detail = nimModule.fullName;\r\n                suggest.documentation = nimModule.path;\r\n                suggestions.push(suggest);\r\n            }\r\n            if (suggestions.length >= 100) {\r\n                return suggestions;\r\n            }\r\n        }\r\n    }\r\n    return suggestions;\r\n}\r\n\r\nexport async function initImports() {\r\n    if (vscode.workspace.workspaceFolders) {\r\n        await await initNimbleModules(vscode.workspace.workspaceFolders[0].uri.fsPath);\r\n    }\r\n\r\n    if (isProjectMode()) {\r\n        for (const project of getProjects()) {\r\n            await initNimDirectories(project.wsFolder.uri.fsPath, project.filePath);\r\n        }\r\n    } else {\r\n        if (vscode.workspace.workspaceFolders) {\r\n            await initNimDirectories(vscode.workspace.workspaceFolders[0].uri.fsPath, '');\r\n        }\r\n    }\r\n}\r\n\r\nexport async function addFileToImports(file: string) {\r\n    if (isProjectMode()) {\r\n        for (const project of getProjects()) {\r\n            let projectDir = project.wsFolder.uri.fsPath;\r\n            if (file.startsWith(projectDir)) {\r\n                if (!nimModules[projectDir]) {\r\n                    nimModules[projectDir] = [];\r\n                }\r\n                nimModules[projectDir].push(createNimModule(projectDir, projectDir, path.dirname(file), path.basename(file)));\r\n            }\r\n        }\r\n    } else {\r\n        if (vscode.workspace.workspaceFolders) {\r\n            let projectDir = vscode.workspace.workspaceFolders[0].uri.fsPath;\r\n            if (!nimModules[projectDir]) {\r\n                nimModules[projectDir] = [];\r\n            }\r\n            nimModules[projectDir].push(createNimModule(projectDir, projectDir, path.dirname(file), path.basename(file)));\r\n        }\r\n    }\r\n}\r\n\r\nexport async function removeFileFromImports(file: string) {\r\n    for (const key in nimModules) {\r\n        const items = nimModules[key];\r\n        var i = 0;\r\n        while (i < items.length) {\r\n            if (items[i].path === file) {\r\n                items.splice(i);\r\n            } else {\r\n                i++;\r\n            }\r\n        }\r\n    }\r\n}","/*---------------------------------------------------------\r\n * Copyright (C) Xored Software Inc. All rights reserved.\r\n * Licensed under the MIT License. See LICENSE in the project root for license information.\r\n *--------------------------------------------------------*/\r\n\r\n'use strict';\r\n\r\nimport vscode = require('vscode');\r\nimport Datastore = require('nedb');\r\nimport path = require('path');\r\nimport fs = require('fs');\r\n\r\nimport { getNimSuggestPath, execNimSuggest, NimSuggestType } from './nimSuggestExec';\r\nimport { showNimProgress, hideNimProgress, updateNimProgress } from './nimStatus';\r\n\r\nlet dbVersion: number = 4;\r\n\r\nvar dbFiles: Datastore;\r\nvar dbTypes: Datastore;\r\n\r\n/**\r\n * Returns workspace path from lowercase version of worspace path.\r\n * It is required for pathes in different cases,\r\n * because nim compiler on windows system returns all pathes converted in lowercase.\r\n * @param file lowercase workspace path\r\n */\r\nexport function addWorkspaceFile(file: string): void {\r\n    indexFile(file);\r\n}\r\n\r\nexport function removeWorkspaceFile(file: string): void {\r\n    removeFromIndex(file);\r\n}\r\n\r\nexport function changeWorkspaceFile(file: string): void {\r\n    indexFile(file);\r\n}\r\n\r\nexport async function initWorkspace(extensionPath: string): Promise<void> {\r\n    // remove old version of indexes\r\n    cleanOldDb(extensionPath, 'files');\r\n    cleanOldDb(extensionPath, 'types');\r\n\r\n    dbTypes = new Datastore({ filename: path.join(extensionPath, getDbName('types', dbVersion)), autoload: true });\r\n    dbTypes.persistence.setAutocompactionInterval(600000); // compact each 10 munites\r\n    dbTypes.ensureIndex({ fieldName: 'workspace' });\r\n    dbTypes.ensureIndex({ fieldName: 'file' });\r\n    dbTypes.ensureIndex({ fieldName: 'timestamp' });\r\n    dbTypes.ensureIndex({ fieldName: 'type' });\r\n\r\n    dbFiles = new Datastore({ filename: path.join(extensionPath, getDbName('files', dbVersion)), autoload: true });\r\n    dbFiles.persistence.setAutocompactionInterval(600000); // compact each 10 munites\r\n    dbFiles.ensureIndex({ fieldName: 'file' });\r\n    dbFiles.ensureIndex({ fieldName: 'timestamp' });\r\n\r\n    if (!getNimSuggestPath()) {\r\n        return;\r\n    }\r\n\r\n    let urls = await vscode.workspace.findFiles('**/*.nim', '');\r\n\r\n    showNimProgress(`Indexing: ${urls.length}`);\r\n    for (var i = 0; i < urls.length; i++) {\r\n        let url = urls[i];\r\n        let file = url.fsPath;\r\n        let cnt = urls.length - i;\r\n\r\n        if (cnt % 10 === 0) {\r\n            updateNimProgress(`Indexing: ${cnt} of ${urls.length}`);\r\n        }\r\n\r\n        await indexFile(file);\r\n    }\r\n    hideNimProgress();\r\n}\r\n\r\nexport function findWorkspaceSymbols(query: string): Promise<vscode.SymbolInformation[]> {\r\n    return new Promise<vscode.SymbolInformation[]>((resolve, reject) => {\r\n        try {\r\n            let reg = new RegExp(query, 'i');\r\n            dbTypes.find<any>({ ws: vscode.workspace.rootPath, type: reg }).limit(100).exec((err, docs) => {\r\n                let symbols: vscode.SymbolInformation[] = [];\r\n                docs.forEach(doc => {\r\n                    symbols.push(\r\n                        new vscode.SymbolInformation(\r\n                            doc.type, doc.kind,\r\n                            new vscode.Range(new vscode.Position(doc.range_start._line, doc.range_start._character),\r\n                                new vscode.Position(doc.range_end._line, doc.range_end._character)),\r\n                            vscode.Uri.file(doc.file), doc.container));\r\n                });\r\n                resolve(symbols);\r\n            });\r\n        } catch (e) {\r\n            resolve([]);\r\n        }\r\n    });\r\n}\r\n\r\nexport function getFileSymbols(file: string, dirtyFile?: string): Promise<vscode.SymbolInformation[]> {\r\n    return new Promise<vscode.SymbolInformation[]>((resolve, reject) => {\r\n        execNimSuggest(NimSuggestType.outline, file, 0, 0, dirtyFile)\r\n            .then(result => {\r\n                var symbols: vscode.SymbolInformation[] = [];\r\n                var exists: string[] = [];\r\n                if (result) {\r\n                    result.forEach(item => {\r\n\r\n                        // skip let and var in proc and methods\r\n                        if ((item.suggest === 'skLet' || item.suggest === 'skVar') && item.containerName.indexOf('.') > 0) {\r\n                            return;\r\n                        }\r\n\r\n                        if (exists.indexOf(item.column + ':' + item.line) === -1) {\r\n                            exists.push(item.column + ':' + item.line);\r\n                            let symbolInfo = new vscode.SymbolInformation(\r\n                                item.symbolName, vscodeKindFromNimSym(item.suggest),\r\n                                item.range, item.uri, item.containerName);\r\n                            symbols.push(symbolInfo);\r\n                        }\r\n                    });\r\n                }\r\n\r\n                resolve(symbols);\r\n            })\r\n            .catch(reason => reject(reason));\r\n    });\r\n}\r\n\r\nasync function findFile(file: string, timestamp: number): Promise<any> {\r\n    return new Promise<any>((resolve, reject) => {\r\n        dbFiles.findOne({ file: file, timestamp: timestamp }, function (err, doc) { resolve(doc); });\r\n    });\r\n}\r\n\r\nasync function indexFile(file: string): Promise<void> {\r\n    let timestamp = fs.statSync(file).mtime.getTime();\r\n    let doc = await findFile(file, timestamp);\r\n    if (!doc) {\r\n        // console.log(\"index: \" + file);\r\n        let infos = await getFileSymbols(file, '');\r\n        if (infos && infos.length > 0) {\r\n            dbFiles.remove({ file: file }, { multi: true }, (err, n) => {\r\n                dbFiles.insert({ file: file, timestamp: timestamp });\r\n            });\r\n            dbTypes.remove({ file: file }, { multi: true }, (err, n) => {\r\n                infos.forEach((value) => {\r\n                    dbTypes.insert({\r\n                        ws: vscode.workspace.rootPath,\r\n                        file: value.location.uri.fsPath,\r\n                        range_start: value.location.range.start,\r\n                        range_end: value.location.range.end,\r\n                        type: value.name,\r\n                        container: value.containerName,\r\n                        kind: value.kind\r\n                    });\r\n                });\r\n            });\r\n        }\r\n    }\r\n    return;\r\n}\r\n\r\nfunction vscodeKindFromNimSym(kind: string): vscode.SymbolKind {\r\n    switch (kind) {\r\n        case 'skConst':\r\n            return vscode.SymbolKind.Constant;\r\n        case 'skEnumField':\r\n            return vscode.SymbolKind.Enum;\r\n        case 'skForVar':\r\n            return vscode.SymbolKind.Variable;\r\n        case 'skIterator':\r\n            return vscode.SymbolKind.Array;\r\n        case 'skLabel':\r\n            return vscode.SymbolKind.String;\r\n        case 'skLet':\r\n            return vscode.SymbolKind.Variable;\r\n        case 'skMacro':\r\n            return vscode.SymbolKind.Function;\r\n        case 'skMethod':\r\n            return vscode.SymbolKind.Method;\r\n        case 'skParam':\r\n            return vscode.SymbolKind.Variable;\r\n        case 'skProc':\r\n            return vscode.SymbolKind.Function;\r\n        case 'skResult':\r\n            return vscode.SymbolKind.Function;\r\n        case 'skTemplate':\r\n            return vscode.SymbolKind.Interface;\r\n        case 'skType':\r\n            return vscode.SymbolKind.Class;\r\n        case 'skVar':\r\n            return vscode.SymbolKind.Variable;\r\n        case 'skFunc':\r\n            return vscode.SymbolKind.Function;\r\n    }\r\n    return vscode.SymbolKind.Property;\r\n}\r\n\r\nfunction removeFromIndex(file: string): void {\r\n    dbFiles.remove({ file: file }, { multi: true }, function (err, doc) {\r\n        dbTypes.remove({ file: file }, { multi: true });\r\n    });\r\n}\r\n\r\nfunction cleanOldDb(basePath: string, name: string): void {\r\n    let dbPath = path.join(basePath, `${name}.db`);\r\n    if (fs.existsSync(dbPath)) {\r\n        fs.unlinkSync(dbPath);\r\n    }\r\n    for (var i = 0; i < dbVersion; ++i) {\r\n        let dbPath = path.join(basePath, getDbName(name, i));\r\n        if (fs.existsSync(dbPath)) {\r\n            fs.unlinkSync(dbPath);\r\n        }\r\n    }\r\n}\r\n\r\nfunction getDbName(name: string, version: number): string {\r\n    return `${name}_${version}.db`;\r\n}\r\n","var crypto = require('crypto')\n  ;\n\n/**\n * Return a random alphanumerical string of length len\n * There is a very small probability (less than 1/1,000,000) for the length to be less than len\n * (il the base64 conversion yields too many pluses and slashes) but\n * that's not an issue here\n * The probability of a collision is extremely small (need 3*10^12 documents to have one chance in a million of a collision)\n * See http://en.wikipedia.org/wiki/Birthday_problem\n */\nfunction uid (len) {\n  return crypto.randomBytes(Math.ceil(Math.max(8, len * 2)))\n    .toString('base64')\n    .replace(/[+\\/]/g, '')\n    .slice(0, len);\n}\n\n\n// Interface\nmodule.exports.uid = uid;\n\n","var BinarySearchTree = require('binary-search-tree').AVLTree\n  , model = require('./model')\n  , _ = require('underscore')\n  , util = require('util')\n  ;\n\n/**\n * Two indexed pointers are equal iif they point to the same place\n */\nfunction checkValueEquality (a, b) {\n  return a === b;\n}\n\n/**\n * Type-aware projection\n */\nfunction projectForUnique (elt) {\n  if (elt === null) { return '$null'; }\n  if (typeof elt === 'string') { return '$string' + elt; }\n  if (typeof elt === 'boolean') { return '$boolean' + elt; }\n  if (typeof elt === 'number') { return '$number' + elt; }\n  if (util.isArray(elt)) { return '$date' + elt.getTime(); }\n\n  return elt;   // Arrays and objects, will check for pointer equality\n}\n\n\n/**\n * Create a new index\n * All methods on an index guarantee that either the whole operation was successful and the index changed\n * or the operation was unsuccessful and an error is thrown while the index is unchanged\n * @param {String} options.fieldName On which field should the index apply (can use dot notation to index on sub fields)\n * @param {Boolean} options.unique Optional, enforce a unique constraint (default: false)\n * @param {Boolean} options.sparse Optional, allow a sparse index (we can have documents for which fieldName is undefined) (default: false)\n */\nfunction Index (options) {\n  this.fieldName = options.fieldName;\n  this.unique = options.unique || false;\n  this.sparse = options.sparse || false;\n\n  this.treeOptions = { unique: this.unique, compareKeys: model.compareThings, checkValueEquality: checkValueEquality };\n\n  this.reset();   // No data in the beginning\n}\n\n\n/**\n * Reset an index\n * @param {Document or Array of documents} newData Optional, data to initialize the index with\n *                                                 If an error is thrown during insertion, the index is not modified\n */\nIndex.prototype.reset = function (newData) {\n  this.tree = new BinarySearchTree(this.treeOptions);\n\n  if (newData) { this.insert(newData); }\n};\n\n\n/**\n * Insert a new document in the index\n * If an array is passed, we insert all its elements (if one insertion fails the index is not modified)\n * O(log(n))\n */\nIndex.prototype.insert = function (doc) {\n  var key, self = this\n    , keys, i, failingI, error\n    ;\n\n  if (util.isArray(doc)) { this.insertMultipleDocs(doc); return; }\n\n  key = model.getDotValue(doc, this.fieldName);\n\n  // We don't index documents that don't contain the field if the index is sparse\n  if (key === undefined && this.sparse) { return; }\n\n  if (!util.isArray(key)) {\n    this.tree.insert(key, doc);\n  } else {\n    // If an insert fails due to a unique constraint, roll back all inserts before it\n    keys = _.uniq(key, projectForUnique);\n\n    for (i = 0; i < keys.length; i += 1) {\n      try {\n        this.tree.insert(keys[i], doc);\n      } catch (e) {\n        error = e;\n        failingI = i;\n        break;\n      }\n    }\n\n    if (error) {\n      for (i = 0; i < failingI; i += 1) {\n        this.tree.delete(keys[i], doc);\n      }\n\n      throw error;\n    }\n  }\n};\n\n\n/**\n * Insert an array of documents in the index\n * If a constraint is violated, the changes should be rolled back and an error thrown\n *\n * @API private\n */\nIndex.prototype.insertMultipleDocs = function (docs) {\n  var i, error, failingI;\n\n  for (i = 0; i < docs.length; i += 1) {\n    try {\n      this.insert(docs[i]);\n    } catch (e) {\n      error = e;\n      failingI = i;\n      break;\n    }\n  }\n\n  if (error) {\n    for (i = 0; i < failingI; i += 1) {\n      this.remove(docs[i]);\n    }\n\n    throw error;\n  }\n};\n\n\n/**\n * Remove a document from the index\n * If an array is passed, we remove all its elements\n * The remove operation is safe with regards to the 'unique' constraint\n * O(log(n))\n */\nIndex.prototype.remove = function (doc) {\n  var key, self = this;\n\n  if (util.isArray(doc)) { doc.forEach(function (d) { self.remove(d); }); return; }\n\n  key = model.getDotValue(doc, this.fieldName);\n\n  if (key === undefined && this.sparse) { return; }\n\n  if (!util.isArray(key)) {\n    this.tree.delete(key, doc);\n  } else {\n    _.uniq(key, projectForUnique).forEach(function (_key) {\n      self.tree.delete(_key, doc);\n    });\n  }\n};\n\n\n/**\n * Update a document in the index\n * If a constraint is violated, changes are rolled back and an error thrown\n * Naive implementation, still in O(log(n))\n */\nIndex.prototype.update = function (oldDoc, newDoc) {\n  if (util.isArray(oldDoc)) { this.updateMultipleDocs(oldDoc); return; }\n\n  this.remove(oldDoc);\n\n  try {\n    this.insert(newDoc);\n  } catch (e) {\n    this.insert(oldDoc);\n    throw e;\n  }\n};\n\n\n/**\n * Update multiple documents in the index\n * If a constraint is violated, the changes need to be rolled back\n * and an error thrown\n * @param {Array of oldDoc, newDoc pairs} pairs\n *\n * @API private\n */\nIndex.prototype.updateMultipleDocs = function (pairs) {\n  var i, failingI, error;\n\n  for (i = 0; i < pairs.length; i += 1) {\n    this.remove(pairs[i].oldDoc);\n  }\n\n  for (i = 0; i < pairs.length; i += 1) {\n    try {\n      this.insert(pairs[i].newDoc);\n    } catch (e) {\n      error = e;\n      failingI = i;\n      break;\n    }\n  }\n\n  // If an error was raised, roll back changes in the inverse order\n  if (error) {\n    for (i = 0; i < failingI; i += 1) {\n      this.remove(pairs[i].newDoc);\n    }\n\n    for (i = 0; i < pairs.length; i += 1) {\n      this.insert(pairs[i].oldDoc);\n    }\n\n    throw error;\n  }\n};\n\n\n/**\n * Revert an update\n */\nIndex.prototype.revertUpdate = function (oldDoc, newDoc) {\n  var revert = [];\n\n  if (!util.isArray(oldDoc)) {\n    this.update(newDoc, oldDoc);\n  } else {\n    oldDoc.forEach(function (pair) {\n      revert.push({ oldDoc: pair.newDoc, newDoc: pair.oldDoc });\n    });\n    this.update(revert);\n  }\n};\n\n\n/**\n * Get all documents in index whose key match value (if it is a Thing) or one of the elements of value (if it is an array of Things)\n * @param {Thing} value Value to match the key against\n * @return {Array of documents}\n */\nIndex.prototype.getMatching = function (value) {\n  var self = this;\n\n  if (!util.isArray(value)) {\n    return self.tree.search(value);\n  } else {\n    var _res = {}, res = [];\n\n    value.forEach(function (v) {\n      self.getMatching(v).forEach(function (doc) {\n        _res[doc._id] = doc;\n      });\n    });\n\n    Object.keys(_res).forEach(function (_id) {\n      res.push(_res[_id]);\n    });\n\n    return res;\n  }\n};\n\n\n/**\n * Get all documents in index whose key is between bounds are they are defined by query\n * Documents are sorted by key\n * @param {Query} query\n * @return {Array of documents}\n */\nIndex.prototype.getBetweenBounds = function (query) {\n  return this.tree.betweenBounds(query);\n};\n\n\n/**\n * Get all elements in the index\n * @return {Array of documents}\n */\nIndex.prototype.getAll = function () {\n  var res = [];\n\n  this.tree.executeOnEveryNode(function (node) {\n    var i;\n\n    for (i = 0; i < node.data.length; i += 1) {\n      res.push(node.data[i]);\n    }\n  });\n\n  return res;\n};\n\n\n\n\n// Interface\nmodule.exports = Index;\n","/**\n * Simple binary search tree\n */\nvar customUtils = require('./customUtils');\n\n\n/**\n * Constructor\n * @param {Object} options Optional\n * @param {Boolean}  options.unique Whether to enforce a 'unique' constraint on the key or not\n * @param {Key}      options.key Initialize this BST's key with key\n * @param {Value}    options.value Initialize this BST's data with [value]\n * @param {Function} options.compareKeys Initialize this BST's compareKeys\n */\nfunction BinarySearchTree (options) {\n  options = options || {};\n\n  this.left = null;\n  this.right = null;\n  this.parent = options.parent !== undefined ? options.parent : null;\n  if (options.hasOwnProperty('key')) { this.key = options.key; }\n  this.data = options.hasOwnProperty('value') ? [options.value] : [];\n  this.unique = options.unique || false;\n\n  this.compareKeys = options.compareKeys || customUtils.defaultCompareKeysFunction;\n  this.checkValueEquality = options.checkValueEquality || customUtils.defaultCheckValueEquality;\n}\n\n\n// ================================\n// Methods used to test the tree\n// ================================\n\n\n/**\n * Get the descendant with max key\n */\nBinarySearchTree.prototype.getMaxKeyDescendant = function () {\n  if (this.right) {\n    return this.right.getMaxKeyDescendant();\n  } else {\n    return this;\n  }\n};\n\n\n/**\n * Get the maximum key\n */\nBinarySearchTree.prototype.getMaxKey = function () {\n  return this.getMaxKeyDescendant().key;\n};\n\n\n/**\n * Get the descendant with min key\n */\nBinarySearchTree.prototype.getMinKeyDescendant = function () {\n  if (this.left) {\n    return this.left.getMinKeyDescendant()\n  } else {\n    return this;\n  }\n};\n\n\n/**\n * Get the minimum key\n */\nBinarySearchTree.prototype.getMinKey = function () {\n  return this.getMinKeyDescendant().key;\n};\n\n\n/**\n * Check that all nodes (incl. leaves) fullfil condition given by fn\n * test is a function passed every (key, data) and which throws if the condition is not met\n */\nBinarySearchTree.prototype.checkAllNodesFullfillCondition = function (test) {\n  if (!this.hasOwnProperty('key')) { return; }\n\n  test(this.key, this.data);\n  if (this.left) { this.left.checkAllNodesFullfillCondition(test); }\n  if (this.right) { this.right.checkAllNodesFullfillCondition(test); }\n};\n\n\n/**\n * Check that the core BST properties on node ordering are verified\n * Throw if they aren't\n */\nBinarySearchTree.prototype.checkNodeOrdering = function () {\n  var self = this;\n\n  if (!this.hasOwnProperty('key')) { return; }\n\n  if (this.left) {\n    this.left.checkAllNodesFullfillCondition(function (k) {\n      if (self.compareKeys(k, self.key) >= 0) {\n        throw new Error('Tree with root ' + self.key + ' is not a binary search tree');\n      }\n    });\n    this.left.checkNodeOrdering();\n  }\n\n  if (this.right) {\n    this.right.checkAllNodesFullfillCondition(function (k) {\n      if (self.compareKeys(k, self.key) <= 0) {\n        throw new Error('Tree with root ' + self.key + ' is not a binary search tree');\n      }\n    });\n    this.right.checkNodeOrdering();\n  }\n};\n\n\n/**\n * Check that all pointers are coherent in this tree\n */\nBinarySearchTree.prototype.checkInternalPointers = function () {\n  if (this.left) {\n    if (this.left.parent !== this) { throw new Error('Parent pointer broken for key ' + this.key); }\n    this.left.checkInternalPointers();\n  }\n\n  if (this.right) {\n    if (this.right.parent !== this) { throw new Error('Parent pointer broken for key ' + this.key); }\n    this.right.checkInternalPointers();\n  }\n};\n\n\n/**\n * Check that a tree is a BST as defined here (node ordering and pointer references)\n */\nBinarySearchTree.prototype.checkIsBST = function () {\n  this.checkNodeOrdering();\n  this.checkInternalPointers();\n  if (this.parent) { throw new Error(\"The root shouldn't have a parent\"); }\n};\n\n\n/**\n * Get number of keys inserted\n */\nBinarySearchTree.prototype.getNumberOfKeys = function () {\n  var res;\n\n  if (!this.hasOwnProperty('key')) { return 0; }\n\n  res = 1;\n  if (this.left) { res += this.left.getNumberOfKeys(); }\n  if (this.right) { res += this.right.getNumberOfKeys(); }\n\n  return res;\n};\n\n\n\n// ============================================\n// Methods used to actually work on the tree\n// ============================================\n\n/**\n * Create a BST similar (i.e. same options except for key and value) to the current one\n * Use the same constructor (i.e. BinarySearchTree, AVLTree etc)\n * @param {Object} options see constructor\n */\nBinarySearchTree.prototype.createSimilar = function (options) {\n  options = options || {};\n  options.unique = this.unique;\n  options.compareKeys = this.compareKeys;\n  options.checkValueEquality = this.checkValueEquality;\n\n  return new this.constructor(options);\n};\n\n\n/**\n * Create the left child of this BST and return it\n */\nBinarySearchTree.prototype.createLeftChild = function (options) {\n  var leftChild = this.createSimilar(options);\n  leftChild.parent = this;\n  this.left = leftChild;\n\n  return leftChild;\n};\n\n\n/**\n * Create the right child of this BST and return it\n */\nBinarySearchTree.prototype.createRightChild = function (options) {\n  var rightChild = this.createSimilar(options);\n  rightChild.parent = this;\n  this.right = rightChild;\n\n  return rightChild;\n};\n\n\n/**\n * Insert a new element\n */\nBinarySearchTree.prototype.insert = function (key, value) {\n  // Empty tree, insert as root\n  if (!this.hasOwnProperty('key')) {\n    this.key = key;\n    this.data.push(value);\n    return;\n  }\n\n  // Same key as root\n  if (this.compareKeys(this.key, key) === 0) {\n    if (this.unique) {\n      var err = new Error(\"Can't insert key \" + key + \", it violates the unique constraint\");\n      err.key = key;\n      err.errorType = 'uniqueViolated';\n      throw err;\n    } else {\n      this.data.push(value);\n    }\n    return;\n  }\n\n  if (this.compareKeys(key, this.key) < 0) {\n    // Insert in left subtree\n    if (this.left) {\n      this.left.insert(key, value);\n    } else {\n      this.createLeftChild({ key: key, value: value });\n    }\n  } else {\n    // Insert in right subtree\n    if (this.right) {\n      this.right.insert(key, value);\n    } else {\n      this.createRightChild({ key: key, value: value });\n    }\n  }\n};\n\n\n/**\n * Search for all data corresponding to a key\n */\nBinarySearchTree.prototype.search = function (key) {\n  if (!this.hasOwnProperty('key')) { return []; }\n\n  if (this.compareKeys(this.key, key) === 0) { return this.data; }\n\n  if (this.compareKeys(key, this.key) < 0) {\n    if (this.left) {\n      return this.left.search(key);\n    } else {\n      return [];\n    }\n  } else {\n    if (this.right) {\n      return this.right.search(key);\n    } else {\n      return [];\n    }\n  }\n};\n\n\n/**\n * Return a function that tells whether a given key matches a lower bound\n */\nBinarySearchTree.prototype.getLowerBoundMatcher = function (query) {\n  var self = this;\n\n  // No lower bound\n  if (!query.hasOwnProperty('$gt') && !query.hasOwnProperty('$gte')) {\n    return function () { return true; };\n  }\n\n  if (query.hasOwnProperty('$gt') && query.hasOwnProperty('$gte')) {\n    if (self.compareKeys(query.$gte, query.$gt) === 0) {\n      return function (key) { return self.compareKeys(key, query.$gt) > 0; };\n    }\n\n    if (self.compareKeys(query.$gte, query.$gt) > 0) {\n      return function (key) { return self.compareKeys(key, query.$gte) >= 0; };\n    } else {\n      return function (key) { return self.compareKeys(key, query.$gt) > 0; };\n    }\n  }\n\n  if (query.hasOwnProperty('$gt')) {\n    return function (key) { return self.compareKeys(key, query.$gt) > 0; };\n  } else {\n    return function (key) { return self.compareKeys(key, query.$gte) >= 0; };\n  }\n};\n\n\n/**\n * Return a function that tells whether a given key matches an upper bound\n */\nBinarySearchTree.prototype.getUpperBoundMatcher = function (query) {\n  var self = this;\n\n  // No lower bound\n  if (!query.hasOwnProperty('$lt') && !query.hasOwnProperty('$lte')) {\n    return function () { return true; };\n  }\n\n  if (query.hasOwnProperty('$lt') && query.hasOwnProperty('$lte')) {\n    if (self.compareKeys(query.$lte, query.$lt) === 0) {\n      return function (key) { return self.compareKeys(key, query.$lt) < 0; };\n    }\n\n    if (self.compareKeys(query.$lte, query.$lt) < 0) {\n      return function (key) { return self.compareKeys(key, query.$lte) <= 0; };\n    } else {\n      return function (key) { return self.compareKeys(key, query.$lt) < 0; };\n    }\n  }\n\n  if (query.hasOwnProperty('$lt')) {\n    return function (key) { return self.compareKeys(key, query.$lt) < 0; };\n  } else {\n    return function (key) { return self.compareKeys(key, query.$lte) <= 0; };\n  }\n};\n\n\n// Append all elements in toAppend to array\nfunction append (array, toAppend) {\n  var i;\n\n  for (i = 0; i < toAppend.length; i += 1) {\n    array.push(toAppend[i]);\n  }\n}\n\n\n/**\n * Get all data for a key between bounds\n * Return it in key order\n * @param {Object} query Mongo-style query where keys are $lt, $lte, $gt or $gte (other keys are not considered)\n * @param {Functions} lbm/ubm matching functions calculated at the first recursive step\n */\nBinarySearchTree.prototype.betweenBounds = function (query, lbm, ubm) {\n  var res = [];\n\n  if (!this.hasOwnProperty('key')) { return []; }   // Empty tree\n\n  lbm = lbm || this.getLowerBoundMatcher(query);\n  ubm = ubm || this.getUpperBoundMatcher(query);\n\n  if (lbm(this.key) && this.left) { append(res, this.left.betweenBounds(query, lbm, ubm)); }\n  if (lbm(this.key) && ubm(this.key)) { append(res, this.data); }\n  if (ubm(this.key) && this.right) { append(res, this.right.betweenBounds(query, lbm, ubm)); }\n\n  return res;\n};\n\n\n/**\n * Delete the current node if it is a leaf\n * Return true if it was deleted\n */\nBinarySearchTree.prototype.deleteIfLeaf = function () {\n  if (this.left || this.right) { return false; }\n\n  // The leaf is itself a root\n  if (!this.parent) {\n    delete this.key;\n    this.data = [];\n    return true;\n  }\n\n  if (this.parent.left === this) {\n    this.parent.left = null;\n  } else {\n    this.parent.right = null;\n  }\n\n  return true;\n};\n\n\n/**\n * Delete the current node if it has only one child\n * Return true if it was deleted\n */\nBinarySearchTree.prototype.deleteIfOnlyOneChild = function () {\n  var child;\n\n  if (this.left && !this.right) { child = this.left; }\n  if (!this.left && this.right) { child = this.right; }\n  if (!child) { return false; }\n\n  // Root\n  if (!this.parent) {\n    this.key = child.key;\n    this.data = child.data;\n\n    this.left = null;\n    if (child.left) {\n      this.left = child.left;\n      child.left.parent = this;\n    }\n\n    this.right = null;\n    if (child.right) {\n      this.right = child.right;\n      child.right.parent = this;\n    }\n\n    return true;\n  }\n\n  if (this.parent.left === this) {\n    this.parent.left = child;\n    child.parent = this.parent;\n  } else {\n    this.parent.right = child;\n    child.parent = this.parent;\n  }\n\n  return true;\n};\n\n\n/**\n * Delete a key or just a value\n * @param {Key} key\n * @param {Value} value Optional. If not set, the whole key is deleted. If set, only this value is deleted\n */\nBinarySearchTree.prototype.delete = function (key, value) {\n  var newData = [], replaceWith\n    , self = this\n    ;\n\n  if (!this.hasOwnProperty('key')) { return; }\n\n  if (this.compareKeys(key, this.key) < 0) {\n    if (this.left) { this.left.delete(key, value); }\n    return;\n  }\n\n  if (this.compareKeys(key, this.key) > 0) {\n    if (this.right) { this.right.delete(key, value); }\n    return;\n  }\n\n  if (!this.compareKeys(key, this.key) === 0) { return; }\n\n  // Delete only a value\n  if (this.data.length > 1 && value !== undefined) {\n    this.data.forEach(function (d) {\n      if (!self.checkValueEquality(d, value)) { newData.push(d); }\n    });\n    self.data = newData;\n    return;\n  }\n\n  // Delete the whole node\n  if (this.deleteIfLeaf()) {\n    return;\n  }\n  if (this.deleteIfOnlyOneChild()) {\n    return;\n  }\n\n  // We are in the case where the node to delete has two children\n  if (Math.random() >= 0.5) {   // Randomize replacement to avoid unbalancing the tree too much\n    // Use the in-order predecessor\n    replaceWith = this.left.getMaxKeyDescendant();\n\n    this.key = replaceWith.key;\n    this.data = replaceWith.data;\n\n    if (this === replaceWith.parent) {   // Special case\n      this.left = replaceWith.left;\n      if (replaceWith.left) { replaceWith.left.parent = replaceWith.parent; }\n    } else {\n      replaceWith.parent.right = replaceWith.left;\n      if (replaceWith.left) { replaceWith.left.parent = replaceWith.parent; }\n    }\n  } else {\n    // Use the in-order successor\n    replaceWith = this.right.getMinKeyDescendant();\n\n    this.key = replaceWith.key;\n    this.data = replaceWith.data;\n\n    if (this === replaceWith.parent) {   // Special case\n      this.right = replaceWith.right;\n      if (replaceWith.right) { replaceWith.right.parent = replaceWith.parent; }\n    } else {\n      replaceWith.parent.left = replaceWith.right;\n      if (replaceWith.right) { replaceWith.right.parent = replaceWith.parent; }\n    }\n  }\n};\n\n\n/**\n * Execute a function on every node of the tree, in key order\n * @param {Function} fn Signature: node. Most useful will probably be node.key and node.data\n */\nBinarySearchTree.prototype.executeOnEveryNode = function (fn) {\n  if (this.left) { this.left.executeOnEveryNode(fn); }\n  fn(this);\n  if (this.right) { this.right.executeOnEveryNode(fn); }\n};\n\n\n/**\n * Pretty print a tree\n * @param {Boolean} printData To print the nodes' data along with the key\n */\nBinarySearchTree.prototype.prettyPrint = function (printData, spacing) {\n  spacing = spacing || \"\";\n\n  console.log(spacing + \"* \" + this.key);\n  if (printData) { console.log(spacing + \"* \" + this.data); }\n\n  if (!this.left && !this.right) { return; }\n\n  if (this.left) {\n    this.left.prettyPrint(printData, spacing + \"  \");\n  } else {\n    console.log(spacing + \"  *\");\n  }\n  if (this.right) {\n    this.right.prettyPrint(printData, spacing + \"  \");\n  } else {\n    console.log(spacing + \"  *\");\n  }\n};\n\n\n\n\n// Interface\nmodule.exports = BinarySearchTree;\n","/**\n * Return an array with the numbers from 0 to n-1, in a random order\n */\nfunction getRandomArray (n) {\n  var res, next;\n\n  if (n === 0) { return []; }\n  if (n === 1) { return [0]; }\n\n  res = getRandomArray(n - 1);\n  next = Math.floor(Math.random() * n);\n  res.splice(next, 0, n - 1);   // Add n-1 at a random position in the array\n\n  return res;\n};\nmodule.exports.getRandomArray = getRandomArray;\n\n\n/*\n * Default compareKeys function will work for numbers, strings and dates\n */\nfunction defaultCompareKeysFunction (a, b) {\n  if (a < b) { return -1; }\n  if (a > b) { return 1; }\n  if (a === b) { return 0; }\n\n  var err = new Error(\"Couldn't compare elements\");\n  err.a = a;\n  err.b = b;\n  throw err;\n}\nmodule.exports.defaultCompareKeysFunction = defaultCompareKeysFunction;\n\n\n/**\n * Check whether two values are equal (used in non-unique deletion)\n */\nfunction defaultCheckValueEquality (a, b) {\n  return a === b;\n}\nmodule.exports.defaultCheckValueEquality = defaultCheckValueEquality;\n","/*---------------------------------------------------------\r\n * Copyright (C) Xored Software Inc. All rights reserved.\r\n * Licensed under the MIT License. See LICENSE in the project root for license information.\r\n *--------------------------------------------------------*/\r\n\r\n'use strict';\r\n\r\nimport { NIM_MODE } from './nimMode';\r\nimport vscode = require('vscode');\r\n\r\nlet statusBarEntry: vscode.StatusBarItem;\r\nlet progressBarEntry: vscode.StatusBarItem;\r\n\r\nexport function showHideStatus() {\r\n  if (!statusBarEntry) {\r\n    return;\r\n  }\r\n  if (!vscode.window.activeTextEditor) {\r\n    statusBarEntry.hide();\r\n    return;\r\n  }\r\n  if (vscode.languages.match(NIM_MODE, vscode.window.activeTextEditor.document)) {\r\n    statusBarEntry.show();\r\n    return;\r\n  }\r\n  statusBarEntry.hide();\r\n}\r\n\r\nexport function hideNimStatus() {\r\n  statusBarEntry.dispose();\r\n}\r\n\r\nexport function hideNimProgress() {\r\n  progressBarEntry.dispose();\r\n}\r\n\r\nexport function showNimStatus(message: string, command: string, tooltip?: string) {\r\n  statusBarEntry = vscode.window.createStatusBarItem(vscode.StatusBarAlignment.Right, Number.MIN_VALUE);\r\n  statusBarEntry.text = message;\r\n  statusBarEntry.command = command;\r\n  statusBarEntry.color = 'yellow';\r\n  statusBarEntry.tooltip = tooltip;\r\n  statusBarEntry.show();\r\n}\r\n\r\nexport function showNimProgress(message: string) {\r\n  progressBarEntry = vscode.window.createStatusBarItem(vscode.StatusBarAlignment.Right, Number.MIN_VALUE);\r\n  console.log(message);\r\n  progressBarEntry.text = message;\r\n  progressBarEntry.tooltip = message;\r\n  progressBarEntry.show();\r\n}\r\n\r\nexport function updateNimProgress(message: string) {\r\n    progressBarEntry.text = message;\r\n}","/*---------------------------------------------------------\r\n * Copyright (C) Xored Software Inc. All rights reserved.\r\n * Licensed under the MIT License. See LICENSE in the project root for license information.\r\n *--------------------------------------------------------*/\r\n\r\n'use strict';\r\n\r\nimport vscode = require('vscode');\r\nimport fs = require('fs');\r\nimport path = require('path');\r\n\r\nimport { initNimSuggest, closeAllNimSuggestProcesses } from './nimSuggestExec';\r\nimport { NimCompletionItemProvider } from './nimSuggest';\r\nimport { NimDefinitionProvider } from './nimDeclaration';\r\nimport { NimReferenceProvider } from './nimReferences';\r\nimport { NimHoverProvider } from './nimHover';\r\nimport { NimRenameProvider } from './nimRename';\r\nimport { NimDocumentSymbolProvider, NimWorkspaceSymbolProvider } from './nimOutline';\r\nimport * as indexer from './nimIndexer';\r\nimport { NimSignatureHelpProvider } from './nimSignature';\r\nimport { NimFormattingProvider } from './nimFormatting';\r\nimport { check, execSelectionInTerminal, activateEvalConsole } from './nimBuild';\r\nimport { NIM_MODE } from './nimMode';\r\nimport { showHideStatus } from './nimStatus';\r\nimport { getDirtyFile, outputLine } from './nimUtils';\r\nimport { ProgressLocation } from 'vscode';\r\nimport { initImports, removeFileFromImports, addFileToImports } from './nimImports';\r\n\r\nlet diagnosticCollection: vscode.DiagnosticCollection;\r\nvar fileWatcher: vscode.FileSystemWatcher;\r\nvar terminal: vscode.Terminal | undefined;\r\n\r\nexport function activate(ctx: vscode.ExtensionContext): void {\r\n    let config = vscode.workspace.getConfiguration('nim');\r\n\r\n    vscode.commands.registerCommand('nim.run.file', runFile);\r\n    vscode.commands.registerCommand('nim.check', runCheck);\r\n    vscode.commands.registerCommand('nim.execSelectionInTerminal', execSelectionInTerminal);\r\n\r\n    if (vscode.workspace.getConfiguration('nim').get('enableNimsuggest') as boolean) {\r\n        initNimSuggest();\r\n        ctx.subscriptions.push(vscode.languages.registerCompletionItemProvider(NIM_MODE, new NimCompletionItemProvider(), '.', ' '));\r\n        ctx.subscriptions.push(vscode.languages.registerDefinitionProvider(NIM_MODE, new NimDefinitionProvider()));\r\n        ctx.subscriptions.push(vscode.languages.registerReferenceProvider(NIM_MODE, new NimReferenceProvider()));\r\n        ctx.subscriptions.push(vscode.languages.registerRenameProvider(NIM_MODE, new NimRenameProvider()));\r\n        ctx.subscriptions.push(vscode.languages.registerDocumentSymbolProvider(NIM_MODE, new NimDocumentSymbolProvider()));\r\n        ctx.subscriptions.push(vscode.languages.registerSignatureHelpProvider(NIM_MODE, new NimSignatureHelpProvider(), '(', ','));\r\n        ctx.subscriptions.push(vscode.languages.registerHoverProvider(NIM_MODE, new NimHoverProvider()));\r\n        ctx.subscriptions.push(vscode.languages.registerDocumentFormattingEditProvider(NIM_MODE, new NimFormattingProvider()));\r\n    }\r\n\r\n    diagnosticCollection = vscode.languages.createDiagnosticCollection('nim');\r\n    ctx.subscriptions.push(diagnosticCollection);\r\n\r\n    vscode.languages.setLanguageConfiguration(NIM_MODE.language as string, {\r\n        // @Note Literal whitespace in below regexps is removed\r\n        onEnterRules: [\r\n            {\r\n                beforeText: /^(\\s)*## /,\r\n                action: { indentAction: vscode.IndentAction.None, appendText: '## '}\r\n            },\r\n            {\r\n                beforeText: new RegExp(String.raw`\r\n                    ^\\s*\r\n                    (\r\n                        (case) \\b .* :\r\n                    )\r\n                    \\s*$\r\n                `.replace(/\\s+?/g, '')),\r\n                action: {\r\n                    indentAction: vscode.IndentAction.None\r\n                }\r\n            },\r\n            {\r\n                beforeText: new RegExp(String.raw`\r\n                    ^\\s*\r\n                    (\r\n                        (\r\n                            (proc|macro|iterator|template|converter|func) \\b .*=\r\n                        )|(\r\n                            (import|export|let|var|const|type) \\b\r\n                        )|(\r\n                            [^:]+:\r\n                        )\r\n                    )\r\n                    \\s*$\r\n                `.replace(/\\s+?/g, '')),\r\n                action: {\r\n                    indentAction: vscode.IndentAction.Indent\r\n                }\r\n            },\r\n            {\r\n                beforeText: new RegExp(String.raw`\r\n                ^\\s*\r\n                    (\r\n                        (\r\n                            (return|raise|break|continue) \\b .*\r\n                        )|(\r\n                            (discard) \\b\r\n                        )\r\n                    )\r\n                    \\s*\r\n                `.replace(/\\s+?/g, '')),\r\n                action: {\r\n                    indentAction: vscode.IndentAction.Outdent\r\n                }\r\n            }\r\n        ],\r\n\r\n        wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\r\n    });\r\n\r\n    vscode.window.onDidChangeActiveTextEditor(showHideStatus, null, ctx.subscriptions);\r\n\r\n    vscode.window.onDidCloseTerminal((e: vscode.Terminal) => {\r\n        if (terminal && e.processId === terminal.processId) {\r\n            terminal = undefined;\r\n        }\r\n    });\r\n\r\n    console.log(ctx.extensionPath);\r\n    activateEvalConsole();\r\n    indexer.initWorkspace(ctx.extensionPath);\r\n    fileWatcher = vscode.workspace.createFileSystemWatcher('**/*.nim');\r\n    fileWatcher.onDidCreate((uri) => {\r\n        if (config.has('licenseString')) {\r\n            let path = uri.fsPath.toLowerCase();\r\n            if (path.endsWith('.nim') || path.endsWith('.nims')) {\r\n                fs.stat(uri.fsPath, (err, stats) => {\r\n                    if (stats && stats.size === 0) {\r\n                        let edit = new vscode.WorkspaceEdit();\r\n                        edit.insert(uri, new vscode.Position(0, 0), config['licenseString']);\r\n                        vscode.workspace.applyEdit(edit);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        addFileToImports(uri.fsPath);\r\n    });\r\n\r\n    fileWatcher.onDidDelete(uri => {\r\n        removeFileFromImports(uri.fsPath);\r\n    });\r\n\r\n    ctx.subscriptions.push(vscode.languages.registerWorkspaceSymbolProvider(new NimWorkspaceSymbolProvider()));\r\n\r\n    startBuildOnSaveWatcher(ctx.subscriptions);\r\n\r\n    if (vscode.window.activeTextEditor && !!vscode.workspace.getConfiguration('nim')['lintOnSave']) {\r\n        runCheck(vscode.window.activeTextEditor.document);\r\n    }\r\n\r\n    if (vscode.workspace.getConfiguration('nim').get('enableNimsuggest') as boolean) {\r\n        if (config.has('nimsuggestRestartTimeout')) {\r\n            let timeout = config['nimsuggestRestartTimeout'] as number;\r\n            if (timeout > 0) {\r\n                console.log('Reset nimsuggest process each ' + timeout + ' minutes');\r\n                global.setInterval(() => closeAllNimSuggestProcesses(), timeout * 60000);\r\n            }\r\n        }\r\n    }\r\n\r\n    initImports();\r\n    outputLine('[info] Extension Activated');\r\n}\r\n\r\n\r\nexport function deactivate(): void {\r\n    closeAllNimSuggestProcesses();\r\n    fileWatcher.dispose();\r\n}\r\n\r\nfunction runCheck(document?: vscode.TextDocument) {\r\n    let config = vscode.workspace.getConfiguration('nim');\r\n    if (!document && vscode.window.activeTextEditor) {\r\n        document = vscode.window.activeTextEditor.document;\r\n    }\r\n\r\n    function mapSeverityToVSCodeSeverity(sev: string) {\r\n        switch (sev) {\r\n            case 'Hint': return vscode.DiagnosticSeverity.Warning;\r\n            case 'Error': return vscode.DiagnosticSeverity.Error;\r\n            case 'Warning': return vscode.DiagnosticSeverity.Warning;\r\n            default: return vscode.DiagnosticSeverity.Error;\r\n        }\r\n    }\r\n\r\n    if (!document || document.languageId !== 'nim' || document.fileName.endsWith('nim.cfg')) {\r\n        return;\r\n    }\r\n\r\n    var uri = document.uri;\r\n\r\n    vscode.window.withProgress(\r\n        {location: ProgressLocation.Window, cancellable: false, title: 'Nim: check project...'},\r\n        (progress) => check(uri.fsPath, config)\r\n    ).then(errors => {\r\n        diagnosticCollection.clear();\r\n\r\n        let diagnosticMap: Map<string, vscode.Diagnostic[]> = new Map();\r\n        var err: { [key: string]: boolean; } = {};\r\n        errors.forEach(error => {\r\n            if (!err[error.file + error.line + error.column + error.msg]) {\r\n                let targetUri = error.file;\r\n                let endColumn = error.column;\r\n                if (error.msg.indexOf('\\'') >= 0) {\r\n                    endColumn += error.msg.lastIndexOf('\\'') - error.msg.indexOf('\\'') - 2;\r\n                }\r\n                let line = Math.max(0, error.line - 1);\r\n                let range = new vscode.Range(line, Math.max(0, error.column - 1), line, Math.max(0, endColumn));\r\n                let diagnostic = new vscode.Diagnostic(range, error.msg, mapSeverityToVSCodeSeverity(error.severity));\r\n                let diagnostics = diagnosticMap.get(targetUri);\r\n                if (!diagnostics) {\r\n                    diagnostics = [];\r\n                }\r\n                diagnosticMap.set(targetUri, diagnostics);\r\n                diagnostics.push(diagnostic);\r\n                err[error.file + error.line + error.column + error.msg] = true;\r\n            }\r\n        });\r\n\r\n        let entries: [vscode.Uri, vscode.Diagnostic[]][] = [];\r\n        diagnosticMap.forEach((diags, uri) => {\r\n            entries.push([vscode.Uri.file(uri), diags]);\r\n        });\r\n        diagnosticCollection.set(entries);\r\n    });\r\n}\r\n\r\nfunction startBuildOnSaveWatcher(subscriptions: vscode.Disposable[]) {\r\n    vscode.workspace.onDidSaveTextDocument(document => {\r\n        if (document.languageId !== 'nim') {\r\n            return;\r\n        }\r\n        if (!!vscode.workspace.getConfiguration('nim')['lintOnSave']) {\r\n            runCheck(document);\r\n        }\r\n        if (!!vscode.workspace.getConfiguration('nim')['buildOnSave']) {\r\n            vscode.commands.executeCommand('workbench.action.tasks.build');\r\n        }\r\n    }, null, subscriptions);\r\n}\r\n\r\nfunction runFile() {\r\n    let editor = vscode.window.activeTextEditor;\r\n    if (editor) {\r\n        if (!terminal) {\r\n            terminal = vscode.window.createTerminal('Nim');\r\n        }\r\n        terminal.show(true);\r\n        if (editor.document.isUntitled) {\r\n            terminal.sendText('nim ' + vscode.workspace.getConfiguration('nim')['buildCommand'] +\r\n                ' -r \"' + getDirtyFile(editor.document) + '\"', true);\r\n        } else {\r\n            let outputDirConfig = vscode.workspace.getConfiguration('nim')['runOutputDirectory'];\r\n            var outputParams = '';\r\n            if (!!outputDirConfig) {\r\n                if (vscode.workspace.workspaceFolders) {\r\n                    var rootPath = '';\r\n                    for (const folder of vscode.workspace.workspaceFolders) {\r\n                        if (folder.uri.scheme === 'file') {\r\n                            rootPath = folder.uri.fsPath;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (rootPath !== '') {\r\n                        if (!fs.existsSync(path.join(rootPath, outputDirConfig))) {\r\n                            fs.mkdirSync(path.join(rootPath, outputDirConfig));\r\n                        }\r\n                        outputParams = ' --out:\"' + path.join(outputDirConfig, path.basename(editor.document.fileName, '.nim')) + '\"';\r\n                    }\r\n                }\r\n            }\r\n            if (editor && editor.document.isDirty) {\r\n                editor.document.save().then((success: boolean) => {\r\n                    if (terminal && editor && success) {\r\n                        terminal.sendText('nim ' + vscode.workspace.getConfiguration('nim')['buildCommand'] +\r\n                            outputParams + ' -r \"' + editor.document.fileName + '\"', true);\r\n                    }\r\n                });\r\n            } else {\r\n                terminal.sendText('nim ' + vscode.workspace.getConfiguration('nim')['buildCommand'] +\r\n                    outputParams + ' -r \"' + editor.document.fileName + '\"', true);\r\n            }\r\n        }\r\n    }\r\n}\r\n","/*---------------------------------------------------------\r\n * Copyright (C) Xored Software Inc., RSDuck All rights reserved.\r\n * Licensed under the MIT License. See LICENSE in the project root for license information.\r\n *--------------------------------------------------------*/\r\nimport net = require('net');\r\nimport util = require('util');\r\nimport sexp = require('./sexp');\r\n\r\nfunction envelope(content: string): string {\r\n    return ('000000' + (new util.TextEncoder().encode(content).length).toString(16)).slice(-6) + content;\r\n}\r\n\r\nfunction generateUID(): number {\r\n    return Math.floor(Math.random() * 10000);\r\n}\r\n\r\nexport class EPCPeer {\r\n    private socket: net.Socket;\r\n\r\n    private receivedBuffer: Buffer;\r\n    private sessions = new Map<number, (data: any) => void>();\r\n\r\n    private socketClosed = false;\r\n\r\n    constructor(socket: net.Socket) {\r\n        this.socket = socket;\r\n        this.receivedBuffer = Buffer.alloc(0);\r\n        this.socket.on('data', data => {\r\n            this.receivedBuffer = Buffer.concat([this.receivedBuffer, data]);\r\n            while (this.receivedBuffer.length > 0) {\r\n                if (this.receivedBuffer.length >= 6) {\r\n                    let length = parseInt(this.receivedBuffer.toString('utf8', 0, 6), 16);\r\n                    if (this.receivedBuffer.length >= length + 6) {\r\n                        let content = <any[]>sexp.parseSExp(this.receivedBuffer.toString('utf8', 6, 6 + length));\r\n                        if (content) {\r\n                            let guid = <number>(content[0][1]);\r\n                            let handle = this.sessions.get(guid) as ((data: any) => void);\r\n                            handle(content[0]);\r\n                            this.sessions.delete(guid);\r\n                        } else {\r\n                            this.sessions.forEach(session => {\r\n                                session('Received invalid SExp data');\r\n                            });\r\n                        }\r\n\r\n                        this.receivedBuffer = this.receivedBuffer.slice(6 + length);\r\n                    } else\r\n                        return;\r\n                }\r\n            }\r\n        });\r\n        this.socket.on('close', (error) => {\r\n            console.error('Connection closed' + (error ? ' due to an error' : ''));\r\n            this.sessions.forEach(session => {\r\n                session('Connection closed');\r\n            });\r\n            this.socketClosed = true;\r\n        });\r\n    }\r\n\r\n    callMethod(method: string, ...parameter: sexp.SExp[]): Promise<any[]> {\r\n        return new Promise<any[]>((resolve, reject) => {\r\n            if (this.socketClosed)\r\n                reject('Connection closed');\r\n\r\n            let guid = generateUID();\r\n\r\n            let payload = '(call ' + guid + ' ' + method + ' ' + sexp.toString({ kind: 'list', elements: parameter }) + ')';\r\n\r\n            this.sessions.set(guid, (data: any) => {\r\n                if (!(data instanceof Array)) {\r\n                    reject(data);\r\n                } else {\r\n                    switch (data[0]) {\r\n                        case 'return':\r\n                            resolve(data[2]);\r\n                            break;\r\n                        case 'return-error':\r\n                        case 'epc-error':\r\n                            reject(data[2]);\r\n                            break;\r\n                    }\r\n                }\r\n            });\r\n            this.socket.write(envelope(payload));\r\n        });\r\n    }\r\n\r\n    stop() {\r\n        if (!this.socketClosed)\r\n            this.socket.destroy();\r\n    }\r\n}\r\n\r\nexport function startClient(port: number): Promise<EPCPeer> {\r\n    return new Promise<EPCPeer>((resolve, reject) => {\r\n        try {\r\n            let socket = net.createConnection(port, 'localhost', () => {\r\n                resolve(new EPCPeer(socket));\r\n            });\r\n        } catch (e) {\r\n            reject(e);\r\n        }\r\n    });\r\n}\r\n","module.exports = require(\"net\");","/*---------------------------------------------------------\r\n * Copyright (C) Xored Software Inc., RSDuck All rights reserved.\r\n * Licensed under the MIT License. See LICENSE in the project root for license information.\r\n *--------------------------------------------------------*/\r\nexport interface SExpCons { kind: 'cons'; car: SExp; cdr: SExp; }\r\nexport interface SExpList { kind: 'list'; elements: Array<SExp>; }\r\nexport interface SExpNumber { kind: 'number'; n: number; }\r\nexport interface SExpIdent { kind: 'ident'; ident: string; }\r\nexport interface SExpString { kind: 'string'; str: string; }\r\nexport interface SExpNil { kind: 'nil'; }\r\n\r\nexport type SExp = SExpCons | SExpList | SExpNumber | SExpIdent | SExpString | SExpNil;\r\n\r\nexport function toJS(sexp: SExp): any {\r\n    switch (sexp.kind) {\r\n        case 'cons':\r\n            return [toJS(sexp.car), toJS(sexp.cdr)];\r\n        case 'list':\r\n            return sexp.elements.map(element => toJS(element));\r\n        case 'number':\r\n            return sexp.n;\r\n        case 'ident':\r\n            return sexp.ident;\r\n        case 'string':\r\n            return sexp.str;\r\n        case 'nil':\r\n            return null;\r\n    }\r\n}\r\n\r\nexport function toString(sexp: SExp): any {\r\n    switch (sexp.kind) {\r\n        case 'cons':\r\n            return '(' + toString(sexp.car) + ' . ' + toString(sexp.cdr) + ')';\r\n        case 'list':\r\n            let stringRepr = '(';\r\n            sexp.elements.forEach(element => {\r\n                stringRepr += toString(element) + ' ';\r\n            });\r\n            return stringRepr.substr(0, stringRepr.length - 1) + ')';\r\n        case 'number':\r\n            return sexp.n.toString();\r\n        case 'ident':\r\n            return sexp.ident;\r\n        case 'string':\r\n            return JSON.stringify(sexp.str);\r\n        case 'nil':\r\n            return 'nil';\r\n    }\r\n}\r\n\r\n// outputs the SExp directly as a JS object to reduce the processing time\r\nexport function parseSExp(input: string): /*SExp*/ any[] | string {\r\n    let ptr = 0;\r\n\r\n    function parseSymbol(): /*SExpIdent | SExpNumber | SExpNil*/ string | number | null {\r\n        let symbolStart = ptr;\r\n        while (ptr < input.length && !(input[ptr] === ' ' || input[ptr] === ')')) {\r\n            if (input[ptr] === '\\\\' && input[ptr + 1] === ' ')\r\n                ptr += 2;\r\n            else\r\n                ptr++;\r\n        }\r\n        let sym = input.substring(symbolStart, ptr);\r\n\r\n        if (/^-?\\d+$/.test(sym))\r\n            // return { kind: \"number\", n: parseInt(sym) };\r\n            return parseInt(sym);\r\n        // else if (/^-?\\d+.\\d+$/.test(sym))\r\n        //    return { kind: \"number\", n: parseFloat(sym) };\r\n        else if (sym === 'nil')\r\n            // return { kind: \"nil\" };\r\n            return null;\r\n        // else if (/^#x-?[\\da-fA-F]+$/.test(sym))\r\n        //    return { kind: \"number\", n: parseInt(sym.substr(2), 16) };\r\n        // return { kind: \"ident\", ident: sym };\r\n        return sym;\r\n    }\r\n\r\n    function parseString(): /*SExpString*/ string {\r\n        let hasEscapes = false;\r\n        let startPos = ptr;\r\n        while (ptr < input.length && input[ptr] !== '\\\"') {\r\n            if (input[ptr] === '\\\\') {\r\n                if (ptr + 1 >= input.length)\r\n                    throw 'Expected character after a escape seqence introducing backslash';\r\n                // string += input[ptr] + input[ptr + 1];\r\n                ptr += 2;\r\n                hasEscapes = true;\r\n            } else\r\n                // string += input[ptr++];\r\n                ptr++;\r\n        }\r\n        // let str = input.substring(startPos, ptr);\r\n        // return { kind: \"string\", str: hasEscapes ? JSON.parse(\"\\\"\" + string + \"\\\"\") : string };\r\n        return hasEscapes ? JSON.parse(input.substring(startPos - 1, ptr + 1)) : input.substring(startPos, ptr);\r\n    }\r\n\r\n    function parseListOrCon(root?: boolean): /*SExpList | SExpCons*/ any[] {\r\n        // let items: SExp[] = [];\r\n        let items = [];\r\n        let cons = false;\r\n        while (ptr < input.length) {\r\n            if (input[ptr] !== '(' && input[ptr] !== ')' && input[ptr] !== ' ' && input[ptr] !== '\"') {\r\n                let sym = parseSymbol();\r\n                // if (sym.kind == \"ident\" && sym.ident == \".\") {\r\n                if (sym === '.') {\r\n                    if (items.length === 1)\r\n                        cons = true;\r\n                    else\r\n                        throw 'Invalid cons cell syntax';\r\n                }\r\n                items.push(sym);\r\n            } else if (input[ptr] === '(') {\r\n                ptr++;\r\n                items.push(parseListOrCon());\r\n            } else if (input[ptr] === '\\\"') {\r\n                ptr++;\r\n                items.push(parseString());\r\n            }\r\n            if (input[ptr++] === ')')\r\n                break;\r\n            // ptr++;\r\n        }\r\n        if (input[ptr - 1] !== ')' && !root)\r\n            throw 'Premature end, expected closing bracket';\r\n\r\n        if (cons) {\r\n            if (items.length === 3) {\r\n                // return { kind: \"cons\", car: items[0], cdr: items[2] };\r\n                return [items[0], items[2]];\r\n            } else\r\n                throw 'Invalid cons cell syntax';\r\n        }\r\n\r\n        // return { kind: \"list\", elements: items };\r\n        return items;\r\n    }\r\n\r\n    try {\r\n        return parseListOrCon(true);\r\n    } catch (e) {\r\n        return e;\r\n    }\r\n}\r\n","/*---------------------------------------------------------\r\n * Copyright (C) Xored Software Inc. All rights reserved.\r\n * Licensed under the MIT License. See LICENSE in the project root for license information.\r\n *--------------------------------------------------------*/\r\n\r\n'use strict';\r\n\r\nimport vscode = require('vscode');\r\nimport { getDirtyFile, getProjectFileInfo } from './nimUtils';\r\nimport { execNimSuggest, NimSuggestType, NimSuggestResult } from './nimSuggestExec';\r\nimport { getImports } from './nimImports';\r\n\r\nexport class NimCompletionItemProvider implements vscode.CompletionItemProvider {\r\n  public provideCompletionItems(document: vscode.TextDocument, position: vscode.Position, token: vscode.CancellationToken): Thenable<vscode.CompletionItem[]> {\r\n    return new Promise<vscode.CompletionItem[]>((resolve, reject) => {\r\n      var filename = document.fileName;\r\n      let range = document.getWordRangeAtPosition(position);\r\n      let txt = range ? document.getText(range).toLowerCase() : undefined;\r\n      let line = document.lineAt(position).text;\r\n      if (line.startsWith('import ')) {\r\n        let txtPart = txt && range ? document.getText(range.with({end: position})).toLowerCase() : undefined;\r\n        resolve(getImports(txtPart, getProjectFileInfo(filename).wsFolder.uri.fsPath));\r\n      } else {\r\n        execNimSuggest(NimSuggestType.sug, filename, (position.line + 1), position.character, getDirtyFile(document))\r\n          .then(items => {\r\n            var suggestions: vscode.CompletionItem[] = [];\r\n            if (items) {\r\n              items.forEach(item => {\r\n                if (item.answerType === 'sug'\r\n                    &&  (!txt || item.symbolName.toLowerCase().indexOf(txt) >= 0)\r\n                    && /[a-z]/i.test(item.symbolName)) {\r\n                  var suggestion = new vscode.CompletionItem(item.symbolName);\r\n                  suggestion.kind = vscodeKindFromNimSym(item.suggest);\r\n                  suggestion.detail = nimSymDetails(item);\r\n                  suggestion.sortText = ('0000' + suggestions.length).slice(-4);\r\n                  // use predefined text to disable suggest sorting\r\n                  suggestion.documentation = new vscode.MarkdownString(item.documentation);\r\n                  suggestions.push(suggestion);\r\n                }\r\n              });\r\n            }\r\n            if (suggestions.length > 0) {\r\n              resolve(suggestions);\r\n            } else {\r\n              reject();\r\n            }\r\n          }).catch(reason => reject(reason));\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction vscodeKindFromNimSym(kind: string): vscode.CompletionItemKind {\r\n  switch (kind) {\r\n    case 'skConst':\r\n      return vscode.CompletionItemKind.Value;\r\n    case 'skEnumField':\r\n      return vscode.CompletionItemKind.Enum;\r\n    case 'skForVar':\r\n      return vscode.CompletionItemKind.Variable;\r\n    case 'skIterator':\r\n      return vscode.CompletionItemKind.Keyword;\r\n    case 'skLabel':\r\n      return vscode.CompletionItemKind.Keyword;\r\n    case 'skLet':\r\n      return vscode.CompletionItemKind.Value;\r\n    case 'skMacro':\r\n      return vscode.CompletionItemKind.Snippet;\r\n    case 'skMethod':\r\n      return vscode.CompletionItemKind.Method;\r\n    case 'skParam':\r\n      return vscode.CompletionItemKind.Variable;\r\n    case 'skProc':\r\n      return vscode.CompletionItemKind.Function;\r\n    case 'skResult':\r\n      return vscode.CompletionItemKind.Value;\r\n    case 'skTemplate':\r\n      return vscode.CompletionItemKind.Snippet;\r\n    case 'skType':\r\n      return vscode.CompletionItemKind.Class;\r\n    case 'skVar':\r\n      return vscode.CompletionItemKind.Field;\r\n    case 'skFunc':\r\n      return vscode.CompletionItemKind.Function;\r\n  }\r\n  return vscode.CompletionItemKind.Property;\r\n}\r\n\r\nfunction nimSymDetails(suggest: NimSuggestResult): string {\r\n  switch (suggest.suggest) {\r\n    case 'skConst':\r\n      return 'const ' + suggest.fullName + ': ' + suggest.type;\r\n    case 'skEnumField':\r\n      return 'enum ' + suggest.type;\r\n    case 'skForVar':\r\n      return 'for var of ' + suggest.type;\r\n    case 'skIterator':\r\n      return suggest.type;\r\n    case 'skLabel':\r\n      return 'label';\r\n    case 'skLet':\r\n      return 'let of ' + suggest.type;\r\n    case 'skMacro':\r\n      return 'macro';\r\n    case 'skMethod':\r\n      return suggest.type;\r\n    case 'skParam':\r\n      return 'param';\r\n    case 'skProc':\r\n      return suggest.type;\r\n    case 'skResult':\r\n      return 'result';\r\n    case 'skTemplate':\r\n      return suggest.type;\r\n    case 'skType':\r\n      return 'type ' + suggest.fullName;\r\n    case 'skVar':\r\n      return 'var of ' + suggest.type;\r\n  }\r\n  return suggest.type;\r\n}\r\n","/*---------------------------------------------------------\r\n * Copyright (C) Xored Software Inc. All rights reserved.\r\n * Licensed under the MIT License. See LICENSE in the project root for license information.\r\n *--------------------------------------------------------*/\r\n\r\n'use strict';\r\n\r\nimport vscode = require('vscode');\r\nimport { getDirtyFile } from './nimUtils';\r\nimport { execNimSuggest, NimSuggestType} from './nimSuggestExec';\r\n\r\n\r\nexport class NimDefinitionProvider implements vscode.DefinitionProvider {\r\n\r\n  public provideDefinition(document: vscode.TextDocument, position: vscode.Position,\r\n                           token: vscode.CancellationToken): vscode.ProviderResult<vscode.Definition | vscode.DefinitionLink[]> {\r\n    return new Promise<any>((resolve, reject) => {\r\n      execNimSuggest(NimSuggestType.def, document.fileName, position.line + 1, position.character,\r\n        getDirtyFile(document)).then(result => {\r\n\r\n          if (result && result.length > 0) {\r\n            let def = result.pop();\r\n            if (def) {\r\n              resolve(def.location);\r\n            } else {\r\n              resolve(null);\r\n            }\r\n          } else {\r\n            resolve(null);\r\n          }\r\n        }).catch(reason => reject(reason));\r\n    });\r\n  }\r\n\r\n}","/*---------------------------------------------------------\r\n * Copyright (C) Xored Software Inc. All rights reserved.\r\n * Licensed under the MIT License. See LICENSE in the project root for license information.\r\n *--------------------------------------------------------*/\r\n\r\n'use strict';\r\n\r\nimport vscode = require('vscode');\r\nimport { getDirtyFile } from './nimUtils';\r\nimport { execNimSuggest, NimSuggestType } from './nimSuggestExec';\r\n\r\nexport class NimReferenceProvider implements vscode.ReferenceProvider {\r\n\r\n  public provideReferences(document: vscode.TextDocument, position: vscode.Position, options: { includeDeclaration: boolean }, token: vscode.CancellationToken): Thenable<vscode.Location[]> {\r\n    return new Promise<vscode.Location[]>((resolve, reject) => {\r\n      vscode.workspace.saveAll(false).then(() => {\r\n          execNimSuggest(NimSuggestType.use, document.fileName, position.line + 1, position.character, getDirtyFile(document))\r\n            .then(result => {\r\n              var references: vscode.Location[] = [];\r\n              if (result) {\r\n                result.forEach(item => {\r\n                  references.push(item.location);\r\n                });\r\n                resolve(references);\r\n              } else {\r\n                resolve();\r\n              }\r\n            })\r\n            .catch(reason => reject(reason));\r\n        });\r\n    });\r\n  }\r\n}","/*---------------------------------------------------------\r\n * Copyright (C) Xored Software Inc. All rights reserved.\r\n * Licensed under the MIT License. See LICENSE in the project root for license information.\r\n *--------------------------------------------------------*/\r\n\r\n'use strict';\r\n\r\nimport vscode = require('vscode');\r\nimport { NIM_MODE } from './nimMode';\r\nimport { getDirtyFile } from './nimUtils';\r\nimport { execNimSuggest, NimSuggestType, NimSuggestResult } from './nimSuggestExec';\r\n\r\n\r\nexport class NimHoverProvider implements vscode.HoverProvider {\r\n\r\n  public provideHover(document: vscode.TextDocument, position: vscode.Position, token: vscode.CancellationToken): Thenable<vscode.Hover> {\r\n    return new Promise<vscode.Hover>((resolve, reject) => {\r\n      execNimSuggest(NimSuggestType.def, document.fileName, position.line + 1, position.character,\r\n        getDirtyFile(document)).then(result => {\r\n          if (result && result.length > 0) {\r\n            let def = result.pop() as NimSuggestResult;\r\n\r\n            let label = def.fullName;\r\n            if (def.type !== '')\r\n              label += ': ' + def.type;\r\n            let hoverLabel = { language: NIM_MODE.language as string, value: label };\r\n            if (def.documentation !== '') {\r\n              resolve(new vscode.Hover([hoverLabel, def.documentation]));\r\n            } else {\r\n              resolve(new vscode.Hover(hoverLabel));\r\n            }\r\n          } else {\r\n            resolve();\r\n          }\r\n        }).catch(reason => reject(reason));\r\n    });\r\n  }\r\n\r\n}","'use strict';\r\n\r\nimport vscode = require('vscode');\r\nimport { getDirtyFile } from './nimUtils';\r\nimport { execNimSuggest, NimSuggestType } from './nimSuggestExec';\r\n\r\nexport class NimRenameProvider implements vscode.RenameProvider {\r\n\r\n  public provideRenameEdits(document: vscode.TextDocument, position: vscode.Position, newName: string, token: vscode.CancellationToken): Thenable<vscode.WorkspaceEdit> {\r\n    return new Promise<vscode.WorkspaceEdit>((resolve, reject) => {\r\n      vscode.workspace.saveAll(false).then(() => {\r\n          execNimSuggest(NimSuggestType.use, document.fileName, position.line + 1, position.character, getDirtyFile(document))\r\n            .then(result => {\r\n              var references: vscode.WorkspaceEdit = new vscode.WorkspaceEdit();\r\n              if (result) {\r\n                result.forEach(item => {\r\n                  let endPosition = new vscode.Position(item.range.end.line, item.range.end.character + item.symbolName.length);\r\n                  references.replace(item.uri, new vscode.Range(item.range.start, endPosition), newName);\r\n                });\r\n                resolve(references);\r\n              } else {\r\n                resolve();\r\n              }\r\n            })\r\n            .catch(reason => reject(reason));\r\n        });\r\n    });\r\n  }\r\n}\r\n","/*---------------------------------------------------------\r\n * Copyright (C) Xored Software Inc. All rights reserved.\r\n * Licensed under the MIT License. See LICENSE in the project root for license information.\r\n *--------------------------------------------------------*/\r\n\r\n'use strict';\r\n\r\nimport vscode = require('vscode');\r\n\r\nimport { getDirtyFile } from './nimUtils';\r\nimport { getFileSymbols, findWorkspaceSymbols } from './nimIndexer';\r\n\r\nexport class NimWorkspaceSymbolProvider implements vscode.WorkspaceSymbolProvider {\r\n\r\n    public provideWorkspaceSymbols(query: string, token: vscode.CancellationToken): Thenable<vscode.SymbolInformation[]> {\r\n        return findWorkspaceSymbols(query);\r\n    }\r\n}\r\n\r\nexport class NimDocumentSymbolProvider implements vscode.DocumentSymbolProvider {\r\n    public provideDocumentSymbols(document: vscode.TextDocument, token: vscode.CancellationToken): Thenable<vscode.SymbolInformation[]> {\r\n        return getFileSymbols(document.fileName, getDirtyFile(document));\r\n    }\r\n}\r\n","var Datastore = require('./lib/datastore');\n\nmodule.exports = Datastore;\n","var customUtils = require('./customUtils')\n  , model = require('./model')\n  , async = require('async')\n  , Executor = require('./executor')\n  , Index = require('./indexes')\n  , util = require('util')\n  , _ = require('underscore')\n  , Persistence = require('./persistence')\n  , Cursor = require('./cursor')\n  ;\n\n\n/**\n * Create a new collection\n * @param {String} options.filename Optional, datastore will be in-memory only if not provided\n * @param {Boolean} options.timestampData Optional, defaults to false. If set to true, createdAt and updatedAt will be created and populated automatically (if not specified by user)\n * @param {Boolean} options.inMemoryOnly Optional, defaults to false\n * @param {String} options.nodeWebkitAppName Optional, specify the name of your NW app if you want options.filename to be relative to the directory where\n *                                            Node Webkit stores application data such as cookies and local storage (the best place to store data in my opinion)\n * @param {Boolean} options.autoload Optional, defaults to false\n * @param {Function} options.onload Optional, if autoload is used this will be called after the load database with the error object as parameter. If you don't pass it the error will be thrown\n * @param {Function} options.afterSerialization/options.beforeDeserialization Optional, serialization hooks\n * @param {Number} options.corruptAlertThreshold Optional, threshold after which an alert is thrown if too much data is corrupt\n * @param {Function} options.compareStrings Optional, string comparison function that overrides default for sorting\n *\n * Event Emitter - Events\n * * compaction.done - Fired whenever a compaction operation was finished\n */\nfunction Datastore (options) {\n  var filename;\n\n  // Retrocompatibility with v0.6 and before\n  if (typeof options === 'string') {\n    filename = options;\n    this.inMemoryOnly = false;   // Default\n  } else {\n    options = options || {};\n    filename = options.filename;\n    this.inMemoryOnly = options.inMemoryOnly || false;\n    this.autoload = options.autoload || false;\n    this.timestampData = options.timestampData || false;\n  }\n\n  // Determine whether in memory or persistent\n  if (!filename || typeof filename !== 'string' || filename.length === 0) {\n    this.filename = null;\n    this.inMemoryOnly = true;\n  } else {\n    this.filename = filename;\n  }\n\n  // String comparison function\n  this.compareStrings = options.compareStrings;\n\n  // Persistence handling\n  this.persistence = new Persistence({ db: this, nodeWebkitAppName: options.nodeWebkitAppName\n                                      , afterSerialization: options.afterSerialization\n                                      , beforeDeserialization: options.beforeDeserialization\n                                      , corruptAlertThreshold: options.corruptAlertThreshold\n                                      });\n\n  // This new executor is ready if we don't use persistence\n  // If we do, it will only be ready once loadDatabase is called\n  this.executor = new Executor();\n  if (this.inMemoryOnly) { this.executor.ready = true; }\n\n  // Indexed by field name, dot notation can be used\n  // _id is always indexed and since _ids are generated randomly the underlying\n  // binary is always well-balanced\n  this.indexes = {};\n  this.indexes._id = new Index({ fieldName: '_id', unique: true });\n  this.ttlIndexes = {};\n\n  // Queue a load of the database right away and call the onload handler\n  // By default (no onload handler), if there is an error there, no operation will be possible so warn the user by throwing an exception\n  if (this.autoload) { this.loadDatabase(options.onload || function (err) {\n    if (err) { throw err; }\n  }); }\n}\n\nutil.inherits(Datastore, require('events').EventEmitter);\n\n\n/**\n * Load the database from the datafile, and trigger the execution of buffered commands if any\n */\nDatastore.prototype.loadDatabase = function () {\n  this.executor.push({ this: this.persistence, fn: this.persistence.loadDatabase, arguments: arguments }, true);\n};\n\n\n/**\n * Get an array of all the data in the database\n */\nDatastore.prototype.getAllData = function () {\n  return this.indexes._id.getAll();\n};\n\n\n/**\n * Reset all currently defined indexes\n */\nDatastore.prototype.resetIndexes = function (newData) {\n  var self = this;\n\n  Object.keys(this.indexes).forEach(function (i) {\n    self.indexes[i].reset(newData);\n  });\n};\n\n\n/**\n * Ensure an index is kept for this field. Same parameters as lib/indexes\n * For now this function is synchronous, we need to test how much time it takes\n * We use an async API for consistency with the rest of the code\n * @param {String} options.fieldName\n * @param {Boolean} options.unique\n * @param {Boolean} options.sparse\n * @param {Number} options.expireAfterSeconds - Optional, if set this index becomes a TTL index (only works on Date fields, not arrays of Date)\n * @param {Function} cb Optional callback, signature: err\n */\nDatastore.prototype.ensureIndex = function (options, cb) {\n  var err\n    , callback = cb || function () {};\n\n  options = options || {};\n\n  if (!options.fieldName) {\n    err = new Error(\"Cannot create an index without a fieldName\");\n    err.missingFieldName = true;\n    return callback(err);\n  }\n  if (this.indexes[options.fieldName]) { return callback(null); }\n\n  this.indexes[options.fieldName] = new Index(options);\n  if (options.expireAfterSeconds !== undefined) { this.ttlIndexes[options.fieldName] = options.expireAfterSeconds; }   // With this implementation index creation is not necessary to ensure TTL but we stick with MongoDB's API here\n\n  try {\n    this.indexes[options.fieldName].insert(this.getAllData());\n  } catch (e) {\n    delete this.indexes[options.fieldName];\n    return callback(e);\n  }\n\n  // We may want to force all options to be persisted including defaults, not just the ones passed the index creation function\n  this.persistence.persistNewState([{ $$indexCreated: options }], function (err) {\n    if (err) { return callback(err); }\n    return callback(null);\n  });\n};\n\n\n/**\n * Remove an index\n * @param {String} fieldName\n * @param {Function} cb Optional callback, signature: err\n */\nDatastore.prototype.removeIndex = function (fieldName, cb) {\n  var callback = cb || function () {};\n\n  delete this.indexes[fieldName];\n\n  this.persistence.persistNewState([{ $$indexRemoved: fieldName }], function (err) {\n    if (err) { return callback(err); }\n    return callback(null);\n  });\n};\n\n\n/**\n * Add one or several document(s) to all indexes\n */\nDatastore.prototype.addToIndexes = function (doc) {\n  var i, failingIndex, error\n    , keys = Object.keys(this.indexes)\n    ;\n\n  for (i = 0; i < keys.length; i += 1) {\n    try {\n      this.indexes[keys[i]].insert(doc);\n    } catch (e) {\n      failingIndex = i;\n      error = e;\n      break;\n    }\n  }\n\n  // If an error happened, we need to rollback the insert on all other indexes\n  if (error) {\n    for (i = 0; i < failingIndex; i += 1) {\n      this.indexes[keys[i]].remove(doc);\n    }\n\n    throw error;\n  }\n};\n\n\n/**\n * Remove one or several document(s) from all indexes\n */\nDatastore.prototype.removeFromIndexes = function (doc) {\n  var self = this;\n\n  Object.keys(this.indexes).forEach(function (i) {\n    self.indexes[i].remove(doc);\n  });\n};\n\n\n/**\n * Update one or several documents in all indexes\n * To update multiple documents, oldDoc must be an array of { oldDoc, newDoc } pairs\n * If one update violates a constraint, all changes are rolled back\n */\nDatastore.prototype.updateIndexes = function (oldDoc, newDoc) {\n  var i, failingIndex, error\n    , keys = Object.keys(this.indexes)\n    ;\n\n  for (i = 0; i < keys.length; i += 1) {\n    try {\n      this.indexes[keys[i]].update(oldDoc, newDoc);\n    } catch (e) {\n      failingIndex = i;\n      error = e;\n      break;\n    }\n  }\n\n  // If an error happened, we need to rollback the update on all other indexes\n  if (error) {\n    for (i = 0; i < failingIndex; i += 1) {\n      this.indexes[keys[i]].revertUpdate(oldDoc, newDoc);\n    }\n\n    throw error;\n  }\n};\n\n\n/**\n * Return the list of candidates for a given query\n * Crude implementation for now, we return the candidates given by the first usable index if any\n * We try the following query types, in this order: basic match, $in match, comparison match\n * One way to make it better would be to enable the use of multiple indexes if the first usable index\n * returns too much data. I may do it in the future.\n *\n * Returned candidates will be scanned to find and remove all expired documents\n *\n * @param {Query} query\n * @param {Boolean} dontExpireStaleDocs Optional, defaults to false, if true don't remove stale docs. Useful for the remove function which shouldn't be impacted by expirations\n * @param {Function} callback Signature err, docs\n */\nDatastore.prototype.getCandidates = function (query, dontExpireStaleDocs, callback) {\n  var indexNames = Object.keys(this.indexes)\n    , self = this\n    , usableQueryKeys;\n\n  if (typeof dontExpireStaleDocs === 'function') {\n    callback = dontExpireStaleDocs;\n    dontExpireStaleDocs = false;\n  }\n\n  async.waterfall([\n  // STEP 1: get candidates list by checking indexes from most to least frequent usecase\n  function (cb) {\n    // For a basic match\n    usableQueryKeys = [];\n    Object.keys(query).forEach(function (k) {\n      if (typeof query[k] === 'string' || typeof query[k] === 'number' || typeof query[k] === 'boolean' || util.isDate(query[k]) || query[k] === null) {\n        usableQueryKeys.push(k);\n      }\n    });\n    usableQueryKeys = _.intersection(usableQueryKeys, indexNames);\n    if (usableQueryKeys.length > 0) {\n      return cb(null, self.indexes[usableQueryKeys[0]].getMatching(query[usableQueryKeys[0]]));\n    }\n\n    // For a $in match\n    usableQueryKeys = [];\n    Object.keys(query).forEach(function (k) {\n      if (query[k] && query[k].hasOwnProperty('$in')) {\n        usableQueryKeys.push(k);\n      }\n    });\n    usableQueryKeys = _.intersection(usableQueryKeys, indexNames);\n    if (usableQueryKeys.length > 0) {\n      return cb(null, self.indexes[usableQueryKeys[0]].getMatching(query[usableQueryKeys[0]].$in));\n    }\n\n    // For a comparison match\n    usableQueryKeys = [];\n    Object.keys(query).forEach(function (k) {\n      if (query[k] && (query[k].hasOwnProperty('$lt') || query[k].hasOwnProperty('$lte') || query[k].hasOwnProperty('$gt') || query[k].hasOwnProperty('$gte'))) {\n        usableQueryKeys.push(k);\n      }\n    });\n    usableQueryKeys = _.intersection(usableQueryKeys, indexNames);\n    if (usableQueryKeys.length > 0) {\n      return cb(null, self.indexes[usableQueryKeys[0]].getBetweenBounds(query[usableQueryKeys[0]]));\n    }\n\n    // By default, return all the DB data\n    return cb(null, self.getAllData());\n  }\n  // STEP 2: remove all expired documents\n  , function (docs) {\n    if (dontExpireStaleDocs) { return callback(null, docs); }\n\n    var expiredDocsIds = [], validDocs = [], ttlIndexesFieldNames = Object.keys(self.ttlIndexes);\n\n    docs.forEach(function (doc) {\n      var valid = true;\n      ttlIndexesFieldNames.forEach(function (i) {\n        if (doc[i] !== undefined && util.isDate(doc[i]) && Date.now() > doc[i].getTime() + self.ttlIndexes[i] * 1000) {\n          valid = false;\n        }\n      });\n      if (valid) { validDocs.push(doc); } else { expiredDocsIds.push(doc._id); }\n    });\n\n    async.eachSeries(expiredDocsIds, function (_id, cb) {\n      self._remove({ _id: _id }, {}, function (err) {\n        if (err) { return callback(err); }\n        return cb();\n      });\n    }, function (err) {\n      return callback(null, validDocs);\n    });\n  }]);\n};\n\n\n/**\n * Insert a new document\n * @param {Function} cb Optional callback, signature: err, insertedDoc\n *\n * @api private Use Datastore.insert which has the same signature\n */\nDatastore.prototype._insert = function (newDoc, cb) {\n  var callback = cb || function () {}\n    , preparedDoc\n    ;\n\n  try {\n    preparedDoc = this.prepareDocumentForInsertion(newDoc)\n    this._insertInCache(preparedDoc);\n  } catch (e) {\n    return callback(e);\n  }\n\n  this.persistence.persistNewState(util.isArray(preparedDoc) ? preparedDoc : [preparedDoc], function (err) {\n    if (err) { return callback(err); }\n    return callback(null, model.deepCopy(preparedDoc));\n  });\n};\n\n/**\n * Create a new _id that's not already in use\n */\nDatastore.prototype.createNewId = function () {\n  var tentativeId = customUtils.uid(16);\n  // Try as many times as needed to get an unused _id. As explained in customUtils, the probability of this ever happening is extremely small, so this is O(1)\n  if (this.indexes._id.getMatching(tentativeId).length > 0) {\n    tentativeId = this.createNewId();\n  }\n  return tentativeId;\n};\n\n/**\n * Prepare a document (or array of documents) to be inserted in a database\n * Meaning adds _id and timestamps if necessary on a copy of newDoc to avoid any side effect on user input\n * @api private\n */\nDatastore.prototype.prepareDocumentForInsertion = function (newDoc) {\n  var preparedDoc, self = this;\n\n  if (util.isArray(newDoc)) {\n    preparedDoc = [];\n    newDoc.forEach(function (doc) { preparedDoc.push(self.prepareDocumentForInsertion(doc)); });\n  } else {\n    preparedDoc = model.deepCopy(newDoc);\n    if (preparedDoc._id === undefined) { preparedDoc._id = this.createNewId(); }\n    var now = new Date();\n    if (this.timestampData && preparedDoc.createdAt === undefined) { preparedDoc.createdAt = now; }\n    if (this.timestampData && preparedDoc.updatedAt === undefined) { preparedDoc.updatedAt = now; }\n    model.checkObject(preparedDoc);\n  }\n\n  return preparedDoc;\n};\n\n/**\n * If newDoc is an array of documents, this will insert all documents in the cache\n * @api private\n */\nDatastore.prototype._insertInCache = function (preparedDoc) {\n  if (util.isArray(preparedDoc)) {\n    this._insertMultipleDocsInCache(preparedDoc);\n  } else {\n    this.addToIndexes(preparedDoc);\n  }\n};\n\n/**\n * If one insertion fails (e.g. because of a unique constraint), roll back all previous\n * inserts and throws the error\n * @api private\n */\nDatastore.prototype._insertMultipleDocsInCache = function (preparedDocs) {\n  var i, failingI, error;\n\n  for (i = 0; i < preparedDocs.length; i += 1) {\n    try {\n      this.addToIndexes(preparedDocs[i]);\n    } catch (e) {\n      error = e;\n      failingI = i;\n      break;\n    }\n  }\n\n  if (error) {\n    for (i = 0; i < failingI; i += 1) {\n      this.removeFromIndexes(preparedDocs[i]);\n    }\n\n    throw error;\n  }\n};\n\nDatastore.prototype.insert = function () {\n  this.executor.push({ this: this, fn: this._insert, arguments: arguments });\n};\n\n\n/**\n * Count all documents matching the query\n * @param {Object} query MongoDB-style query\n */\nDatastore.prototype.count = function(query, callback) {\n  var cursor = new Cursor(this, query, function(err, docs, callback) {\n    if (err) { return callback(err); }\n    return callback(null, docs.length);\n  });\n\n  if (typeof callback === 'function') {\n    cursor.exec(callback);\n  } else {\n    return cursor;\n  }\n};\n\n\n/**\n * Find all documents matching the query\n * If no callback is passed, we return the cursor so that user can limit, skip and finally exec\n * @param {Object} query MongoDB-style query\n * @param {Object} projection MongoDB-style projection\n */\nDatastore.prototype.find = function (query, projection, callback) {\n  switch (arguments.length) {\n    case 1:\n      projection = {};\n      // callback is undefined, will return a cursor\n      break;\n    case 2:\n      if (typeof projection === 'function') {\n        callback = projection;\n        projection = {};\n      }   // If not assume projection is an object and callback undefined\n      break;\n  }\n\n  var cursor = new Cursor(this, query, function(err, docs, callback) {\n    var res = [], i;\n\n    if (err) { return callback(err); }\n\n    for (i = 0; i < docs.length; i += 1) {\n      res.push(model.deepCopy(docs[i]));\n    }\n    return callback(null, res);\n  });\n\n  cursor.projection(projection);\n  if (typeof callback === 'function') {\n    cursor.exec(callback);\n  } else {\n    return cursor;\n  }\n};\n\n\n/**\n * Find one document matching the query\n * @param {Object} query MongoDB-style query\n * @param {Object} projection MongoDB-style projection\n */\nDatastore.prototype.findOne = function (query, projection, callback) {\n  switch (arguments.length) {\n    case 1:\n      projection = {};\n      // callback is undefined, will return a cursor\n      break;\n    case 2:\n      if (typeof projection === 'function') {\n        callback = projection;\n        projection = {};\n      }   // If not assume projection is an object and callback undefined\n      break;\n  }\n\n  var cursor = new Cursor(this, query, function(err, docs, callback) {\n    if (err) { return callback(err); }\n    if (docs.length === 1) {\n      return callback(null, model.deepCopy(docs[0]));\n    } else {\n      return callback(null, null);\n    }\n  });\n\n  cursor.projection(projection).limit(1);\n  if (typeof callback === 'function') {\n    cursor.exec(callback);\n  } else {\n    return cursor;\n  }\n};\n\n\n/**\n * Update all docs matching query\n * @param {Object} query\n * @param {Object} updateQuery\n * @param {Object} options Optional options\n *                 options.multi If true, can update multiple documents (defaults to false)\n *                 options.upsert If true, document is inserted if the query doesn't match anything\n *                 options.returnUpdatedDocs Defaults to false, if true return as third argument the array of updated matched documents (even if no change actually took place)\n * @param {Function} cb Optional callback, signature: (err, numAffected, affectedDocuments, upsert)\n *                      If update was an upsert, upsert flag is set to true\n *                      affectedDocuments can be one of the following:\n *                        * For an upsert, the upserted document\n *                        * For an update with returnUpdatedDocs option false, null\n *                        * For an update with returnUpdatedDocs true and multi false, the updated document\n *                        * For an update with returnUpdatedDocs true and multi true, the array of updated documents\n *\n * WARNING: The API was changed between v1.7.4 and v1.8, for consistency and readability reasons. Prior and including to v1.7.4,\n *          the callback signature was (err, numAffected, updated) where updated was the updated document in case of an upsert\n *          or the array of updated documents for an update if the returnUpdatedDocs option was true. That meant that the type of\n *          affectedDocuments in a non multi update depended on whether there was an upsert or not, leaving only two ways for the\n *          user to check whether an upsert had occured: checking the type of affectedDocuments or running another find query on\n *          the whole dataset to check its size. Both options being ugly, the breaking change was necessary.\n *\n * @api private Use Datastore.update which has the same signature\n */\nDatastore.prototype._update = function (query, updateQuery, options, cb) {\n  var callback\n    , self = this\n    , numReplaced = 0\n    , multi, upsert\n    , i\n    ;\n\n  if (typeof options === 'function') { cb = options; options = {}; }\n  callback = cb || function () {};\n  multi = options.multi !== undefined ? options.multi : false;\n  upsert = options.upsert !== undefined ? options.upsert : false;\n\n  async.waterfall([\n  function (cb) {   // If upsert option is set, check whether we need to insert the doc\n    if (!upsert) { return cb(); }\n\n    // Need to use an internal function not tied to the executor to avoid deadlock\n    var cursor = new Cursor(self, query);\n    cursor.limit(1)._exec(function (err, docs) {\n      if (err) { return callback(err); }\n      if (docs.length === 1) {\n        return cb();\n      } else {\n        var toBeInserted;\n\n        try {\n          model.checkObject(updateQuery);\n          // updateQuery is a simple object with no modifier, use it as the document to insert\n          toBeInserted = updateQuery;\n        } catch (e) {\n          // updateQuery contains modifiers, use the find query as the base,\n          // strip it from all operators and update it according to updateQuery\n          try {\n            toBeInserted = model.modify(model.deepCopy(query, true), updateQuery);\n          } catch (err) {\n            return callback(err);\n          }\n        }\n\n        return self._insert(toBeInserted, function (err, newDoc) {\n          if (err) { return callback(err); }\n          return callback(null, 1, newDoc, true);\n        });\n      }\n    });\n  }\n  , function () {   // Perform the update\n    var modifiedDoc , modifications = [], createdAt;\n\n    self.getCandidates(query, function (err, candidates) {\n      if (err) { return callback(err); }\n\n      // Preparing update (if an error is thrown here neither the datafile nor\n      // the in-memory indexes are affected)\n      try {\n        for (i = 0; i < candidates.length; i += 1) {\n          if (model.match(candidates[i], query) && (multi || numReplaced === 0)) {\n            numReplaced += 1;\n            if (self.timestampData) { createdAt = candidates[i].createdAt; }\n            modifiedDoc = model.modify(candidates[i], updateQuery);\n            if (self.timestampData) {\n              modifiedDoc.createdAt = createdAt;\n              modifiedDoc.updatedAt = new Date();\n            }\n            modifications.push({ oldDoc: candidates[i], newDoc: modifiedDoc });\n          }\n        }\n      } catch (err) {\n        return callback(err);\n      }\n\n      // Change the docs in memory\n      try {\n        self.updateIndexes(modifications);\n      } catch (err) {\n        return callback(err);\n      }\n\n      // Update the datafile\n      var updatedDocs = _.pluck(modifications, 'newDoc');\n      self.persistence.persistNewState(updatedDocs, function (err) {\n        if (err) { return callback(err); }\n        if (!options.returnUpdatedDocs) {\n          return callback(null, numReplaced);\n        } else {\n          var updatedDocsDC = [];\n          updatedDocs.forEach(function (doc) { updatedDocsDC.push(model.deepCopy(doc)); });\n          if (! multi) { updatedDocsDC = updatedDocsDC[0]; }\n          return callback(null, numReplaced, updatedDocsDC);\n        }\n      });\n    });\n  }]);\n};\n\nDatastore.prototype.update = function () {\n  this.executor.push({ this: this, fn: this._update, arguments: arguments });\n};\n\n\n/**\n * Remove all docs matching the query\n * For now very naive implementation (similar to update)\n * @param {Object} query\n * @param {Object} options Optional options\n *                 options.multi If true, can update multiple documents (defaults to false)\n * @param {Function} cb Optional callback, signature: err, numRemoved\n *\n * @api private Use Datastore.remove which has the same signature\n */\nDatastore.prototype._remove = function (query, options, cb) {\n  var callback\n    , self = this, numRemoved = 0, removedDocs = [], multi\n    ;\n\n  if (typeof options === 'function') { cb = options; options = {}; }\n  callback = cb || function () {};\n  multi = options.multi !== undefined ? options.multi : false;\n\n  this.getCandidates(query, true, function (err, candidates) {\n    if (err) { return callback(err); }\n\n    try {\n      candidates.forEach(function (d) {\n        if (model.match(d, query) && (multi || numRemoved === 0)) {\n          numRemoved += 1;\n          removedDocs.push({ $$deleted: true, _id: d._id });\n          self.removeFromIndexes(d);\n        }\n      });\n    } catch (err) { return callback(err); }\n\n    self.persistence.persistNewState(removedDocs, function (err) {\n      if (err) { return callback(err); }\n      return callback(null, numRemoved);\n    });\n  });\n};\n\nDatastore.prototype.remove = function () {\n  this.executor.push({ this: this, fn: this._remove, arguments: arguments });\n};\n\n\n\nmodule.exports = Datastore;\n","module.exports = require(\"crypto\");","/**\n * Responsible for sequentially executing actions on the database\n */\n\nvar async = require('async')\n  ;\n\nfunction Executor () {\n  this.buffer = [];\n  this.ready = false;\n\n  // This queue will execute all commands, one-by-one in order\n  this.queue = async.queue(function (task, cb) {\n    var newArguments = [];\n\n    // task.arguments is an array-like object on which adding a new field doesn't work, so we transform it into a real array\n    for (var i = 0; i < task.arguments.length; i += 1) { newArguments.push(task.arguments[i]); }\n    var lastArg = task.arguments[task.arguments.length - 1];\n\n    // Always tell the queue task is complete. Execute callback if any was given.\n    if (typeof lastArg === 'function') {\n      // Callback was supplied\n      newArguments[newArguments.length - 1] = function () {\n        if (typeof setImmediate === 'function') {\n           setImmediate(cb);\n        } else {\n          process.nextTick(cb);\n        }\n        lastArg.apply(null, arguments);\n      };\n    } else if (!lastArg && task.arguments.length !== 0) {\n      // false/undefined/null supplied as callbback\n      newArguments[newArguments.length - 1] = function () { cb(); };\n    } else {\n      // Nothing supplied as callback\n      newArguments.push(function () { cb(); });\n    }\n\n\n    task.fn.apply(task.this, newArguments);\n  }, 1);\n}\n\n\n/**\n * If executor is ready, queue task (and process it immediately if executor was idle)\n * If not, buffer task for later processing\n * @param {Object} task\n *                 task.this - Object to use as this\n *                 task.fn - Function to execute\n *                 task.arguments - Array of arguments, IMPORTANT: only the last argument may be a function (the callback)\n *                                                                 and the last argument cannot be false/undefined/null\n * @param {Boolean} forceQueuing Optional (defaults to false) force executor to queue task even if it is not ready\n */\nExecutor.prototype.push = function (task, forceQueuing) {\n  if (this.ready || forceQueuing) {\n    this.queue.push(task);\n  } else {\n    this.buffer.push(task);\n  }\n};\n\n\n/**\n * Queue all tasks in buffer (in the same order they came in)\n * Automatically sets executor as ready\n */\nExecutor.prototype.processBuffer = function () {\n  var i;\n  this.ready = true;\n  for (i = 0; i < this.buffer.length; i += 1) { this.queue.push(this.buffer[i]); }\n  this.buffer = [];\n};\n\n\n\n// Interface\nmodule.exports = Executor;\n","module.exports.BinarySearchTree = require('./lib/bst');\nmodule.exports.AVLTree = require('./lib/avltree');\n","/**\n * Self-balancing binary search tree using the AVL implementation\n */\nvar BinarySearchTree = require('./bst')\n  , customUtils = require('./customUtils')\n  , util = require('util')\n  , _ = require('underscore')\n  ;\n\n\n/**\n * Constructor\n * We can't use a direct pointer to the root node (as in the simple binary search tree)\n * as the root will change during tree rotations\n * @param {Boolean}  options.unique Whether to enforce a 'unique' constraint on the key or not\n * @param {Function} options.compareKeys Initialize this BST's compareKeys\n */\nfunction AVLTree (options) {\n  this.tree = new _AVLTree(options);\n}\n\n\n/**\n * Constructor of the internal AVLTree\n * @param {Object} options Optional\n * @param {Boolean}  options.unique Whether to enforce a 'unique' constraint on the key or not\n * @param {Key}      options.key Initialize this BST's key with key\n * @param {Value}    options.value Initialize this BST's data with [value]\n * @param {Function} options.compareKeys Initialize this BST's compareKeys\n */\nfunction _AVLTree (options) {\n  options = options || {};\n\n  this.left = null;\n  this.right = null;\n  this.parent = options.parent !== undefined ? options.parent : null;\n  if (options.hasOwnProperty('key')) { this.key = options.key; }\n  this.data = options.hasOwnProperty('value') ? [options.value] : [];\n  this.unique = options.unique || false;\n\n  this.compareKeys = options.compareKeys || customUtils.defaultCompareKeysFunction;\n  this.checkValueEquality = options.checkValueEquality || customUtils.defaultCheckValueEquality;\n}\n\n\n/**\n * Inherit basic functions from the basic binary search tree\n */\nutil.inherits(_AVLTree, BinarySearchTree);\n\n/**\n * Keep a pointer to the internal tree constructor for testing purposes\n */\nAVLTree._AVLTree = _AVLTree;\n\n\n/**\n * Check the recorded height is correct for every node\n * Throws if one height doesn't match\n */\n_AVLTree.prototype.checkHeightCorrect = function () {\n  var leftH, rightH;\n\n  if (!this.hasOwnProperty('key')) { return; }   // Empty tree\n\n  if (this.left && this.left.height === undefined) { throw new Error(\"Undefined height for node \" + this.left.key); }\n  if (this.right && this.right.height === undefined) { throw new Error(\"Undefined height for node \" + this.right.key); }\n  if (this.height === undefined) { throw new Error(\"Undefined height for node \" + this.key); }\n\n  leftH = this.left ? this.left.height : 0;\n  rightH = this.right ? this.right.height : 0;\n\n  if (this.height !== 1 + Math.max(leftH, rightH)) { throw new Error(\"Height constraint failed for node \" + this.key); }\n  if (this.left) { this.left.checkHeightCorrect(); }\n  if (this.right) { this.right.checkHeightCorrect(); }\n};\n\n\n/**\n * Return the balance factor\n */\n_AVLTree.prototype.balanceFactor = function () {\n  var leftH = this.left ? this.left.height : 0\n    , rightH = this.right ? this.right.height : 0\n    ;\n  return leftH - rightH;\n};\n\n\n/**\n * Check that the balance factors are all between -1 and 1\n */\n_AVLTree.prototype.checkBalanceFactors = function () {\n  if (Math.abs(this.balanceFactor()) > 1) { throw new Error('Tree is unbalanced at node ' + this.key); }\n\n  if (this.left) { this.left.checkBalanceFactors(); }\n  if (this.right) { this.right.checkBalanceFactors(); }\n};\n\n\n/**\n * When checking if the BST conditions are met, also check that the heights are correct\n * and the tree is balanced\n */\n_AVLTree.prototype.checkIsAVLT = function () {\n  _AVLTree.super_.prototype.checkIsBST.call(this);\n  this.checkHeightCorrect();\n  this.checkBalanceFactors();\n};\nAVLTree.prototype.checkIsAVLT = function () { this.tree.checkIsAVLT(); };\n\n\n/**\n * Perform a right rotation of the tree if possible\n * and return the root of the resulting tree\n * The resulting tree's nodes' heights are also updated\n */\n_AVLTree.prototype.rightRotation = function () {\n  var q = this\n    , p = this.left\n    , b\n    , ah, bh, ch;\n\n  if (!p) { return this; }   // No change\n\n  b = p.right;\n\n  // Alter tree structure\n  if (q.parent) {\n    p.parent = q.parent;\n    if (q.parent.left === q) { q.parent.left = p; } else { q.parent.right = p; }\n  } else {\n    p.parent = null;\n  }\n  p.right = q;\n  q.parent = p;\n  q.left = b;\n  if (b) { b.parent = q; }\n\n  // Update heights\n  ah = p.left ? p.left.height : 0;\n  bh = b ? b.height : 0;\n  ch = q.right ? q.right.height : 0;\n  q.height = Math.max(bh, ch) + 1;\n  p.height = Math.max(ah, q.height) + 1;\n\n  return p;\n};\n\n\n/**\n * Perform a left rotation of the tree if possible\n * and return the root of the resulting tree\n * The resulting tree's nodes' heights are also updated\n */\n_AVLTree.prototype.leftRotation = function () {\n  var p = this\n    , q = this.right\n    , b\n    , ah, bh, ch;\n\n  if (!q) { return this; }   // No change\n\n  b = q.left;\n\n  // Alter tree structure\n  if (p.parent) {\n    q.parent = p.parent;\n    if (p.parent.left === p) { p.parent.left = q; } else { p.parent.right = q; }\n  } else {\n    q.parent = null;\n  }\n  q.left = p;\n  p.parent = q;\n  p.right = b;\n  if (b) { b.parent = p; }\n\n  // Update heights\n  ah = p.left ? p.left.height : 0;\n  bh = b ? b.height : 0;\n  ch = q.right ? q.right.height : 0;\n  p.height = Math.max(ah, bh) + 1;\n  q.height = Math.max(ch, p.height) + 1;\n\n  return q;\n};\n\n\n/**\n * Modify the tree if its right subtree is too small compared to the left\n * Return the new root if any\n */\n_AVLTree.prototype.rightTooSmall = function () {\n  if (this.balanceFactor() <= 1) { return this; }   // Right is not too small, don't change\n\n  if (this.left.balanceFactor() < 0) {\n    this.left.leftRotation();\n  }\n\n  return this.rightRotation();\n};\n\n\n/**\n * Modify the tree if its left subtree is too small compared to the right\n * Return the new root if any\n */\n_AVLTree.prototype.leftTooSmall = function () {\n  if (this.balanceFactor() >= -1) { return this; }   // Left is not too small, don't change\n\n  if (this.right.balanceFactor() > 0) {\n    this.right.rightRotation();\n  }\n\n  return this.leftRotation();\n};\n\n\n/**\n * Rebalance the tree along the given path. The path is given reversed (as he was calculated\n * in the insert and delete functions).\n * Returns the new root of the tree\n * Of course, the first element of the path must be the root of the tree\n */\n_AVLTree.prototype.rebalanceAlongPath = function (path) {\n  var newRoot = this\n    , rotated\n    , i;\n\n  if (!this.hasOwnProperty('key')) { delete this.height; return this; }   // Empty tree\n\n  // Rebalance the tree and update all heights\n  for (i = path.length - 1; i >= 0; i -= 1) {\n    path[i].height = 1 + Math.max(path[i].left ? path[i].left.height : 0, path[i].right ? path[i].right.height : 0);\n\n    if (path[i].balanceFactor() > 1) {\n      rotated = path[i].rightTooSmall();\n      if (i === 0) { newRoot = rotated; }\n    }\n\n    if (path[i].balanceFactor() < -1) {\n      rotated = path[i].leftTooSmall();\n      if (i === 0) { newRoot = rotated; }\n    }\n  }\n\n  return newRoot;\n};\n\n\n/**\n * Insert a key, value pair in the tree while maintaining the AVL tree height constraint\n * Return a pointer to the root node, which may have changed\n */\n_AVLTree.prototype.insert = function (key, value) {\n  var insertPath = []\n    , currentNode = this\n    ;\n\n  // Empty tree, insert as root\n  if (!this.hasOwnProperty('key')) {\n    this.key = key;\n    this.data.push(value);\n    this.height = 1;\n    return this;\n  }\n\n  // Insert new leaf at the right place\n  while (true) {\n    // Same key: no change in the tree structure\n    if (currentNode.compareKeys(currentNode.key, key) === 0) {\n      if (currentNode.unique) {\n        var err = new Error(\"Can't insert key \" + key + \", it violates the unique constraint\");\n        err.key = key;\n        err.errorType = 'uniqueViolated';\n        throw err;\n      } else {\n        currentNode.data.push(value);\n      }\n      return this;\n    }\n\n    insertPath.push(currentNode);\n\n    if (currentNode.compareKeys(key, currentNode.key) < 0) {\n      if (!currentNode.left) {\n        insertPath.push(currentNode.createLeftChild({ key: key, value: value }));\n        break;\n      } else {\n        currentNode = currentNode.left;\n      }\n    } else {\n      if (!currentNode.right) {\n        insertPath.push(currentNode.createRightChild({ key: key, value: value }));\n        break;\n      } else {\n        currentNode = currentNode.right;\n      }\n    }\n  }\n\n  return this.rebalanceAlongPath(insertPath);\n};\n\n// Insert in the internal tree, update the pointer to the root if needed\nAVLTree.prototype.insert = function (key, value) {\n  var newTree = this.tree.insert(key, value);\n\n  // If newTree is undefined, that means its structure was not modified\n  if (newTree) { this.tree = newTree; }\n};\n\n\n/**\n * Delete a key or just a value and return the new root of the tree\n * @param {Key} key\n * @param {Value} value Optional. If not set, the whole key is deleted. If set, only this value is deleted\n */\n_AVLTree.prototype.delete = function (key, value) {\n  var newData = [], replaceWith\n    , self = this\n    , currentNode = this\n    , deletePath = []\n    ;\n\n  if (!this.hasOwnProperty('key')) { return this; }   // Empty tree\n\n  // Either no match is found and the function will return from within the loop\n  // Or a match is found and deletePath will contain the path from the root to the node to delete after the loop\n  while (true) {\n    if (currentNode.compareKeys(key, currentNode.key) === 0) { break; }\n\n    deletePath.push(currentNode);\n\n    if (currentNode.compareKeys(key, currentNode.key) < 0) {\n      if (currentNode.left) {\n        currentNode = currentNode.left;\n      } else {\n        return this;   // Key not found, no modification\n      }\n    } else {\n      // currentNode.compareKeys(key, currentNode.key) is > 0\n      if (currentNode.right) {\n        currentNode = currentNode.right;\n      } else {\n        return this;   // Key not found, no modification\n      }\n    }\n  }\n\n  // Delete only a value (no tree modification)\n  if (currentNode.data.length > 1 && value) {\n    currentNode.data.forEach(function (d) {\n      if (!currentNode.checkValueEquality(d, value)) { newData.push(d); }\n    });\n    currentNode.data = newData;\n    return this;\n  }\n\n  // Delete a whole node\n\n  // Leaf\n  if (!currentNode.left && !currentNode.right) {\n    if (currentNode === this) {   // This leaf is also the root\n      delete currentNode.key;\n      currentNode.data = [];\n      delete currentNode.height;\n      return this;\n    } else {\n      if (currentNode.parent.left === currentNode) {\n        currentNode.parent.left = null;\n      } else {\n        currentNode.parent.right = null;\n      }\n      return this.rebalanceAlongPath(deletePath);\n    }\n  }\n\n\n  // Node with only one child\n  if (!currentNode.left || !currentNode.right) {\n    replaceWith = currentNode.left ? currentNode.left : currentNode.right;\n\n    if (currentNode === this) {   // This node is also the root\n      replaceWith.parent = null;\n      return replaceWith;   // height of replaceWith is necessarily 1 because the tree was balanced before deletion\n    } else {\n      if (currentNode.parent.left === currentNode) {\n        currentNode.parent.left = replaceWith;\n        replaceWith.parent = currentNode.parent;\n      } else {\n        currentNode.parent.right = replaceWith;\n        replaceWith.parent = currentNode.parent;\n      }\n\n      return this.rebalanceAlongPath(deletePath);\n    }\n  }\n\n\n  // Node with two children\n  // Use the in-order predecessor (no need to randomize since we actively rebalance)\n  deletePath.push(currentNode);\n  replaceWith = currentNode.left;\n\n  // Special case: the in-order predecessor is right below the node to delete\n  if (!replaceWith.right) {\n    currentNode.key = replaceWith.key;\n    currentNode.data = replaceWith.data;\n    currentNode.left = replaceWith.left;\n    if (replaceWith.left) { replaceWith.left.parent = currentNode; }\n    return this.rebalanceAlongPath(deletePath);\n  }\n\n  // After this loop, replaceWith is the right-most leaf in the left subtree\n  // and deletePath the path from the root (inclusive) to replaceWith (exclusive)\n  while (true) {\n    if (replaceWith.right) {\n      deletePath.push(replaceWith);\n      replaceWith = replaceWith.right;\n    } else {\n      break;\n    }\n  }\n\n  currentNode.key = replaceWith.key;\n  currentNode.data = replaceWith.data;\n\n  replaceWith.parent.right = replaceWith.left;\n  if (replaceWith.left) { replaceWith.left.parent = replaceWith.parent; }\n\n  return this.rebalanceAlongPath(deletePath);\n};\n\n// Delete a value\nAVLTree.prototype.delete = function (key, value) {\n  var newTree = this.tree.delete(key, value);\n\n  // If newTree is undefined, that means its structure was not modified\n  if (newTree) { this.tree = newTree; }\n};\n\n\n/**\n * Other functions we want to use on an AVLTree as if it were the internal _AVLTree\n */\n['getNumberOfKeys', 'search', 'betweenBounds', 'prettyPrint', 'executeOnEveryNode'].forEach(function (fn) {\n  AVLTree.prototype[fn] = function () {\n    return this.tree[fn].apply(this.tree, arguments);\n  };\n});\n\n\n// Interface\nmodule.exports = AVLTree;\n","/**\n * Handle every persistence-related task\n * The interface Datastore expects to be implemented is\n * * Persistence.loadDatabase(callback) and callback has signature err\n * * Persistence.persistNewState(newDocs, callback) where newDocs is an array of documents and callback has signature err\n */\n\nvar storage = require('./storage')\n  , path = require('path')\n  , model = require('./model')\n  , async = require('async')\n  , customUtils = require('./customUtils')\n  , Index = require('./indexes')\n  ;\n\n\n/**\n * Create a new Persistence object for database options.db\n * @param {Datastore} options.db\n * @param {Boolean} options.nodeWebkitAppName Optional, specify the name of your NW app if you want options.filename to be relative to the directory where\n *                                            Node Webkit stores application data such as cookies and local storage (the best place to store data in my opinion)\n */\nfunction Persistence (options) {\n  var i, j, randomString;\n\n  this.db = options.db;\n  this.inMemoryOnly = this.db.inMemoryOnly;\n  this.filename = this.db.filename;\n  this.corruptAlertThreshold = options.corruptAlertThreshold !== undefined ? options.corruptAlertThreshold : 0.1;\n\n  if (!this.inMemoryOnly && this.filename && this.filename.charAt(this.filename.length - 1) === '~') {\n    throw new Error(\"The datafile name can't end with a ~, which is reserved for crash safe backup files\");\n  }\n\n  // After serialization and before deserialization hooks with some basic sanity checks\n  if (options.afterSerialization && !options.beforeDeserialization) {\n    throw new Error(\"Serialization hook defined but deserialization hook undefined, cautiously refusing to start NeDB to prevent dataloss\");\n  }\n  if (!options.afterSerialization && options.beforeDeserialization) {\n    throw new Error(\"Serialization hook undefined but deserialization hook defined, cautiously refusing to start NeDB to prevent dataloss\");\n  }\n  this.afterSerialization = options.afterSerialization || function (s) { return s; };\n  this.beforeDeserialization = options.beforeDeserialization || function (s) { return s; };\n  for (i = 1; i < 30; i += 1) {\n    for (j = 0; j < 10; j += 1) {\n      randomString = customUtils.uid(i);\n      if (this.beforeDeserialization(this.afterSerialization(randomString)) !== randomString) {\n        throw new Error(\"beforeDeserialization is not the reverse of afterSerialization, cautiously refusing to start NeDB to prevent dataloss\");\n      }\n    }\n  }\n\n  // For NW apps, store data in the same directory where NW stores application data\n  if (this.filename && options.nodeWebkitAppName) {\n    console.log(\"==================================================================\");\n    console.log(\"WARNING: The nodeWebkitAppName option is deprecated\");\n    console.log(\"To get the path to the directory where Node Webkit stores the data\");\n    console.log(\"for your app, use the internal nw.gui module like this\");\n    console.log(\"require('nw.gui').App.dataPath\");\n    console.log(\"See https://github.com/rogerwang/node-webkit/issues/500\");\n    console.log(\"==================================================================\");\n    this.filename = Persistence.getNWAppFilename(options.nodeWebkitAppName, this.filename);\n  }\n};\n\n\n/**\n * Check if a directory exists and create it on the fly if it is not the case\n * cb is optional, signature: err\n */\nPersistence.ensureDirectoryExists = function (dir, cb) {\n  var callback = cb || function () {}\n    ;\n\n  storage.mkdirp(dir, function (err) { return callback(err); });\n};\n\n\n\n\n/**\n * Return the path the datafile if the given filename is relative to the directory where Node Webkit stores\n * data for this application. Probably the best place to store data\n */\nPersistence.getNWAppFilename = function (appName, relativeFilename) {\n  var home;\n\n  switch (process.platform) {\n    case 'win32':\n    case 'win64':\n      home = process.env.LOCALAPPDATA || process.env.APPDATA;\n      if (!home) { throw new Error(\"Couldn't find the base application data folder\"); }\n      home = path.join(home, appName);\n      break;\n    case 'darwin':\n      home = process.env.HOME;\n      if (!home) { throw new Error(\"Couldn't find the base application data directory\"); }\n      home = path.join(home, 'Library', 'Application Support', appName);\n      break;\n    case 'linux':\n      home = process.env.HOME;\n      if (!home) { throw new Error(\"Couldn't find the base application data directory\"); }\n      home = path.join(home, '.config', appName);\n      break;\n    default:\n      throw new Error(\"Can't use the Node Webkit relative path for platform \" + process.platform);\n      break;\n  }\n\n  return path.join(home, 'nedb-data', relativeFilename);\n}\n\n\n/**\n * Persist cached database\n * This serves as a compaction function since the cache always contains only the number of documents in the collection\n * while the data file is append-only so it may grow larger\n * @param {Function} cb Optional callback, signature: err\n */\nPersistence.prototype.persistCachedDatabase = function (cb) {\n  var callback = cb || function () {}\n    , toPersist = ''\n    , self = this\n    ;\n\n  if (this.inMemoryOnly) { return callback(null); }\n\n  this.db.getAllData().forEach(function (doc) {\n    toPersist += self.afterSerialization(model.serialize(doc)) + '\\n';\n  });\n  Object.keys(this.db.indexes).forEach(function (fieldName) {\n    if (fieldName != \"_id\") {   // The special _id index is managed by datastore.js, the others need to be persisted\n      toPersist += self.afterSerialization(model.serialize({ $$indexCreated: { fieldName: fieldName, unique: self.db.indexes[fieldName].unique, sparse: self.db.indexes[fieldName].sparse }})) + '\\n';\n    }\n  });\n\n  storage.crashSafeWriteFile(this.filename, toPersist, function (err) {\n    if (err) { return callback(err); }\n    self.db.emit('compaction.done');\n    return callback(null);\n  });\n};\n\n\n/**\n * Queue a rewrite of the datafile\n */\nPersistence.prototype.compactDatafile = function () {\n  this.db.executor.push({ this: this, fn: this.persistCachedDatabase, arguments: [] });\n};\n\n\n/**\n * Set automatic compaction every interval ms\n * @param {Number} interval in milliseconds, with an enforced minimum of 5 seconds\n */\nPersistence.prototype.setAutocompactionInterval = function (interval) {\n  var self = this\n    , minInterval = 5000\n    , realInterval = Math.max(interval || 0, minInterval)\n    ;\n\n  this.stopAutocompaction();\n\n  this.autocompactionIntervalId = setInterval(function () {\n    self.compactDatafile();\n  }, realInterval);\n};\n\n\n/**\n * Stop autocompaction (do nothing if autocompaction was not running)\n */\nPersistence.prototype.stopAutocompaction = function () {\n  if (this.autocompactionIntervalId) { clearInterval(this.autocompactionIntervalId); }\n};\n\n\n/**\n * Persist new state for the given newDocs (can be insertion, update or removal)\n * Use an append-only format\n * @param {Array} newDocs Can be empty if no doc was updated/removed\n * @param {Function} cb Optional, signature: err\n */\nPersistence.prototype.persistNewState = function (newDocs, cb) {\n  var self = this\n    , toPersist = ''\n    , callback = cb || function () {}\n    ;\n\n  // In-memory only datastore\n  if (self.inMemoryOnly) { return callback(null); }\n\n  newDocs.forEach(function (doc) {\n    toPersist += self.afterSerialization(model.serialize(doc)) + '\\n';\n  });\n\n  if (toPersist.length === 0) { return callback(null); }\n\n  storage.appendFile(self.filename, toPersist, 'utf8', function (err) {\n    return callback(err);\n  });\n};\n\n\n/**\n * From a database's raw data, return the corresponding\n * machine understandable collection\n */\nPersistence.prototype.treatRawData = function (rawData) {\n  var data = rawData.split('\\n')\n    , dataById = {}\n    , tdata = []\n    , i\n    , indexes = {}\n    , corruptItems = -1   // Last line of every data file is usually blank so not really corrupt\n    ;\n\n  for (i = 0; i < data.length; i += 1) {\n    var doc;\n\n    try {\n      doc = model.deserialize(this.beforeDeserialization(data[i]));\n      if (doc._id) {\n        if (doc.$$deleted === true) {\n          delete dataById[doc._id];\n        } else {\n          dataById[doc._id] = doc;\n        }\n      } else if (doc.$$indexCreated && doc.$$indexCreated.fieldName != undefined) {\n        indexes[doc.$$indexCreated.fieldName] = doc.$$indexCreated;\n      } else if (typeof doc.$$indexRemoved === \"string\") {\n        delete indexes[doc.$$indexRemoved];\n      }\n    } catch (e) {\n      corruptItems += 1;\n    }\n  }\n\n  // A bit lenient on corruption\n  if (data.length > 0 && corruptItems / data.length > this.corruptAlertThreshold) {\n    throw new Error(\"More than \" + Math.floor(100 * this.corruptAlertThreshold) + \"% of the data file is corrupt, the wrong beforeDeserialization hook may be used. Cautiously refusing to start NeDB to prevent dataloss\");\n  }\n\n  Object.keys(dataById).forEach(function (k) {\n    tdata.push(dataById[k]);\n  });\n\n  return { data: tdata, indexes: indexes };\n};\n\n\n/**\n * Load the database\n * 1) Create all indexes\n * 2) Insert all data\n * 3) Compact the database\n * This means pulling data out of the data file or creating it if it doesn't exist\n * Also, all data is persisted right away, which has the effect of compacting the database file\n * This operation is very quick at startup for a big collection (60ms for ~10k docs)\n * @param {Function} cb Optional callback, signature: err\n */\nPersistence.prototype.loadDatabase = function (cb) {\n  var callback = cb || function () {}\n    , self = this\n    ;\n\n  self.db.resetIndexes();\n\n  // In-memory only datastore\n  if (self.inMemoryOnly) { return callback(null); }\n\n  async.waterfall([\n    function (cb) {\n      Persistence.ensureDirectoryExists(path.dirname(self.filename), function (err) {\n        storage.ensureDatafileIntegrity(self.filename, function (err) {\n          storage.readFile(self.filename, 'utf8', function (err, rawData) {\n            if (err) { return cb(err); }\n\n            try {\n              var treatedData = self.treatRawData(rawData);\n            } catch (e) {\n              return cb(e);\n            }\n\n            // Recreate all indexes in the datafile\n            Object.keys(treatedData.indexes).forEach(function (key) {\n              self.db.indexes[key] = new Index(treatedData.indexes[key]);\n            });\n\n            // Fill cached database (i.e. all indexes) with data\n            try {\n              self.db.resetIndexes(treatedData.data);\n            } catch (e) {\n              self.db.resetIndexes();   // Rollback any index which didn't fail\n              return cb(e);\n            }\n\n            self.db.persistence.persistCachedDatabase(cb);\n          });\n        });\n      });\n    }\n  ], function (err) {\n       if (err) { return callback(err); }\n\n       self.db.executor.processBuffer();\n       return callback(null);\n     });\n};\n\n\n// Interface\nmodule.exports = Persistence;\n","/**\n * Way data is stored for this database\n * For a Node.js/Node Webkit database it's the file system\n * For a browser-side database it's localforage which chooses the best option depending on user browser (IndexedDB then WebSQL then localStorage)\n *\n * This version is the Node.js/Node Webkit version\n * It's essentially fs, mkdirp and crash safe write and read functions\n */\n\nvar fs = require('fs')\n  , mkdirp = require('mkdirp')\n  , async = require('async')\n  , path = require('path')\n  , storage = {}\n  ;\n\nstorage.exists = fs.exists;\nstorage.rename = fs.rename;\nstorage.writeFile = fs.writeFile;\nstorage.unlink = fs.unlink;\nstorage.appendFile = fs.appendFile;\nstorage.readFile = fs.readFile;\nstorage.mkdirp = mkdirp;\n\n\n/**\n * Explicit name ...\n */\nstorage.ensureFileDoesntExist = function (file, callback) {\n  storage.exists(file, function (exists) {\n    if (!exists) { return callback(null); }\n\n    storage.unlink(file, function (err) { return callback(err); });\n  });\n};\n\n\n/**\n * Flush data in OS buffer to storage if corresponding option is set\n * @param {String} options.filename\n * @param {Boolean} options.isDir Optional, defaults to false\n * If options is a string, it is assumed that the flush of the file (not dir) called options was requested\n */\nstorage.flushToStorage = function (options, callback) {\n  var filename, flags;\n  if (typeof options === 'string') {\n    filename = options;\n    flags = 'r+';\n  } else {\n    filename = options.filename;\n    flags = options.isDir ? 'r' : 'r+';\n  }\n\n  // Windows can't fsync (FlushFileBuffers) directories. We can live with this as it cannot cause 100% dataloss\n  // except in the very rare event of the first time database is loaded and a crash happens\n  if (flags === 'r' && (process.platform === 'win32' || process.platform === 'win64')) { return callback(null); }\n\n  fs.open(filename, flags, function (err, fd) {\n    if (err) { return callback(err); }\n    fs.fsync(fd, function (errFS) {\n      fs.close(fd, function (errC) {\n        if (errFS || errC) {\n          var e = new Error('Failed to flush to storage');\n          e.errorOnFsync = errFS;\n          e.errorOnClose = errC;\n          return callback(e);\n        } else {\n          return callback(null);\n        }\n      });\n    });\n  });\n};\n\n\n/**\n * Fully write or rewrite the datafile, immune to crashes during the write operation (data will not be lost)\n * @param {String} filename\n * @param {String} data\n * @param {Function} cb Optional callback, signature: err\n */\nstorage.crashSafeWriteFile = function (filename, data, cb) {\n  var callback = cb || function () {}\n    , tempFilename = filename + '~';\n\n  async.waterfall([\n    async.apply(storage.flushToStorage, { filename: path.dirname(filename), isDir: true })\n  , function (cb) {\n      storage.exists(filename, function (exists) {\n        if (exists) {\n          storage.flushToStorage(filename, function (err) { return cb(err); });\n        } else {\n          return cb();\n        }\n      });\n    }\n  , function (cb) {\n      storage.writeFile(tempFilename, data, function (err) { return cb(err); });\n    }\n  , async.apply(storage.flushToStorage, tempFilename)\n  , function (cb) {\n      storage.rename(tempFilename, filename, function (err) { return cb(err); });\n    }\n  , async.apply(storage.flushToStorage, { filename: path.dirname(filename), isDir: true })\n  ], function (err) { return callback(err); })\n};\n\n\n/**\n * Ensure the datafile contains all the data, even if there was a crash during a full file write\n * @param {String} filename\n * @param {Function} callback signature: err\n */\nstorage.ensureDatafileIntegrity = function (filename, callback) {\n  var tempFilename = filename + '~';\n\n  storage.exists(filename, function (filenameExists) {\n    // Write was successful\n    if (filenameExists) { return callback(null); }\n\n    storage.exists(tempFilename, function (oldFilenameExists) {\n      // New database\n      if (!oldFilenameExists) {\n        return storage.writeFile(filename, '', 'utf8', function (err) { callback(err); });\n      }\n\n      // Write failed, use old version\n      storage.rename(tempFilename, filename, function (err) { return callback(err); });\n    });\n  });\n};\n\n\n\n// Interface\nmodule.exports = storage;\n","var path = require('path');\nvar fs = require('fs');\nvar _0777 = parseInt('0777', 8);\n\nmodule.exports = mkdirP.mkdirp = mkdirP.mkdirP = mkdirP;\n\nfunction mkdirP (p, opts, f, made) {\n    if (typeof opts === 'function') {\n        f = opts;\n        opts = {};\n    }\n    else if (!opts || typeof opts !== 'object') {\n        opts = { mode: opts };\n    }\n    \n    var mode = opts.mode;\n    var xfs = opts.fs || fs;\n    \n    if (mode === undefined) {\n        mode = _0777\n    }\n    if (!made) made = null;\n    \n    var cb = f || function () {};\n    p = path.resolve(p);\n    \n    xfs.mkdir(p, mode, function (er) {\n        if (!er) {\n            made = made || p;\n            return cb(null, made);\n        }\n        switch (er.code) {\n            case 'ENOENT':\n                if (path.dirname(p) === p) return cb(er);\n                mkdirP(path.dirname(p), opts, function (er, made) {\n                    if (er) cb(er, made);\n                    else mkdirP(p, opts, cb, made);\n                });\n                break;\n\n            // In the case of any other error, just see if there's a dir\n            // there already.  If so, then hooray!  If not, then something\n            // is borked.\n            default:\n                xfs.stat(p, function (er2, stat) {\n                    // if the stat fails, then that's super weird.\n                    // let the original error be the failure reason.\n                    if (er2 || !stat.isDirectory()) cb(er, made)\n                    else cb(null, made);\n                });\n                break;\n        }\n    });\n}\n\nmkdirP.sync = function sync (p, opts, made) {\n    if (!opts || typeof opts !== 'object') {\n        opts = { mode: opts };\n    }\n    \n    var mode = opts.mode;\n    var xfs = opts.fs || fs;\n    \n    if (mode === undefined) {\n        mode = _0777\n    }\n    if (!made) made = null;\n\n    p = path.resolve(p);\n\n    try {\n        xfs.mkdirSync(p, mode);\n        made = made || p;\n    }\n    catch (err0) {\n        switch (err0.code) {\n            case 'ENOENT' :\n                made = sync(path.dirname(p), opts, made);\n                sync(p, opts, made);\n                break;\n\n            // In the case of any other error, just see if there's a dir\n            // there already.  If so, then hooray!  If not, then something\n            // is borked.\n            default:\n                var stat;\n                try {\n                    stat = xfs.statSync(p);\n                }\n                catch (err1) {\n                    throw err0;\n                }\n                if (!stat.isDirectory()) throw err0;\n                break;\n        }\n    }\n\n    return made;\n};\n","/**\n * Manage access to data, be it to find, update or remove it\n */\nvar model = require('./model')\n  , _ = require('underscore')\n  ;\n\n\n\n/**\n * Create a new cursor for this collection\n * @param {Datastore} db - The datastore this cursor is bound to\n * @param {Query} query - The query this cursor will operate on\n * @param {Function} execFn - Handler to be executed after cursor has found the results and before the callback passed to find/findOne/update/remove\n */\nfunction Cursor (db, query, execFn) {\n  this.db = db;\n  this.query = query || {};\n  if (execFn) { this.execFn = execFn; }\n}\n\n\n/**\n * Set a limit to the number of results\n */\nCursor.prototype.limit = function(limit) {\n  this._limit = limit;\n  return this;\n};\n\n\n/**\n * Skip a the number of results\n */\nCursor.prototype.skip = function(skip) {\n  this._skip = skip;\n  return this;\n};\n\n\n/**\n * Sort results of the query\n * @param {SortQuery} sortQuery - SortQuery is { field: order }, field can use the dot-notation, order is 1 for ascending and -1 for descending\n */\nCursor.prototype.sort = function(sortQuery) {\n  this._sort = sortQuery;\n  return this;\n};\n\n\n/**\n * Add the use of a projection\n * @param {Object} projection - MongoDB-style projection. {} means take all fields. Then it's { key1: 1, key2: 1 } to take only key1 and key2\n *                              { key1: 0, key2: 0 } to omit only key1 and key2. Except _id, you can't mix takes and omits\n */\nCursor.prototype.projection = function(projection) {\n  this._projection = projection;\n  return this;\n};\n\n\n/**\n * Apply the projection\n */\nCursor.prototype.project = function (candidates) {\n  var res = [], self = this\n    , keepId, action, keys\n    ;\n\n  if (this._projection === undefined || Object.keys(this._projection).length === 0) {\n    return candidates;\n  }\n\n  keepId = this._projection._id === 0 ? false : true;\n  this._projection = _.omit(this._projection, '_id');\n\n  // Check for consistency\n  keys = Object.keys(this._projection);\n  keys.forEach(function (k) {\n    if (action !== undefined && self._projection[k] !== action) { throw new Error(\"Can't both keep and omit fields except for _id\"); }\n    action = self._projection[k];\n  });\n\n  // Do the actual projection\n  candidates.forEach(function (candidate) {\n    var toPush;\n    if (action === 1) {   // pick-type projection\n      toPush = { $set: {} };\n      keys.forEach(function (k) {\n        toPush.$set[k] = model.getDotValue(candidate, k);\n        if (toPush.$set[k] === undefined) { delete toPush.$set[k]; }\n      });\n      toPush = model.modify({}, toPush);\n    } else {   // omit-type projection\n      toPush = { $unset: {} };\n      keys.forEach(function (k) { toPush.$unset[k] = true });\n      toPush = model.modify(candidate, toPush);\n    }\n    if (keepId) {\n      toPush._id = candidate._id;\n    } else {\n      delete toPush._id;\n    }\n    res.push(toPush);\n  });\n\n  return res;\n};\n\n\n/**\n * Get all matching elements\n * Will return pointers to matched elements (shallow copies), returning full copies is the role of find or findOne\n * This is an internal function, use exec which uses the executor\n *\n * @param {Function} callback - Signature: err, results\n */\nCursor.prototype._exec = function(_callback) {\n  var res = [], added = 0, skipped = 0, self = this\n    , error = null\n    , i, keys, key\n    ;\n\n  function callback (error, res) {\n    if (self.execFn) {\n      return self.execFn(error, res, _callback);\n    } else {\n      return _callback(error, res);\n    }\n  }\n\n  this.db.getCandidates(this.query, function (err, candidates) {\n    if (err) { return callback(err); }\n\n    try {\n      for (i = 0; i < candidates.length; i += 1) {\n        if (model.match(candidates[i], self.query)) {\n          // If a sort is defined, wait for the results to be sorted before applying limit and skip\n          if (!self._sort) {\n            if (self._skip && self._skip > skipped) {\n              skipped += 1;\n            } else {\n              res.push(candidates[i]);\n              added += 1;\n              if (self._limit && self._limit <= added) { break; }\n            }\n          } else {\n            res.push(candidates[i]);\n          }\n        }\n      }\n    } catch (err) {\n      return callback(err);\n    }\n\n    // Apply all sorts\n    if (self._sort) {\n      keys = Object.keys(self._sort);\n\n      // Sorting\n      var criteria = [];\n      for (i = 0; i < keys.length; i++) {\n        key = keys[i];\n        criteria.push({ key: key, direction: self._sort[key] });\n      }\n      res.sort(function(a, b) {\n        var criterion, compare, i;\n        for (i = 0; i < criteria.length; i++) {\n          criterion = criteria[i];\n          compare = criterion.direction * model.compareThings(model.getDotValue(a, criterion.key), model.getDotValue(b, criterion.key), self.db.compareStrings);\n          if (compare !== 0) {\n            return compare;\n          }\n        }\n        return 0;\n      });\n\n      // Applying limit and skip\n      var limit = self._limit || res.length\n        , skip = self._skip || 0;\n\n      res = res.slice(skip, skip + limit);\n    }\n\n    // Apply projection\n    try {\n      res = self.project(res);\n    } catch (e) {\n      error = e;\n      res = undefined;\n    }\n\n    return callback(error, res);\n  });\n};\n\nCursor.prototype.exec = function () {\n  this.db.executor.push({ this: this, fn: this._exec, arguments: arguments });\n};\n\n\n\n// Interface\nmodule.exports = Cursor;\n","module.exports = require(\"events\");","/*---------------------------------------------------------\r\n * Copyright (C) Xored Software Inc. All rights reserved.\r\n * Licensed under the MIT License. See LICENSE in the project root for license information.\r\n *--------------------------------------------------------*/\r\n\r\n'use strict';\r\n\r\nimport vscode = require('vscode');\r\nimport { getDirtyFile } from './nimUtils';\r\nimport { execNimSuggest, NimSuggestType } from './nimSuggestExec';\r\n\r\nexport class NimSignatureHelpProvider implements vscode.SignatureHelpProvider {\r\n\r\n  public provideSignatureHelp(document: vscode.TextDocument, position: vscode.Position, token: vscode.CancellationToken): Thenable<vscode.SignatureHelp> {\r\n    return new Promise<vscode.SignatureHelp>((resolve, reject) => {\r\n      var filename = document.fileName;\r\n\r\n      var currentArgument = 0;\r\n      var identBeforeDot = '';\r\n      {\r\n        var lines = document.getText().split('\\n');\r\n        var cursorX = position.character - 1, cursorY = position.line;\r\n        var line = lines[cursorY];\r\n        var bracketsWithin = 0;\r\n        while (line[cursorX] !== '(' || bracketsWithin !== 0) {\r\n          if ((line[cursorX] === ',' || line[cursorX] === ';') && bracketsWithin === 0)\r\n            currentArgument++;\r\n          else if (line[cursorX] === ')')\r\n            bracketsWithin++;\r\n          else if (line[cursorX] === '(')\r\n            bracketsWithin--;\r\n\r\n          cursorX--;\r\n\r\n          if (cursorX < 0) {\r\n            if (cursorY - 1 < 0) {\r\n              resolve();\r\n              return;\r\n            }\r\n            line = lines[--cursorY];\r\n          }\r\n        }\r\n\r\n        var dotPosition = -1, start = -1;\r\n        while (cursorX >= 0) {\r\n          if (line[cursorX] === '.') {\r\n            dotPosition = cursorX;\r\n            break;\r\n          }\r\n          cursorX--;\r\n        }\r\n\r\n        while (cursorX >= 0 && dotPosition !== -1) {\r\n          if (line[cursorX].search('[ \\t\\({=]') !== -1) {\r\n            start = cursorX + 1;\r\n            break;\r\n          }\r\n          cursorX--;\r\n        }\r\n\r\n        if (start === -1)\r\n          start = 0;\r\n\r\n        if (start !== -1) {\r\n          identBeforeDot = line.substring(start, dotPosition);\r\n        }\r\n      }\r\n\r\n      execNimSuggest(NimSuggestType.con, filename, position.line + 1, position.character, getDirtyFile(document))\r\n        .then(items => {\r\n          var signatures = new vscode.SignatureHelp();\r\n          var isModule = 0;\r\n          if (items && items.length > 0)\r\n            signatures.activeSignature = 0;\r\n          if (items) {\r\n            items.forEach(item => {\r\n              var signature = new vscode.SignatureInformation(item.type, item.documentation);\r\n\r\n              var genericsCleanType = '';\r\n              {\r\n                var insideGeneric = 0;\r\n                for (var i = 0; i < item.type.length; i++) {\r\n                  if (item.type[i] === '[')\r\n                    insideGeneric++;\r\n                  if (!insideGeneric)\r\n                    genericsCleanType += item.type[i];\r\n                  if (item.type[i] === ']')\r\n                    insideGeneric--;\r\n                }\r\n              }\r\n\r\n              var signatureCutDown = /(proc|macro|template|iterator|func) \\((.+: .+)*\\)/.exec(genericsCleanType);\r\n              if (signatureCutDown) {\r\n                var parameters = signatureCutDown[2].split(', ');\r\n                parameters.forEach(parameter => {\r\n                  signature.parameters.push(new vscode.ParameterInformation(parameter));\r\n                });\r\n              }\r\n\r\n              if (item.names[0] === identBeforeDot || item.path.search('/' + identBeforeDot + '/') !== -1 || item.path.search('\\\\\\\\' + identBeforeDot + '\\\\\\\\') !== -1)\r\n                isModule++;\r\n\r\n              signatures.signatures.push(signature);\r\n            });\r\n          }\r\n          signatures.activeParameter = isModule > 0 || identBeforeDot === '' ? currentArgument : currentArgument + 1;\r\n\r\n          resolve(signatures);\r\n        }).catch(reason => reject(reason));\r\n    });\r\n  }\r\n}\r\n","/*---------------------------------------------------------\r\n * Copyright (C) Xored Software Inc. All rights reserved.\r\n * Licensed under the MIT License. See LICENSE in the project root for license information.\r\n *--------------------------------------------------------*/\r\n\r\n'use strict';\r\n\r\nimport vscode = require('vscode');\r\nimport cp = require('child_process');\r\nimport fs = require('fs');\r\nimport { getDirtyFile, getNimPrettyExecPath } from './nimUtils';\r\n\r\nexport class NimFormattingProvider implements vscode.DocumentFormattingEditProvider {\r\n\r\n  public provideDocumentFormattingEdits(document: vscode.TextDocument, options: vscode.FormattingOptions, token: vscode.CancellationToken): vscode.TextEdit[] | Thenable<vscode.TextEdit[]> {\r\n    return new Promise((resolve, reject) => {\r\n      if (getNimPrettyExecPath() === '') {\r\n        vscode.window.showInformationMessage('No \\'nimpretty\\' binary could be found in PATH environment variable');\r\n        resolve([]);\r\n      } else {\r\n        let file = getDirtyFile(document);\r\n        let config = vscode.workspace.getConfiguration('nim');\r\n        let res = cp.spawnSync(getNimPrettyExecPath(), ['--backup:OFF', '--indent:' + config['nimprettyIndent'], '--maxLineLen:' + config['nimprettyMaxLineLen'], file], { cwd: vscode.workspace.rootPath });\r\n\r\n        if (res.status !== 0) {\r\n          reject(res.error);\r\n        } else {\r\n          if (!fs.existsSync(file)) {\r\n            reject(file + ' file not found');\r\n          } else {\r\n            let content = fs.readFileSync(file, 'utf-8');\r\n            let range = document.validateRange(new vscode.Range(new vscode.Position(0, 0), new vscode.Position(1000000, 1000000)));\r\n            resolve([vscode.TextEdit.replace(range, content)]);\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n","/*---------------------------------------------------------\r\n * Copyright (C) Xored Software Inc. All rights reserved.\r\n * Licensed under the MIT License. See LICENSE in the project root for license information.\r\n *--------------------------------------------------------*/\r\n\r\n'use strict';\r\n\r\nimport vscode = require('vscode');\r\nimport cp = require('child_process');\r\nimport os = require('os');\r\nimport { isWorkspaceFile, getNimExecPath, getProjectFileInfo, getProjects, isProjectMode, ProjectFileInfo, toLocalFile, outputLine } from './nimUtils';\r\nimport { execNimSuggest, NimSuggestType, NimSuggestResult } from './nimSuggestExec';\r\n\r\nexport interface ICheckResult {\r\n    file: string;\r\n    line: number;\r\n    column: number;\r\n    msg: string;\r\n    severity: string;\r\n}\r\n\r\nlet executors: { [project: string]: { initialized: boolean, process?: cp.ChildProcess } } = {};\r\n\r\nfunction nimExec(project: ProjectFileInfo, command: string, args: string[], useStdErr: boolean, callback: (lines: string[]) => any) {\r\n    return new Promise((resolve, reject) => {\r\n        if (!getNimExecPath()) {\r\n            return resolve([]);\r\n        }\r\n        let projectPath = toLocalFile(project);\r\n        if (executors[projectPath] && executors[projectPath].initialized) {\r\n            let ps = executors[projectPath].process;\r\n            executors[projectPath] = { initialized: false, process: undefined };\r\n            if (ps) {\r\n                ps.kill('SIGKILL');\r\n            }\r\n        } else {\r\n            executors[projectPath] = { initialized: false, process: undefined };\r\n        }\r\n        let executor = cp.spawn(getNimExecPath(), [command, ...args], { cwd: project.wsFolder.uri.fsPath });\r\n        executors[projectPath].process = executor;\r\n        executors[projectPath].initialized = true;\r\n        executor.on('error', (err) => {\r\n            if (err && (<any>err).code === 'ENOENT') {\r\n                vscode.window.showInformationMessage('No \\'nim\\' binary could be found in PATH: \\'' + process.env['PATH'] + '\\'');\r\n                return resolve([]);\r\n            }\r\n        });\r\n        executor.stdout.on('data', data => {\r\n            outputLine('[info] nim check output:\\n' + data.toString());\r\n        });\r\n        var out = '';\r\n        executor.on('exit', (code, signal) => {\r\n            if (signal === 'SIGKILL') {\r\n                reject([]);\r\n            } else {\r\n                executors[projectPath] = { initialized: false, process: undefined };\r\n                try {\r\n                    let split = out.split(os.EOL);\r\n                    if (split.length === 1) {\r\n                        var lfSplit = split[0].split('\\n');\r\n                        if (lfSplit.length > split.length)\r\n                            split = lfSplit;\r\n                    }\r\n\r\n                    var ret = callback(split);\r\n                    resolve(ret);\r\n                } catch (e) {\r\n                    reject(e);\r\n                }\r\n            }\r\n        });\r\n\r\n        if (useStdErr) {\r\n            executor.stderr.on('data', (data) => {\r\n                out += data.toString();\r\n            });\r\n        } else {\r\n            executor.stdout.on('data', (data) => {\r\n                out += data.toString();\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\nfunction parseErrors(lines: string[]): ICheckResult[] {\r\n    var ret: ICheckResult[] = [];\r\n    var messageText = '';\r\n    var lastFile = { file: '', column: '', line: '' };\r\n    for (var i = 0; i < lines.length; i++) {\r\n        let line = lines[i].trim();\r\n        if (line.startsWith('Hint:')) {\r\n            continue;\r\n        }\r\n        let match = /^([^(]*)?\\((\\d+)(,\\s(\\d+))?\\)( (\\w+):)? (.*)/.exec(line);\r\n        if (!match) {\r\n            if (messageText.length < 1024) {\r\n                messageText += os.EOL + line;\r\n            }\r\n        } else {\r\n            let [, file, lineStr, , charStr, , severity, msg] = match;\r\n            if (msg === 'template/generic instantiation from here') {\r\n                if (isWorkspaceFile(file)) {\r\n                    lastFile = { file: file, column: charStr, line: lineStr };\r\n                }\r\n            } else {\r\n                if (messageText !== '' && ret.length > 0) {\r\n                    ret[ret.length - 1].msg += os.EOL + messageText;\r\n                }\r\n                messageText = '';\r\n                if (isWorkspaceFile(file)) {\r\n                    ret.push({ file: file, line: parseInt(lineStr), column: parseInt(charStr), msg: msg, severity });\r\n                } else if (lastFile.file !== '') {\r\n                    ret.push({ file: lastFile.file, line: parseInt(lastFile.line), column: parseInt(lastFile.column), msg: msg, severity });\r\n                }\r\n                lastFile = { file: '', column: '', line: '' };\r\n            }\r\n        }\r\n    }\r\n    if (messageText !== '' && ret.length > 0) {\r\n        ret[ret.length - 1].msg += os.EOL + messageText;\r\n    }\r\n\r\n    return ret;\r\n}\r\n\r\nfunction parseNimsuggestErrors(items: NimSuggestResult[]): ICheckResult[] {\r\n    var ret: ICheckResult[] = [];\r\n    for (var i = 0; i < items.length; i++) {\r\n        let item = items[i];\r\n        if (item.path === '???' && item.type === 'Hint') {\r\n            continue;\r\n        }\r\n        ret.push({ file: item.path, line: item.line, column: item.column, msg: item.documentation, severity: item.type });\r\n    }\r\n    return ret;\r\n}\r\n\r\nexport function check(filename: string, nimConfig: vscode.WorkspaceConfiguration): Promise<ICheckResult[]> {\r\n    var runningToolsPromises: Promise<any>[] = [];\r\n\r\n    if (!!nimConfig['useNimsuggestCheck']) {\r\n        runningToolsPromises.push(new Promise((resolve, reject) => {\r\n            execNimSuggest(NimSuggestType.chk, filename, 0, 0, '').then(items => {\r\n                if (items && items.length > 0) {\r\n                    resolve(parseNimsuggestErrors(items));\r\n                } else {\r\n                    resolve([]);\r\n                }\r\n            }).catch(reason => reject(reason));\r\n        }));\r\n    } else {\r\n        if (!isProjectMode()) {\r\n            let project = getProjectFileInfo(filename);\r\n            runningToolsPromises.push(nimExec(project, 'check', ['--listFullPaths', project.filePath], true, parseErrors));\r\n        } else {\r\n            getProjects().forEach(project => {\r\n                runningToolsPromises.push(nimExec(project, 'check', ['--listFullPaths', project.filePath], true, parseErrors));\r\n            });\r\n        }\r\n    }\r\n\r\n    return Promise.all(runningToolsPromises).then(resultSets => [].concat.apply([], resultSets));\r\n}\r\n\r\nvar evalTerminal: vscode.Terminal | undefined;\r\n\r\nexport function activateEvalConsole() {\r\n    vscode.window.onDidCloseTerminal((e: vscode.Terminal) => {\r\n        if (evalTerminal && e.processId === evalTerminal.processId) {\r\n            evalTerminal = undefined;\r\n        }\r\n    });\r\n}\r\n\r\nexport function execSelectionInTerminal(document?: vscode.TextDocument) {\r\n    if (vscode.window.activeTextEditor) {\r\n        if (!getNimExecPath()) {\r\n            return;\r\n        }\r\n\r\n        if (!evalTerminal) {\r\n            evalTerminal = vscode.window.createTerminal('Nim Console');\r\n            evalTerminal.show(true);\r\n            evalTerminal.sendText(getNimExecPath() + ' ' + 'secret\\n');\r\n        }\r\n        evalTerminal.sendText(vscode.window.activeTextEditor.document.getText(vscode.window.activeTextEditor.selection));\r\n        // evalTerminal.sendText('\\n');\r\n    }\r\n}\r\n"],"sourceRoot":""}